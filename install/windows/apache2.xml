<?xml version="1.0" encoding="utf-8"?>
<sect1 xml:id="install.windows.apache2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Apache 2.x on Microsoft Windows</title>
 <para>
  This section contains notes and hints specific to Apache 2.x installs
  of PHP on Microsoft Windows systems.
 </para>
 <note>
  <para>
   You should read the <link linkend="install.windows.manual">manual
   installation steps</link> first!
  </para>
 </note>

 <para>
  You are strongly encouraged to consult the
  <link xlink:href="&url.apache2.docs;">Apache Documentation</link> to get
  a basic understanding of the Apache 2.x Server. Also consider
  reading the <link xlink:href="&url.apache2.windows;">Windows specific
  notes</link> for Apache 2.x before reading on here.
 </para>

 <para>
  Download the most recent version of <link xlink:href= "&url.apache;">
  Apache 2.x</link> and a fitting PHP version.
  Follow the <link linkend="install.windows.manual">Manual Installation
  Steps</link> and come back to go on with the integration of PHP and Apache.
 </para>

 <para>
  There are three ways to set up PHP to work with Apache 2.x on Windows.
  You can run PHP as a handler, as a CGI, or under FastCGI.
 </para>

 &note.apache.slashes;

 <sect2 xml:id="install.windows.apache2.module">
  <title>Installing as an Apache handler</title>
  <para>
   You need to insert the following lines into your
   Apache &httpd.conf; configuration file to load the
   PHP module for Apache 2.x:
   <example>
    <title>PHP and Apache 2.x as handler</title>
    <programlisting role="apache-conf">
     <![CDATA[
#
LoadModule php5_module "c:/php/php5apache2.dll"
AddHandler application/x-httpd-php .php
# configure the path to php.ini
PHPIniDir "C:/php"
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <simpara>
    Remember to substitute your actual path to PHP for the
    <filename>C:/php/</filename> in the above examples. Take care to use
    either <filename>php5apache2.dll</filename> or
    <filename>php5apache2_2.dll</filename> in your LoadModule directive and
    verify that the referenced file is in fact located at the file path
    that you point to in this directive.
   </simpara>
  </note>
  <para>
   The above configuration will enable PHP handling of any file that has a
   .php extension, even if there are other file extensions. For example, a
   file named <filename>example.php.txt</filename> will be executed by the
   PHP handler. To ensure that only files that <emphasis>end in</emphasis>
   <filename>.php</filename> are executed, use the following configuration
   instead:
  </para>

  <example>
   <programlisting role="apache-conf">
    <![CDATA[
 <FilesMatch \.php$>
      SetHandler application/x-httpd-php
 </FilesMatch>
]]>
   </programlisting>
  </example>
 </sect2>

 <sect2 xml:id="install.windows.apache2.cgi">
  <title>Running PHP as CGI</title>

  <para>
   You should consult the <link xlink:href="&url.apache.cgi;">Apache CGI
   documentation</link> for a more complete understanding of running CGI
   on Apache.
  </para>

  <para>
   To run PHP as CGI, you'll need to place your php-cgi files in a
   directory designated as a CGI directory using the ScriptAlias directive.
  </para>

  <para>
   You will then need to insert a #! line in the PHP files, pointing to the
   location of your PHP binary:

   <example>
    <title>PHP and Apache 2.x as CGI</title>
    <programlisting>
     <![CDATA[
#!C:/php/php.exe
<?php
  phpinfo();
?>
]]>
    </programlisting>
   </example>
  </para>
  &warn.install.cgi;
 </sect2>

 <sect2 xml:id="install.windows.apache2.fastcgi">
  <title>Running PHP under FastCGI</title>

  <para>
   Running PHP under FastCGI has a number of advantages over running it as a
   CGI. Setting it up this way is fairly straightforward:
  </para>
  <para>
   Obtain mod_fcgid from
   <link xlink:href="&url.apache.fcgid;">&url.apache.fcgid;</link>. Win32
   binaries are available for download from that site. Install the module
   according to the instructions that will come with it.
  </para>
  <para>
   Configure your web server as shown below, taking care to adjust any paths
   to reflect your how you have installed things on your particular system:

   <example>
    <title>Configure Apache to run PHP as FastCGI</title>
    <programlisting>
     <![CDATA[
LoadModule fcgid_module modules/mod_fcgid.so
# Where is your php.ini file?
FcgidInitialEnv PHPRC        "c:/php"
AddHandler fcgid-script .php
FcgidWrapper "c:/php/php-cgi.exe" .php
]]>
    </programlisting>
   </example>

   Files with a .php extension will now be executed by the PHP FastCGI
   wrapper.
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

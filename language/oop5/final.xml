<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
 <sect1 xml:id="language.oop5.final" xmlns="http://docbook.org/ns/docbook">
  <title>Final Keyword</title>
  <para>
   The final keyword prevents child classes from overriding a method, property, or constant by
   prefixing the definition with <literal>final</literal>. If the class
   itself is being defined final then it cannot be extended.
  </para>
  <para>
   <example>
    <title>Final methods example</title>
    <programlisting role="php">
<![CDATA[
<?php
class BaseClass {
   public function test() {
       echo "BaseClass::test() called\n";
   }
   
   final public function moreTesting() {
       echo "BaseClass::moreTesting() called\n";
   }
}

class ChildClass extends BaseClass {
   public function moreTesting() {
       echo "ChildClass::moreTesting() called\n";
   }
}
// Results in Fatal error: Cannot override final method BaseClass::moreTesting()
?> 
]]>
   </programlisting>
  </example>
  </para>
  <para>
   <example>
    <title>Final class example</title>
    <programlisting role="php">
<![CDATA[
<?php
final class BaseClass {
   public function test() {
       echo "BaseClass::test() called\n";
   }

   // As the class is already final, the final keyword is redundant
   final public function moreTesting() {
       echo "BaseClass::moreTesting() called\n";
   }
}

class ChildClass extends BaseClass {
}
// Results in Fatal error: Class ChildClass may not inherit from final class (BaseClass)
?> 
]]>
    </programlisting>
   </example>
  </para>
 <example>
  <title>Final property example as of PHP 8.4.0</title>
  <programlisting role="php">
<![CDATA[
<?php
class BaseClass {
   final protected string $test;
}

class ChildClass extends BaseClass {
    public string $test;
}
// Results in Fatal error: Cannot override final property BaseClass::$test
?>
]]>
  </programlisting>
 </example>
 <example xml:id="language.oop5.final.example.php81">
  <title>Final constants example as of PHP 8.1.0</title>
  <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    final public const X = "foo";
}

class Bar extends Foo
{
    public const X = "bar";
}

// Fatal error: Bar::X cannot override final constant Foo::X
?>
]]>
  </programlisting>
 </example>

  <note>
   <simpara>
    As of PHP 8.0.0, private methods may not be declared final except for the <link linkend="language.oop5.decon.constructor">constructor</link>.
   </simpara>
  </note>
  <note>
   <simpara>
    A property that is declared <link linkend="language.oop5.visibility-members-aviz"><literal>private(set)</literal></link> is implicitly <literal>final</literal>.
   </simpara>
  </note>
 </sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

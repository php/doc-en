<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
 <sect1 xml:id="language.oop5.autoload" xmlns="http://docbook.org/ns/docbook">
  <title>Autoloading Classes</title>
  <para>
   Many developers writing object-oriented applications create
   one PHP source file per class definition. One of the biggest
   annoyances is having to write a long list of needed includes
   at the beginning of each script (one for each class).
  </para>
  <para>
   The <function>spl_autoload_register</function> function registers any number of
   autoloaders, enabling for classes and interfaces to be automatically loaded
   if they are currently not defined. By registering autoloaders, PHP is given
   a last chance to load the class or interface before it fails with an error.
  </para>
  <para>
   Any class-like construct may be autoloaded the same way. That includes classes,
   interfaces, traits, and enumerations.
  </para>
  <caution>
   <para>
    Prior to PHP 8.0.0, it was possible to use <function>__autoload</function>
    to autoload classes and interfaces. However, it is a less flexible
    alternative to <function>spl_autoload_register</function> and
    <function>__autoload</function> is deprecated as of PHP 7.2.0, and removed
    as of PHP 8.0.0.
   </para>
  </caution>
  <note>
   <para>
    <function>spl_autoload_register</function> may be called multiple times in order
    to register multiple autoloaders. Throwing an exception from an autoload function,
    however, will interrupt that process and not allow further autoload functions to
    run. For that reason, throwing exceptions from an autoload function is strongly
    discouraged.
   </para>
  </note>
  <para>
   <example>
    <title>Autoload example</title>
    <para>
     This example attempts to load the classes <literal>MyClass1</literal>
     and <literal>MyClass2</literal> from the files <filename>MyClass1.php</filename>
     and <filename>MyClass2.php</filename> respectively.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
spl_autoload_register(function ($class_name) {
    include $class_name . '.php';
});

$obj  = new MyClass1();
$obj2 = new MyClass2(); 
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Autoload other example</title>
    <para>
     This example attempts to load the interface <literal>ITest</literal>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

spl_autoload_register(function ($name) {
    var_dump($name);
});

class Foo implements ITest {
}

/*
string(5) "ITest"

Fatal error: Interface 'ITest' not found in ...
*/
?>
]]>
    </programlisting>
   </example>
  </para>

  <simplesect role="seealso">
   &reftitle.seealso;
   <para>
    <simplelist>
     <member><function>unserialize</function></member>
     <member><link linkend="ini.unserialize-callback-func">unserialize_callback_func</link></member>
     <member><function>spl_autoload_register</function></member>
     <member><function>spl_autoload</function></member>
     <member><function>__autoload</function></member>
    </simplelist>
   </para>
  </simplesect>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

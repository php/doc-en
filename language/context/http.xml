<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="context.http" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>HTTP context options</refname>
  <refpurpose>HTTP context option listing</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   Context options for <literal>http://</literal> and <literal>https://</literal>
   transports.
  </para>
 </refsect1>

 <refsect1 role="options"><!-- {{{ -->
  &reftitle.options;
  <para>
   <variablelist>
    <varlistentry xml:id="context.http.method">
     <term>
      <parameter>method</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       <constant>GET</constant>, <constant>POST</constant>, or
       any other HTTP method supported by the remote server.
      </para>
      <para>
       Defaults to <constant>GET</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.header">
     <term>
      <parameter>header</parameter>
      <type>array</type> or <type>string</type>
     </term>
     <listitem>
      <para>
       Additional headers to be sent during request. Values
       in this option will override other values (such as
       <literal>User-agent:</literal>, <literal>Host:</literal>,
       and <literal>Authentication:</literal>),
       even when following <literal>Location:</literal> redirects.
       Thus it is not recommended to set a <literal>Host:</literal> header,
       if <parameter>follow_location</parameter> is enabled.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.user-agent">
     <term>
      <parameter>user_agent</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Value to send with <literal>User-Agent:</literal> header. This value will
       only be used if user-agent is <emphasis>not</emphasis> specified
       in the <literal>header</literal> context option above.
      </para>
      <para>
       By default the
       <link linkend="ini.user-agent">user_agent</link>
       &php.ini; setting is used.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.content">
     <term>
      <parameter>content</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Additional data to be sent after the headers. Typically used
       with POST or PUT requests.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.proxy">
     <term>
      <parameter>proxy</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       URI specifying address of proxy server. (e.g.
       <literal>tcp://proxy.example.com:5100</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.request-fulluri">
     <term>
      <parameter>request_fulluri</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       When set to &true;, the entire URI will be used when
       constructing the request.  (e.g.
       <literal>GET http://www.example.com/path/to/file.html HTTP/1.0</literal>).
       While this is a non-standard request format, some
       proxy servers require it.
      </para>
      <para>
       Defaults to &false;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.follow-location">
     <term>
      <parameter>follow_location</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Follow <literal>Location</literal> header redirects. Set to
       <literal>0</literal> to disable.
      </para>
      <para>
       Defaults to <literal>1</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.max-redirects">
     <term>
      <parameter>max_redirects</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       The max number of redirects to follow. Value <literal>1</literal> or
       less means that no redirects are followed.
      </para>
      <para>
       Defaults to <literal>20</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.protocol-version">
     <term>
      <parameter>protocol_version</parameter>
      <type>float</type>
     </term>
     <listitem>
      <para>
       HTTP protocol version.
      </para>
      <para>
       Defaults to <literal>1.1</literal> as of PHP 8.0.0;
       prior to that version the default was <literal>1.0</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.timeout">
     <term>
      <parameter>timeout</parameter>
      <type>float</type>
     </term>
     <listitem>
      <para>
       Read timeout in seconds, specified by a <type>float</type>
       (e.g. <literal>10.5</literal>).
      </para>
      <para>
       By default the
       <link linkend="ini.default-socket-timeout">default_socket_timeout</link>
       &php.ini; setting is used.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="context.http.ignore-errors">
     <term>
      <parameter>ignore_errors</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Fetch the content even on failure status codes.
      </para>
      <para>
       Defaults to &false;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <para>
   <example xml:id="context.http.example-post"><!-- {{{ -->
    <title>Fetch a page and send POST data</title>
    <programlisting role="php">
<![CDATA[
<?php

$postdata = http_build_query(
    array(
        'var1' => 'some content',
        'var2' => 'doh'
    )
);

$opts = array('http' =>
    array(
        'method'  => 'POST',
        'header'  => 'Content-type: application/x-www-form-urlencoded',
        'content' => $postdata
    )
);

$context = stream_context_create($opts);

$result = file_get_contents('http://example.com/submit.php', false, $context);

?>
]]>
    </programlisting>
   </example><!-- }}} -->
  </para>
  <para>
   <example xml:id="context.http.example-fetch-ignore-redirect"><!-- {{{ -->
    <title>Ignore redirects but fetch headers and content </title>
    <programlisting role="php">
<![CDATA[
<?php

$url = "http://www.example.org/header.php";

$opts = array('http' =>
    array(
        'method' => 'GET',
        'max_redirects' => '0',
        'ignore_errors' => '1'
    )
);

$context = stream_context_create($opts);
$stream = fopen($url, 'r', false, $context);

// header information as well as meta data
// about the stream
var_dump(stream_get_meta_data($stream));

// actual data at $url
var_dump(stream_get_contents($stream));
fclose($stream);
?>
]]>
    </programlisting>
   </example><!-- }}} -->
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Underlying socket stream context options</title>
   <simpara>
    Additional context options may be supported by the
    <link linkend="transports.inet">underlying transport</link>
    For <literal>http://</literal> streams, refer to context
    options for the <literal>tcp://</literal> transport.  For
    <literal>https://</literal> streams, refer to context options
    for the <literal>ssl://</literal> transport.
   </simpara>
  </note>
  <note>
   <title>HTTP status line</title>
   <simpara>
    When this stream wrapper follows a redirect, the
    <literal>wrapper_data</literal> returned by
    <function>stream_get_meta_data</function> might not necessarily contain
    the HTTP status line that actually applies to the content data at index
    <literal>0</literal>.
   </simpara>
   <screen>
<![CDATA[
array (
  'wrapper_data' =>
  array (
    0 => 'HTTP/1.0 301 Moved Permanently',
    1 => 'Cache-Control: no-cache',
    2 => 'Connection: close',
    3 => 'Location: http://example.com/foo.jpg',
    4 => 'HTTP/1.1 200 OK',
    ...
]]>
   </screen>
   <simpara>
    The first request returned a <literal>301</literal> (permanent redirect),
    so the stream wrapper automatically followed the redirect to get a
    <literal>200</literal> response (index = <literal>4</literal>).
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="wrappers.http" /></member>
    <member><xref linkend="context.socket" /></member>
    <member><xref linkend="context.ssl" /></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


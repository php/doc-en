<?xml version="1.0" encoding="utf-8"?>
 <!-- $Revision$ -->
<sect2 xml:id="internals2.ze1.zendapi.intro" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Introduction</title>

 <para>Those who know don't talk.</para>
 <para>Those who talk don't know.</para>
 <para/>

 <para>
  Sometimes, PHP "as is" simply isn't enough. Although these cases are rare
  for the average user, professional applications will soon lead PHP to the edge
  of its capabilities, in terms of either speed or functionality. New
  functionality cannot always be implemented natively due to language
  restrictions and inconveniences that arise when having to carry around a huge
  library of default code appended to every single script, so another method
  needs to be found for overcoming these eventual lacks in PHP.
 </para>
 <para>
  As soon as this point is reached, it's time to touch the heart of PHP
  and take a look at its core, the C code that makes PHP go.
 </para>
 <warning>
  <para>
   This information is currently rather outdated,
   parts of it only cover early stages of the ZendEngine 1.0 API
   as it was used in early versions of PHP 4.
  </para>
  <para>
   More recent information may be found in the various README files that
   come with the PHP source and the
   <link xlink:href="&url.zend.internals;">Internals</link>
   section on the Zend website.
  </para>
 </warning>
</sect2>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="streamwrapper.stream-open" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>streamWrapper::stream_open</refname>
  <refpurpose>Opens file or URL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>streamWrapper::stream_open</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
   <methodparam><type>int</type><parameter>options</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter role="reference">opened_path</parameter></methodparam>
  </methodsynopsis>
  <para>
   This method is called immediately after the wrapper is initialized (f.e. by
   <function>fopen</function> and <function>file_get_contents</function>).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       Specifies the URL that was passed to the original function.
      </para>
      <note>
       <para>
        The URL can be broken apart with <function>parse_url</function>.  Note that only URLs
        delimited by :// are supported. : and :/ while technically valid URLs, are not.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       The mode used to open the file, as detailed for <function>fopen</function>.
      </para>
      <note>
       <para>
        Remember to check if the <parameter>mode</parameter> is valid for the
        <parameter>path</parameter> requested.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Holds additional flags set by the streams API. It can hold one or more
       of the following values OR'd together.
       <informaltable>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Flag</entry>
           <entry>Description</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>STREAM_USE_PATH</constant></entry>
           <entry>If <parameter>path</parameter> is relative, search
            for the resource using the include_path.
           </entry>
          </row>
          <row>
           <entry><constant>STREAM_REPORT_ERRORS</constant></entry>
           <entry>If this flag is set, you are responsible for raising
            errors using <function>trigger_error</function> during
            opening of the stream.  If this flag is not set, you
            should not raise any errors.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>opened_path</parameter></term>
     <listitem>
      <para>
       If the <parameter>path</parameter> is opened successfully,
       and <constant>STREAM_USE_PATH</constant> is set in <parameter>options</parameter>,
       <parameter>opened_path</parameter> should be set to the full
       path of the file/resource that was actually opened.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors"><!-- {{{ -->
  &reftitle.errors;
  &userstream.not.implemented.warning;
 </refsect1><!-- }}} -->
 

<!-- {{{
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>streamWrapper::stream_open</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
/* ... */
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
...
]]>
    </screen>
   </example>
  </para>
 </refsect1>
}}}-->

 <refsect1 role="notes"><!-- {{{ -->
  &reftitle.notes;
  &userstream.updates.context;
 </refsect1><!-- }}} -->
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fopen</function></member>
    <member><function>parse_url</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

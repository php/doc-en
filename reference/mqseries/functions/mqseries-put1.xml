<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.mqseries-put1" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mqseries_put1</refname>
  <refpurpose>MQSeries MQPUT1</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>mqseries_put1</methodname>
   <methodparam><type>resource</type><parameter>hconn</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">objDesc</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">msgDesc</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">pmo</parameter></methodparam>
   <methodparam><type>string</type><parameter>buffer</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">compCode</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">reason</parameter></methodparam>
  </methodsynopsis>
  <para>
   The
   <function>mqseries_put1</function>
   (MQPUT1) call puts one message on a queue. The queue need not be open.
  </para>
  <para>
   You can use both the <function>mqseries_put</function> and <function>mqseries_put1</function>
   calls to put messages on a queue; which call to use depends on the circumstances.
   Use the <function>mqseries_put</function> (MQPUT) call to place multiple messages on the same queue.
   Use the <function>mqseries_put1</function> (MQPUT1) call to put only one message on a queue.
   This call encapsulates the MQOPEN, MQPUT, and MQCLOSE calls into a single call, minimizing the
   number of calls that must be issued.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>hConn</parameter>
     </term>
     <listitem>
      <para>Connection handle.</para>
      <para>This handle represents the connection to the queue manager.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>objDesc</parameter>
     </term>
     <listitem>
      <para>Object descriptor. (MQOD)</para>
      <para>
       This is a structure which identifies the queue to which the message is
       added.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>msgDesc</parameter>
     </term>
     <listitem>
      <para>Message descriptor (MQMD).</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>pmo</parameter>
     </term>
     <listitem>
      <para>Put message options (MQPMO).</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <parameter>compCode</parameter>
     </term>
     <listitem>
      <para>Completion code.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>reason</parameter>
     </term>
     <listitem>
      <para>Reason code qualifying the compCode.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>&return.void;</para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mqseries_conn</function></member>
    <member><function>mqseries_connx</function></member>
    <member><function>mqseries_open</function></member>
    <member><function>mqseries_get</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
-->

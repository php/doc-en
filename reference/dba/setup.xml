<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1.2.1 $ -->

<chapter xml:id="dba.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <!-- {{{ Requirements -->
 <section xml:id="dba.requirements">
  &reftitle.required;
  <para>
   The behaviour of various aspects depends on the implementation of the
   underlying database. Functions such as <function>dba_optimize</function>
   and <function>dba_sync</function> will do what they promise for one
   database and will do nothing for others. You have to download and install
   supported dba-Handlers.
  <table>
   <title>List of DBA handlers</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Handler</entry>
      <entry>Notes</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><literal>dbm</literal></entry>
      <entry>
       Dbm is the oldest (original) type of Berkeley DB style
       databases. You should avoid it, if possible. We do not support
       the compatibility functions built into DB2 and gdbm, because
       they are only compatible on the source code level, but cannot
       handle the original dbm format.
      </entry>
     </row>

     <row>
      <entry><literal>ndbm</literal></entry>
      <entry>
       Ndbm is a newer type and more flexible than dbm. It still has
       most of the arbitrary limits of dbm (therefore it is
       deprecated).
      </entry>
     </row>

     <row>
      <entry><literal>gdbm</literal></entry>
      <entry>
       Gdbm is the <link xlink:href="&url.gdbm;">GNU database
       manager</link>.
      </entry>
     </row>

     <row>
      <entry><literal>db2</literal></entry>
      <entry>
       DB2 is <link xlink:href="&url.sleepycat;">Sleepycat Software's
       DB2</link>. It is described as "a programmatic toolkit that
       provides high-performance built-in database support for both
       standalone and client/server applications.
      </entry>
     </row>

     <row>
      <entry><literal>db3</literal></entry>
      <entry>
       DB3 is <link xlink:href="&url.sleepycat;">Sleepycat Software's
       DB3</link>.
      </entry>
     </row>

     <row>
      <entry><literal>db4</literal></entry>
      <entry>
       DB4 is <link xlink:href="&url.sleepycat;">Sleepycat Software's
       DB4</link>. This is available since PHP 4.3.2.
      </entry>
     </row>

     <row>
      <entry><literal>cdb</literal></entry>
      <entry>
       Cdb is "a fast, reliable, lightweight package for creating and
       reading constant databases." It is from the author of qmail and
       can be found at <link xlink:href="&url.cdb;">&url.cdb;</link>. Since it is
       constant, we support only reading operations. And since PHP 4.3.0
       we support writing (not updating) through the internal cdb library.
      </entry>
     </row>

     <row>
      <entry><literal>cdb_make</literal></entry>
      <entry>
       Since PHP 4.3.0 we support creation (not updating) of cdb files 
       when the bundled cdb library is used.
      </entry>
     </row>

     <row>
      <entry><literal>flatfile</literal></entry>
      <entry>
       This is available since PHP 4.3.0 for compatibility with the deprecated
       <link linkend="ref.dbm">dbm</link> extension only and should be avoided. 
       However you may use this where files were created in this format. That
       happens when configure could not find any external library.
      </entry>
     </row>

     <row>
      <entry><literal>inifile</literal></entry>
      <entry>
       This is available since PHP 4.3.3 to be able to modify php.ini files 
       from within PHP scripts. When working with ini files you can pass arrays 
       of the form array(0=>group,1=>value_name) or strings of the form 
       "[group]value_name" where group is optional. As the functions 
       <function>dba_firstkey</function> and <function>dba_nextkey</function>
       return string representations of the key there is a new function
       <function>dba_key_split</function> available since PHP 5 which allows
       to convert the string keys into array keys without loosing &false;.
      </entry>
     </row>

     <row>
      <entry><literal>qdbm</literal></entry>
      <entry>
       This is available since PHP 5.0.0. The qdbm library can be loaded from
       <link xlink:href="http://qdbm.sourceforge.net">http://qdbm.sourceforge.net</link>.
      </entry>
     </row>

    </tbody>
   </tgroup>
  </table>
  </para>
  <para>
   When invoking the <function>dba_open</function> or
   <function>dba_popen</function> functions, one of the
   handler names must be supplied as an argument. The actually
   available list of handlers is displayed by invoking
   <function>phpinfo</function> or <function>dba_handlers</function>.
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Installation -->
 &reference.dba.configure;
 <!-- }}} -->

 <!-- {{{ Configuration -->
 <section xml:id="dba.configuration">
  &reftitle.runtime;
  &no.config;
 </section>
 <!-- }}} -->

 <!-- {{{ Resources -->
 <section xml:id="dba.resources">
  &reftitle.resources;
  <para>
  The functions <function>dba_open</function> and
  <function>dba_popen</function> return a handle to the specified
  database file to access which is used by all other dba-function calls.
  </para>
 </section>
 <!-- }}} -->

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


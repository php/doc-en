<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.error-reporting">
 <refnamediv>
  <refname>error_reporting</refname>
  <refpurpose>Sets which PHP errors are reported</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>error_reporting</methodname>
   <methodparam choice="opt"><type>int</type><parameter>level</parameter></methodparam>
  </methodsynopsis>
  <para>
   The <function>error_reporting</function> function sets the
   <link linkend="ini.error-reporting">error_reporting</link>
   directive at runtime.  PHP has many levels of errors, using
   this function sets that level for the duration (runtime) of
   your script. If the optional <parameter>level</parameter> is
   not set, <function>error_reporting</function> will just return
   the current error reporting level.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>level</parameter></term>
     <listitem>
      <para>
       The new <link linkend="ini.error-reporting">error_reporting</link>
       level. It takes on either a bitmask, or named constants. Using named 
       constants is strongly encouraged to ensure compatibility for future 
       versions. As error levels are added, the range of integers increases, 
       so older integer-based error levels will not always behave as expected.
      </para>
      <para>
       The available error level constants and the actual
       meanings of these error levels are described in the
       <link linkend="errorfunc.constants">predefined constants</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the old <link linkend="ini.error-reporting">error_reporting</link>
   level or the current level if no <parameter>level</parameter> parameter is
   given.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>error_reporting</function> examples</title>
    <programlisting role="php">
<![CDATA[
<?php

// Turn off all error reporting
error_reporting(0);

// Report simple running errors
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Reporting E_NOTICE can be good too (to report uninitialized
// variables or catch variable name misspellings ...)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Report all errors except E_NOTICE
error_reporting(E_ALL & ~E_NOTICE);

// Report all PHP errors (see changelog)
error_reporting(E_ALL);

// Report all PHP errors
error_reporting(-1);

// Same as error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <simpara>
    Most of <constant>E_STRICT</constant> errors are evaluated at the
    compile time thus such errors are not reported in the file where
    <link linkend="ini.error-reporting">error_reporting</link> is enhanced
    to include <constant>E_STRICT</constant> errors (and vice versa).
   </simpara>
  </warning>
  <tip>
   <simpara>
    Passing in the value <literal>-1</literal> will show every possible error,
    even when new levels and constants are added in future PHP versions. The
    <constant>E_ALL</constant> constant also behaves this way as of PHP 5.4.
   </simpara>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>The <link linkend="ini.display-errors">display_errors</link> directive</member>
    <member>The <link linkend="ini.html-errors">html_errors</link> directive</member>
    <member>The <link linkend="ini.xmlrpc-errors">xmlrpc_errors</link> directive</member>
    <member><function>ini_set</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

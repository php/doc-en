<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.forward-static-call-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>forward_static_call_array</refname>
  <refpurpose>Call a static method and pass the arguments as array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>forward_static_call_array</methodname>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam><type>array</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   Calls a user defined function or method given by the <parameter>callback</parameter>
   parameter. This function must be called within a method context, it can't be 
   used outside a class.
   It uses the <link linkend="language.oop5.late-static-bindings">late static
   binding</link>.
   All arguments of the forwarded method are passed as values,
   and as an array, similarly to <function>call_user_func_array</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       The function or method to be called. This parameter may be an &array;,
       with the name of the class, and the method, or a &string;, with a function
       name.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
     <listitem>
      <para>
       One parameter, gathering all the method parameter in one array.
      </para>
      <note>
       <para>
        Note that the parameters for <function>forward_static_call_array</function> are
        not passed by reference.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the function result, or &false; on error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>forward_static_call_array</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

class A
{
    const NAME = 'A';
    public static function test() {
        $args = func_get_args();
        echo static::NAME, " ".join(',', $args)." \n";
    }
}

class B extends A
{
    const NAME = 'B';

    public static function test() {
        echo self::NAME, "\n";
        forward_static_call_array(array('A', 'test'), array('more', 'args'));
        forward_static_call_array( 'test', array('other', 'args'));
    }
}

B::test('foo');

function test() {
        $args = func_get_args();
        echo "C ".join(',', $args)." \n";
    }

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
B
B more,args 
C other,args
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>forward_static_call</function></member>
    <member><function>call_user_func</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>is_callable</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

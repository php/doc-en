<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.ftp-nb-put" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ftp_nb_put</refname>
  <refpurpose>Stores a file on the FTP server (non-blocking)</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>ftp_nb_put</methodname>
   <methodparam><type>FTP\Connection</type><parameter>ftp</parameter></methodparam>
   <methodparam><type>string</type><parameter>remote_filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>local_filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>FTP_BINARY</constant></initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>ftp_nb_put</function> stores a local file on the FTP server.
  </para>
  <para>
   The difference between this function and the <function>ftp_put</function>
   is that this function uploads the file asynchronously, so your program can
   perform other operations while the file is being uploaded.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ftp</parameter></term>
     <listitem>
       &ftp.parameter.ftp;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>remote_filename</parameter></term>
     <listitem>
      <para>
       The remote file path.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>local_filename</parameter></term>
     <listitem>
      <para>
       The local file path.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       The transfer mode. Must be either <constant>FTP_ASCII</constant> or
       <constant>FTP_BINARY</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>The position in the remote file to start uploading to.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns <constant>FTP_FAILED</constant> or <constant>FTP_FINISHED</constant>
   or <constant>FTP_MOREDATA</constant>, or &false; on failure to open the local file.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &ftp.changelog.ftp-param;
     <row>
      <entry>7.3.0</entry>
      <entry>
       The <parameter>mode</parameter> parameter is now optional. Formerly it
       has been mandatory.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>ftp_nb_put</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

// Initiate the Upload
$ret = ftp_nb_put($ftp, "test.remote", "test.local", FTP_BINARY);
while ($ret == FTP_MOREDATA) {
   
   // Do whatever you want
   echo ".";

   // Continue uploading...
   $ret = ftp_nb_continue($ftp);
}
if ($ret != FTP_FINISHED) {
   echo "There was an error uploading the file...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Resuming an upload with <function>ftp_nb_put</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Initiate
$ret = ftp_nb_put($ftp, "test.remote", "test.local", 
                      FTP_BINARY, ftp_size("test.remote"));
// OR: $ret = ftp_nb_put($ftp, "test.remote", "test.local", 
//                           FTP_BINARY, FTP_AUTORESUME);

while ($ret == FTP_MOREDATA) {
   
   // Do whatever you want
   echo ".";

   // Continue uploading...
   $ret = ftp_nb_continue($ftp);
}
if ($ret != FTP_FINISHED) {
   echo "There was an error uploading the file...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ftp_nb_fput</function></member>
    <member><function>ftp_nb_continue</function></member>
    <member><function>ftp_put</function></member>
    <member><function>ftp_fput</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

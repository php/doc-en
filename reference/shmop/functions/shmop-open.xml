<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.shmop-open" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>shmop_open</refname>
  <refpurpose>Create or open shared memory block</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Shmop</type><type>false</type></type><methodname>shmop_open</methodname>
   <methodparam><type>int</type><parameter>key</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
   <methodparam><type>int</type><parameter>permissions</parameter></methodparam>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>shmop_open</function> can create or open a shared memory block.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       System's id for the shared memory block.
       Can be passed as a decimal or hex.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       The flags that you can use:
       <itemizedlist>
        <listitem>
         <simpara>
          "a" for access (sets SHM_RDONLY for shmat)
          use this flag when you need to open an existing shared memory
          segment for read only
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          "c" for create (sets IPC_CREATE)
          use this flag when you need to create a new shared memory segment
          or if a segment with the same key exists, try to open it for read
          and write
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          "w" for read &amp; write access
          use this flag when you need to read and write to a shared memory
          segment, use this flag in most cases.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          "n" create a new memory segment (sets IPC_CREATE|IPC_EXCL)
          use this flag when you want to create a new shared memory segment
          but if one already exists with the same flag, fail. This is useful
          for security purposes, using this you can prevent race condition
          exploits.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>permissions</parameter></term>
     <listitem>
      <para>
       The permissions that you wish to assign to your memory segment, those
       are the same as permission for a file. Permissions need to be passed
       in octal form, like for example <literal>0644</literal>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>
       The size of the shared memory block you wish to create in bytes
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <note>
    <para>
     Note: the 3rd and 4th should be entered as 0 if you are opening an
     existing memory segment.
    </para>
   </note>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   On success <function>shmop_open</function> will return a <classname>Shmop</classname> instance that you can
   use to access the shared memory segment you've created. &false; is
   returned on failure.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       On success, this function returns an <classname>Shmop</classname> instance now;
       previously, a <type>resource</type> was returned.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Create a new shared memory block</title>
    <programlisting role="php">
<![CDATA[
<?php
$shm_key = ftok(__FILE__, 't');
$shm_id = shmop_open($shm_key, "c", 0644, 100);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   This example opened a shared memory block with a system id returned by
   <function>ftok</function>.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>shmop_close</function></member>
    <member><function>shmop_delete</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

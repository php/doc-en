<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.52 -->
<refentry xml:id="function.pg-field-type" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_field_type</refname> 
  <refpurpose>
   Returns the type name for the corresponding field number
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>pg_field_type</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam><type>int</type><parameter>field_number</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_field_type</function> returns a string containing the
   base type name of the given <parameter>field_number</parameter> in the
   given PostgreSQL <parameter>result</parameter> resource.
  </para>
  <note>
   <para>
    If the field uses a PostgreSQL domain (rather than a basic type), it is
    the name of the domain's underlying type that is returned, rather than the 
    name of the domain itself.
   </para>
  </note>
  <note>
   <para>
    This function used to be called <function>pg_fieldtype</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       PostgreSQL query result resource, returned by <function>pg_query</function>,
       <function>pg_query_params</function> or <function>pg_execute</function>
       (among others).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>field_number</parameter></term>
      <listitem>
       <para>
        Field number, starting from 0.
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A <type>string</type> containing the base name of the field's type, or &false;
   on error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Getting information about fields</title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");

  // Assume 'title' is a varchar type
  $res = pg_query($dbconn, "select title from authors where author = 'Orwell'");

  echo "Title field type: ", pg_field_type($res, 0);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Title field type: varchar
]]>
    </screen>
   </example> 
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_field_prtlen</function></member>
    <member><function>pg_field_name</function></member>
    <member><function>pg_field_type_oid</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<refentry xml:id="function.db2-procedure-columns" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>db2_procedure_columns</refname>
  <refpurpose>
   Returns a result set listing stored procedure parameters
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>db2_procedure_columns</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>qualifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>schema</parameter></methodparam>
   <methodparam><type>string</type><parameter>procedure</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>parameter</parameter></methodparam>
  </methodsynopsis>

  <para>
   Returns a result set listing the parameters for one or more stored
   procedures.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       A valid connection to an IBM DB2, Cloudscape, or Apache Derby database.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>qualifier</parameter></term>
     <listitem>
      <para>
       A qualifier for DB2 databases running on OS/390 or z/OS servers. For
       other databases, pass &null; or an empty string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>schema</parameter></term>
     <listitem>
      <para>
       The schema which contains the procedures. This parameter accepts a
       search pattern containing <literal>_</literal> and <literal>%</literal>
       as wildcards.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>procedure</parameter></term>
     <listitem>
      <para>
       The name of the procedure. This parameter accepts a
       search pattern containing <literal>_</literal> and <literal>%</literal>
       as wildcards.
      </para>
     </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
     <listitem>
      <para>
       The name of the parameter. This parameter accepts a search pattern
       containing <literal>_</literal> and <literal>%</literal> as wildcards.
       If this parameter is &null;, all parameters for the specified stored
       procedures are returned.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a statement resource with a result set containing rows describing
   the parameters for the stored procedures matching the specified parameters.
   The rows are composed of the following columns:
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Column name</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
       <row>
        <entry>PROCEDURE_CAT</entry>
        <entry>The catalog that contains the procedure. The value is &null; if
        this table does not have catalogs.</entry>
       </row>
       <row>
        <entry>PROCEDURE_SCHEM</entry>
        <entry>Name of the schema that contains the stored procedure.</entry>
       </row>
       <row>
        <entry>PROCEDURE_NAME</entry>
        <entry>Name of the procedure.</entry>
       </row>
       <row>
        <entry>COLUMN_NAME</entry>
        <entry>Name of the parameter.</entry>
       </row>
       <row>
        <entry>COLUMN_TYPE</entry>
        <entry>
         <para>
          An integer value representing the type of the parameter:
          <informaltable>
           <tgroup cols="2">
            <thead>
             <row>
              <entry>Return value</entry>
              <entry>Parameter type</entry>
             </row>
            </thead>
            <tbody>
             <row>
              <entry>1 (SQL_PARAM_INPUT)</entry>
              <entry>Input (IN) parameter.</entry>
             </row>
             <row>
              <entry>2 (SQL_PARAM_INPUT_OUTPUT)</entry>
              <entry>Input/output (INOUT) parameter.</entry>
             </row>
             <row>
              <entry>3 (SQL_PARAM_OUTPUT)</entry>
              <entry>Output (OUT) parameter.</entry>
             </row>
            </tbody>
           </tgroup>
          </informaltable>
         </para>
        </entry>
       </row>
       <row>
        <entry>DATA_TYPE</entry>
        <entry>The SQL data type for the parameter represented as an integer
         value.</entry>
       </row>
       <row>
        <entry>TYPE_NAME</entry>
        <entry>A string representing the data type for the parameter.</entry>
       </row>
       <row>
        <entry>COLUMN_SIZE</entry>
        <entry>An integer value representing the size of the parameter.</entry>
       </row>
       <row>
        <entry>BUFFER_LENGTH</entry>
        <entry>
         Maximum number of bytes necessary to store data for this parameter.
        </entry>
       </row>
       <row>
        <entry>DECIMAL_DIGITS</entry>
        <entry>
         The scale of the parameter, or &null; where scale is not applicable.
        </entry>
       </row>
       <row>
        <entry>NUM_PREC_RADIX</entry>
        <entry>
         An integer value of either <literal>10</literal> (representing
         an exact numeric data type), <literal>2</literal> (representing an
         approximate numeric data type), or &null; (representing a data type for
         which radix is not applicable).
        </entry>
       </row>
       <row>
        <entry>NULLABLE</entry>
        <entry>An integer value representing whether the parameter is nullable
         or not.</entry>
       </row>
       <row>
        <entry>REMARKS</entry>
        <entry>Description of the parameter.</entry>
       </row>
       <row>
        <entry>COLUMN_DEF</entry>
        <entry>Default value for the parameter.</entry>
       </row>
       <row>
        <entry>SQL_DATA_TYPE</entry>
        <entry>An integer value representing the size of the parameter.</entry>
       </row>
       <row>
        <entry>SQL_DATETIME_SUB</entry>
        <entry>
         Returns an integer value representing a datetime subtype code,
         or &null; for SQL data types to which this does not apply.
        </entry>
       </row>
       <row>
        <entry>CHAR_OCTET_LENGTH</entry>
        <entry>
         Maximum length in octets for a character data type parameter, which
         matches COLUMN_SIZE for single-byte character set data, or &null; for
         non-character data types.
        </entry>
       </row>
       <row>
        <entry>ORDINAL_POSITION</entry>
        <entry>The 1-indexed position of the parameter in the CALL
         statement.</entry>
       </row>
       <row>
        <entry>IS_NULLABLE</entry>
        <entry>
         A string value where 'YES' means that the parameter accepts or
         returns &null; values and 'NO' means that the parameter does not
         accept or return &null; values.
       </entry>
       </row>
     </tbody>
    </tgroup>
   </informaltable>

  </para>
 </refsect1>

 <!-- Use when examples exist
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A <function>db2_procedure_columns</function> example</title>
    <para>
     Any text that describes the purpose of the example, or
     what goes on in the example should go here (inside the
     <example> tag, not out
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if ($anexample === true) {
    echo 'Use the PEAR Coding Standards';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Use the PEAR Coding Standards
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 -->

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_column_privileges</function></member>
    <member><function>db2_columns</function></member>
    <member><function>db2_foreign_keys</function></member>
    <member><function>db2_primary_keys</function></member>
    <member><function>db2_procedures</function></member>
    <member><function>db2_special_columns</function></member>
    <member><function>db2_statistics</function></member>
    <member><function>db2_table_privileges</function></member>
    <member><function>db2_tables</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

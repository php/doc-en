<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10.2.1 $ -->
<!-- Purpose: remote.other -->
<!-- Membership: pecl, external -->

 <reference xml:id="ref.memcache" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Memcache Functions</title>
  <titleabbrev>Memcache</titleabbrev>

  <partintro>
   <section xml:id="memcache.intro">
    &reftitle.intro;
    <para>
     Memcache module provides handy procedural and object oriented interface
     to memcached, highly effective caching daemon, which was especially
     designed to decrease database load in dynamic web applications.
    </para>
    <para>
     The Memcache module also provides a <link 
     linkend="ref.session">session</link> handler (<literal>memcache</literal>).
    </para>
    <para>
     More information about memcached can be found at <link
     xlink:href="&url.memcache;">&url.memcache;</link>.
    </para>
   </section>

   <section xml:id="memcache.requirements">
    &reftitle.required;
    <para>
     This module uses functions of <link xlink:href="&url.zlib;">zlib</link>
     to support on-the-fly data compression. Zlib is required to install
     this module.
    </para>
    <para>
     PHP 4.3.3 or newer is required to use the memcache extension.
    </para>
   </section>

   &reference.memcache.configure;
   &reference.memcache.ini;

   <section xml:id="memcache.resources">
    &reftitle.resources;
    <para>
     There is only one resource type used in memcache module - it's
     the link identifier for a cache server connection.
    </para>
   </section>

   &reference.memcache.constants;

   <section xml:id="memcache.examples">
   &reftitle.examples;
    <para>
     <example>
      <title>memcache extension overview example</title>
      <para>
       In this example, an object is being saved in the cache and then
       retrieved back. Object and other non-scalar types are serialized
       before saving, so it's impossible to store resources (i.e. connection
       identifiers and others) in the cache.
      </para>
      <programlisting role="php">
<![CDATA[
<?php

$memcache = new Memcache;
$memcache->connect('localhost', 11211) or die ("Could not connect");

$version = $memcache->getVersion();
echo "Server's version: ".$version."<br/>\n";

$tmp_object = new stdClass;
$tmp_object->str_attr = 'test';
$tmp_object->int_attr = 123;

$memcache->set('key', $tmp_object, false, 10) or die ("Failed to save data at the server");
echo "Store data in the cache (data will expire in 10 seconds)<br/>\n";

$get_result = $memcache->get('key');
echo "Data from the cache:<br/>\n";

var_dump($get_result);

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Using memcache session handler</title>
      <programlisting role="php">
<![CDATA[
<?php

$session_save_path = "tcp://$host:$port?persistent=1&weight=2&timeout=2&retry_interval=10,  ,tcp://$host:$port  ";
ini_set('session.save_handler', 'memcache');
ini_set('session.save_path', $session_save_path);

?>
]]>
      </programlisting>
     </example>
    </para>
   </section>

  </partintro>

  &reference.memcache.functions.entities;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

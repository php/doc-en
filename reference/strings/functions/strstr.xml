<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strstr">
 <refnamediv>
  <refname>strstr</refname>
  <refpurpose>Find the first occurrence of a string</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strstr</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>before_needle</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Returns part of <parameter>haystack</parameter> string starting from and including the first
   occurrence of <parameter>needle</parameter> to the end of
   <parameter>haystack</parameter>.
  </para>
  <note>
   <para>
    This function is case-sensitive. For case-insensitive searches, use
    <function>stristr</function>.
   </para>
  </note>
  <note>
   <para>
    If you only want to determine if a particular <parameter>needle</parameter>
    occurs within <parameter>haystack</parameter>, use the faster and less memory
    intensive function <function>strpos</function> instead.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       The input string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      &strings.parameter.needle.non-string;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>before_needle</parameter></term>
     <listitem>
      <para>
       If &true;, <function>strstr</function> returns
       the part of the <parameter>haystack</parameter> before the first
       occurrence of the <parameter>needle</parameter> (excluding the needle).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the portion of string, or &false; if <parameter>needle</parameter>
   is not found.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strstr</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$email  = 'name@example.com';
$domain = strstr($email, '@');
echo $domain; // prints @example.com

$user = strstr($email, '@', true); // As of PHP 5.3.0
echo $user; // prints name
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stristr</function></member>
    <member><function>strrchr</function></member>
    <member><function>strpos</function></member>
    <member><function>strpbrk</function></member>
    <member><function>preg_match</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

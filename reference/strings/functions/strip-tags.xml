<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strip-tags">
 <refnamediv>
  <refname>strip_tags</refname>
  <refpurpose>Strip HTML and PHP tags from a string</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strip_tags</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>allowable_tags</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function tries to return a string with all NULL bytes, HTML and PHP tags stripped
   from a given <parameter>str</parameter>.  It uses the same tag stripping
   state machine as the <function>fgetss</function> function.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       The input string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allowable_tags</parameter></term>
     <listitem>
      <para>
       You can use the optional second parameter to specify tags which should
       not be stripped.
       These are either given as &string;, or as of PHP 7.4.0, as &array;.
       Refer to the example below regarding the format of this parameter.
      </para>
      <note>
       <para>
        HTML comments and PHP tags are also stripped. This is hardcoded and
        can not be changed with <parameter>allowable_tags</parameter>.
       </para>
      </note>
      <note>
       <para>
        In PHP 5.3.4 and later, self-closing
        XHTML tags are ignored and only non-self-closing tags should be used in
        <parameter>allowable_tags</parameter>. For example,
        to allow both <literal>&lt;br&gt;</literal> and
        <literal>&lt;br/&gt;</literal>, you should use:
       </para>
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
strip_tags($input, '<br>');
?>
]]>
        </programlisting>
       </informalexample>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the stripped string.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.4.0</entry>
       <entry>
        The <parameter>allowable_tags</parameter> now alternatively accepts an &array;.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strip_tags</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$text = '<p>Test paragraph.</p><!-- Comment --> <a href="#fragment">Other text</a>';
echo strip_tags($text);
echo "\n";

// Allow <p> and <a>
echo strip_tags($text, '<p><a>');

// as of PHP 7.4.0 the line above can be written as:
// echo strip_tags($text, ['p', 'a']);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Test paragraph. Other text
<p>Test paragraph.</p> <a href="#fragment">Other text</a>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    This function should not be used to try to prevent XSS attacks.
    Use more appropriate functions like <function>htmlspecialchars</function>
    or other means depending on the context of the output.
   </para>
  </warning>  
  <warning>
   <para>
    Because <function>strip_tags</function> does not actually validate the
    HTML, partial or broken tags can result in the removal of more
    text/data than expected.
   </para>
  </warning>
  <warning>
   <para>
    This function does not modify any attributes on the tags that you allow
    using <parameter>allowable_tags</parameter>, including the
    <literal>style</literal> and <literal>onmouseover</literal> attributes
    that a mischievous user may abuse when posting text that will be shown
    to other users.
   </para>
  </warning>
  <note>
   <para>
    Tag names within the input HTML that are greater than 1023 bytes in length
    will be treated as though they are invalid, regardless of the
    <parameter>allowable_tags</parameter> parameter.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>htmlspecialchars</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

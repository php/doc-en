<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6.2.2 $ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strtr" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtr</refname>
  <refpurpose>Translate certain characters</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>array</type><parameter>replace_pairs</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function returns a copy of <parameter>str</parameter>,
   translating all occurrences of each character in
   <parameter>from</parameter> to the corresponding character in
   <parameter>to</parameter>.
  </para>
  <para>
   If <parameter>from</parameter> and <parameter>to</parameter> are
   different lengths, the extra characters in the longer of the two
   are ignored.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       The <type>string</type> being translated.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
       The <type>string</type> being translated to <parameter>to</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
       The <type>string</type> replacing <parameter>from</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace_pairs</parameter></term>
     <listitem>
      <para>
       The <parameter>replace_pairs</parameter> parameter may be used as a substitute for 
       <parameter>to</parameter> and <parameter>from</parameter> in which case it's an
       <type>array</type> in the form <literal>array('from' => 'to', ...)</literal>. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   This function returns a copy of <parameter>str</parameter>,
   translating all occurrences of each character in
   <parameter>from</parameter> to the corresponding character in
   <parameter>to</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.0</entry>
       <entry>
        The optional <parameter>to</parameter> and <parameter>from</parameter>
        parameters were added.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strtr</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$addr = strtr($addr, "дец", "aao");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <function>strtr</function> may be called with only two
   arguments. If called with two arguments it behaves in a new way:
   <parameter>from</parameter> then has to be an array that contains
   string -> string pairs that will be replaced in the source
   string. <function>strtr</function> will always look for the
   longest possible match first and will *NOT* try to replace stuff
   that it has already worked on.
  </para>
  <example>
   <title><function>strtr</function> example with two arguments</title>
    <programlisting role="php">
<![CDATA[
<?php
$trans = array("hello" => "hi", "hi" => "hello");
echo strtr("hi all, I said hello", $trans);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
hello all, I said hi
]]>
    </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ereg_replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

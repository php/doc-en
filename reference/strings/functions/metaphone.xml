<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.metaphone" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>metaphone</refname>
  <refpurpose>Calculate the metaphone key of a string</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>metaphone</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>max_phonemes</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Calculates the metaphone key of <parameter>string</parameter>.
  </para>
  <para>
   Similar to <function>soundex</function> metaphone creates the same key for
   similar sounding words. It's more accurate than
   <function>soundex</function> as it knows the basic rules of English
   pronunciation.  The metaphone generated keys are of variable length.
  </para>
  <para>
   Metaphone was developed by Lawrence Philips
   &lt;lphilips at verity dot com&gt;. It is described in ["Practical
   Algorithms for Programmers", Binstock &amp; Rex, Addison Wesley,
   1995].
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       The input string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>max_phonemes</parameter></term>
     <listitem>
      <para>
       This parameter restricts the returned metaphone key to 
       <parameter>max_phonemes</parameter> <emphasis>characters</emphasis> in length.
       However, the resulting phonemes are always transcribed completely, so the
       resulting string length may be slightly longer than <parameter>max_phonemes</parameter>.
       The default value of <literal>0</literal> means no restriction.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the metaphone key as a string.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       The function returned &false; on failure.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <para>
   <example xml:id="metaphone.example.basic"><!-- {{{ -->
    <title><function>metaphone</function> basic example</title>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(metaphone('programming'));
var_dump(metaphone('programmer'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(7) "PRKRMNK"
string(6) "PRKRMR"
]]>
    </screen>
   </example><!-- }}} -->
  </para>
  <para>
   <example xml:id="metaphone.example.phonemes"><!-- {{{ -->
    <title>Using the <parameter>max_phonemes</parameter> parameter</title>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(metaphone('programming', 5));
var_dump(metaphone('programmer', 5));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(5) "PRKRM"
string(5) "PRKRM"
]]>
    </screen>
   </example><!-- }}} -->
  </para>
  <para>
   <example xml:id="metaphone.example.phonemes-overlong">
    <title>Using the <parameter>max_phonemes</parameter> parameter</title>
    <simpara>
     In this example, <function>metaphone</function> is advised to produce a string
     of five characters, but that would require to split the final phoneme
     (<literal>'x'</literal> is supposed to be transcribed to <literal>'KS'</literal>),
     so the function returns a string with six characters.
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(metaphone('Asterix', 5));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(6) "ASTRKS"
]]>
    </screen>
   </example>
  </para>
 </refsect1><!-- }}} -->

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

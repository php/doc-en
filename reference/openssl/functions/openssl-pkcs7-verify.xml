<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.openssl-pkcs7-verify" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_pkcs7_verify</refname>
  <refpurpose>Verifies the signature of an S/MIME signed message</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>bool</type><type>int</type></type><methodname>openssl_pkcs7_verify</methodname>
   <methodparam><type>string</type><parameter>input_filename</parameter></methodparam>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>signers_certificates_filename</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>ca_info</parameter><initializer>[]</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>untrusted_certificates_filename</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>content</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>output_filename</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_pkcs7_verify</function> reads the S/MIME message
   contained in the given file and examines the digital signature.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input_filename</parameter></term>
     <listitem>
      <para>
       Path to the message.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> can be used to affect how the signature is
       verified - see <link linkend="openssl.pkcs7.flags">PKCS7 constants</link>
       for more information.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>signers_certificates_filename</parameter></term>
     <listitem>
      <para>
       If the <parameter>signers_certificates_filename</parameter> is specified, it should be a
       string holding the name of a file into which the certificates of the
       persons that signed the messages will be stored in PEM format.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ca_info</parameter></term>
     <listitem>
      <para>
       If the <parameter>ca_info</parameter> is specified, it should hold
       information about the trusted CA certificates to use in the verification
       process - see <link linkend="openssl.cert.verification">certificate
       verification</link> for more information about this parameter.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>untrusted_certificates_filename</parameter></term>
     <listitem>
      <para>
       If the <parameter>untrusted_certificates_filename</parameter> is specified, it is the filename
       of a file containing a bunch of certificates to use as untrusted CAs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>content</parameter></term>
     <listitem>
      <para>
       You can specify a filename with <parameter>content</parameter> that will
       be filled with the verified data, but with the signature information
       stripped.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output_filename</parameter></term>
     <listitem>
      <para>

      </para>
     </listitem>
    </varlistentry> 
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns &true; if the signature is verified, &false; if it is not correct
   (the message has been tampered with, or the signing certificate is invalid),
   or -1 on error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>signers_certificates_filename</parameter>, <parameter>untrusted_certificates_filename</parameter>,
       <parameter>content</parameter> and <parameter>output_filename</parameter> are nullable now.
      </entry>
     </row>
     <row>
      <entry>7.2.0</entry>
      <entry>
       The <parameter>output_filename</parameter> parameter was added.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    As specified in RFC 2045, lines may not be longer than 76 characters 
    in the <parameter>input_filename</parameter> parameter.
   </simpara>
  </note>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.openssl-pkcs7-sign" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_pkcs7_sign</refname>
  <refpurpose>Sign an S/MIME message</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>openssl_pkcs7_sign</methodname>
   <methodparam><type>string</type><parameter>input_filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>output_filename</parameter></methodparam>
   <methodparam><type class="union"><type>OpenSSLCertificate</type><type>string</type></type><parameter>certificate</parameter></methodparam>
   <methodparam><type class="union"><type>OpenSSLAsymmetricKey</type><type>OpenSSLCertificate</type><type>array</type><type>string</type></type><parameter>private_key</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>null</type></type><parameter>headers</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>PKCS7_DETACHED</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>untrusted_certificates_filename</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_pkcs7_sign</function> takes the contents of the file
   named <parameter>input_filename</parameter> and signs them using the
   certificate and its matching private key specified by
   <parameter>certificate</parameter> and <parameter>private_key</parameter>
   parameters.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input_filename</parameter></term>
     <listitem>
      <para>
        The input file you are intending to digitally sign.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output_filename</parameter></term>
     <listitem>
      <para>
        The file which the digital signature will be written to.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>certificate</parameter></term>
     <listitem>
      <para>
        The X.509 certificate used to digitally sign <parameter>input_filename</parameter>.
        See <link linkend="openssl.certparams">Key/Certificate parameters</link> for a list of valid values.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>private_key</parameter></term>
     <listitem>
      <para>
        <parameter>private_key</parameter> is the private key corresponding to <parameter>certificate</parameter>.
        See <link linkend="openssl.certparams">Public/Private Key parameters</link> for a list of valid values.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>headers</parameter></term>
     <listitem>
      <para>
       <parameter>headers</parameter> is an array of headers that
       will be prepended to the data after it has been signed (see
       <function>openssl_pkcs7_encrypt</function> for more information about
       the format of this parameter).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> can be used to alter the output - see <link linkend="openssl.pkcs7.flags">PKCS7 constants</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>untrusted_certificates_filename</parameter></term>
     <listitem>
      <para>
       <parameter>untrusted_certificates_filename</parameter> specifies the name of a file containing
       a bunch of extra certificates to include in the signature which can for
       example be used to help the recipient to verify the certificate that you used.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>certificate</parameter> accepts an <classname>OpenSSLCertificate</classname> instance now;
       previously, a &resource; of type <literal>OpenSSL X.509 CSR</literal> was accepted.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>private_key</parameter> accepts an <classname>OpenSSLAsymmetricKey</classname>
       or <classname>OpenSSLCertificate</classname> instance now;
       previously, a &resource; of type <literal>OpenSSL key</literal> or <literal>OpenSSL X.509 CSR</literal>
       was accepted.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>openssl_pkcs7_sign</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
// the message you want to sign so that recipient can be sure it was you that
// sent it
$data = <<<EOD

You have my authorization to spend $10,000 on dinner expenses.

The CEO
EOD;
// save message to file
$fp = fopen("msg.txt", "w");
fwrite($fp, $data);
fclose($fp);
// encrypt it
if (openssl_pkcs7_sign("msg.txt", "signed.txt", "file://mycert.pem",
    array("file://mycert.pem", "mypassphrase"),
    array("To" => "joes@example.com", // keyed syntax
          "From: HQ <ceo@example.com>", // indexed syntax
          "Subject" => "Eyes only")
    )) {
    // message signed - send it!
    exec(ini_get("sendmail_path") . " < signed.txt");
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

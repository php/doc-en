<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.openssl-seal" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_seal</refname>
  <refpurpose>Seal (encrypt) data</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>openssl_seal</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">sealed_data</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">encrypted_keys</parameter></methodparam>
   <methodparam><type>array</type><parameter>public_key</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher_algo</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">iv</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_seal</function> seals (encrypts) <parameter>data</parameter> using the
   specified <parameter>cipher_algo</parameter> with a randomly generated secret key. The key is
   then encrypted with each of the public keys in <parameter>public_key</parameter> array,
   and each encrypted envelope key is returned in <parameter>encrypted_keys</parameter>. This allows
   sealed data to be sent to multiple recipients (provided their public keys are available). Each
   recipient must receive both the sealed data and the envelope key that was encrypted with the
   recipient's public key. The IV (Initialization Vector) is generated, and its value is returned in
   <parameter>iv</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       The data to seal.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sealed_data</parameter></term>
     <listitem>
      <para>
       The sealed data.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encrypted_keys</parameter></term>
     <listitem>
      <para>
       Array of encrypted keys.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>public_key</parameter></term>
     <listitem>
      <para>
       Array of <classname>OpenSSLAsymmetricKey</classname> instances containing public keys.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher_algo</parameter></term>
     <listitem>
      <para>
       The cipher method.
       <caution>
        <simpara>
         The default value for PHP versions prior to 8.0 is (<literal>'RC4'</literal>) which is
         considered insecure. It is strongly recommended to explicitly specify a secure cipher
         method.
        </simpara>
       </caution>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       The initialization vector for decryption of <parameter>data</parameter>. It is required if
       the cipher method requires IV. This can be found out by calling
       <function>openssl_cipher_iv_length</function> with <parameter>cipher_algo</parameter>.
      </para>
      <caution>
       <simpara>
        The IV cannot be set explicitly. Any value set in it is overwritten by randomly generated
        value.
       </simpara>
      </caution>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the length of the sealed data on success, or &false; on error.
   If successful the sealed data is returned in
   <parameter>sealed_data</parameter>, and the envelope keys in
   <parameter>encrypted_keys</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>public_key</parameter> accepts an &array; of
       <classname>OpenSSLAsymmetricKey</classname> instances now;
       previously, an &array; of &resource;s of type <literal>OpenSSL key</literal>
       was accepted.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>cipher_algo</parameter> is no longer an optional parameter.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>iv</parameter> is nullable now.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>openssl_seal</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
// $data is assumed to contain the data to be sealed
$data = "test";

// fetch public keys
$pk1 = openssl_get_publickey("file://cert1.pem");
$pk2 = openssl_get_publickey("file://cert2.pem");

// seal message, only owners of $pk1 and $pk2 can decrypt $sealed with keys
// $ekeys[0] and $ekeys[1] respectively.
if (openssl_seal($data, $sealed, $ekeys, array($pk1, $pk2), 'AES256', $iv) > 0) {
    // possibly store the $sealed and $iv values and use later in openssl_open
    echo "success\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_open</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

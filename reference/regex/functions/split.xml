<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.split">
 <refnamediv>
  <refname>split</refname>
  <refpurpose>Split string into array by regular expression</refpurpose>
 </refnamediv>
 
 <refsynopsisdiv>
  <warning>
   &warn.deprecated.function.5-3-0.removed.7-0-0.alternatives;
   <simplelist role="alternatives">
    <member><function>preg_split</function></member>
    <member><function>explode</function></member>
    <member><function>str_split</function></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>split</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Splits a <parameter>string</parameter> into array by regular expression.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Case sensitive regular expression.
      </para>
      <para>
       If you want to split on any of the characters which are considered
       special by regular expressions, you'll need to escape them first. If
       you think <function>split</function> (or any other regex function, for
       that matter) is doing something weird, please read the file
       <filename>regex.7</filename>, included in the 
       <filename>regex/</filename> subdirectory of the PHP distribution. It's
       in manpage format, so you'll want to do something along the lines of
       <command>man /usr/local/src/regex/regex.7</command> in order to read it.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       The input string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       If <parameter>limit</parameter> is set, the returned array will
       contain a maximum of <parameter>limit</parameter> elements with the
       last element containing the whole rest of
       <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an array of strings, each of which is a substring of
   <parameter>string</parameter> formed by splitting it on boundaries formed
   by the case-sensitive regular expression <parameter>pattern</parameter>.
  </para>
  <para>
   If there are <replaceable>n</replaceable> occurrences of
   <parameter>pattern</parameter>, the returned array will contain
   <literal><replaceable>n</replaceable>+1</literal> items. For example, if
   there is no occurrence of <parameter>pattern</parameter>, an array with
   only one element will be returned. Of course, this is also true if
   <parameter>string</parameter> is empty. If an error occurs,
   <function>split</function> returns &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>split</function> example</title>
    <para>
     To split off the first four fields from a line from
     <filename>/etc/passwd</filename>:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
list($user, $pass, $uid, $gid, $extra) =
    split(":", $passwd_line, 5);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>split</function> example</title>
    <para>
     To parse a date which may be delimited with slashes, dots, or hyphens:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Delimiters may be slash, dot, or hyphen
$date = "04/30/1973";
list($month, $day, $year) = split('[/.-]', $date);
echo "Month: $month; Day: $day; Year: $year<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <para>
    <function>split</function> is deprecated as of PHP 5.3.0. <function>preg_split</function> 
    is the suggested alternative to this function. If you don't require the power of regular
    expressions, it is faster to use <function>explode</function>, which
    doesn't incur the overhead of the regular expression engine.
   </para>
  </tip>
  <tip>
   <para>
    For users looking for a way to emulate Perl's <command>@chars =
    split('', $str)</command> behaviour, please see the examples for
    <function>preg_split</function> or <function>str_split</function>.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>spliti</function></member>
    <member><function>str_split</function></member>
    <member><function>explode</function></member>
    <member><function>implode</function></member>
    <member><function>chunk_split</function></member>
    <member><function>wordwrap</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

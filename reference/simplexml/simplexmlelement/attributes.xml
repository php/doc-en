<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="simplexmlelement.attributes" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::attributes</refname>
  <refpurpose>Identifies an element's attributes</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>SimpleXMLElement</type><type>null</type></type><methodname>SimpleXMLElement::attributes</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>namespaceOrPrefix</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>isPrefix</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   This function provides the attributes and values defined within an xml tag.
  </para>
  &simplexml.iteration;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>namespaceOrPrefix</parameter></term>
     <listitem>
      <para>
       An optional namespace for the retrieved attributes
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>isPrefix</parameter></term>
     <listitem>
      <para>
       Default to &false;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a <classname>SimpleXMLElement</classname> object that can be
   iterated over to loop through the attributes on the tag.
  </para>
  <para>
   Returns &null; if called on a <classname>SimpleXMLElement</classname>
   object that already represents an attribute and not a tag.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Interpret an XML string</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = <<<XML
<a>
 <foo name="one" game="lonely">1</foo>
</a>
XML;

$xml = simplexml_load_string($string);
foreach($xml->foo[0]->attributes() as $a => $b) {
    echo $a,'="',$b,"\"\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
name="one"
game="lonely"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="simplexml.examples-basic"/></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

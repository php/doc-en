<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="mysqli-driver.report-mode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_driver::$report_mode</refname>
  <refname>mysqli_report</refname>
  <refpurpose>Sets mysqli error reporting mode</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <fieldsynopsis>
   <type>int</type><varname linkend="mysqli-driver.report-mode">mysqli_driver->report_mode</varname>
  </fieldsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_report</methodname>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   Depending on the flags, it sets mysqli error reporting mode to exception, warning or none.  
   When set to <constant>MYSQLI_REPORT_ALL</constant> or <constant>MYSQLI_REPORT_INDEX</constant> 
   it will also inform about queries that don't use an index (or use a bad index).
  </para>
  <para>
   As of PHP 8.1.0, the default setting is <literal>MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT</literal>.
   Previously, it was <constant>MYSQLI_REPORT_OFF</constant>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <table xml:id="mysqli-driver.report-mode.parameters">
        <title>Supported flags</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Name</entry>
           <entry>Description</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>MYSQLI_REPORT_OFF</constant></entry>
           <entry>Turns reporting off</entry>
          </row>
          <row>
           <entry><constant>MYSQLI_REPORT_ERROR</constant></entry>
           <entry>Report errors from mysqli function calls</entry>
          </row>
          <row>
           <entry><constant>MYSQLI_REPORT_STRICT</constant></entry>
           <entry>
            Throw <classname>mysqli_sql_exception</classname> for errors
            instead of warnings
           </entry>
          </row>
          <row>
           <entry><constant>MYSQLI_REPORT_INDEX</constant></entry>
           <entry>Report if no index or bad index was used in a query</entry>
          </row>
          <row>
           <entry><constant>MYSQLI_REPORT_ALL</constant></entry>
           <entry>Set all options (report all)</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns &true;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.1.0</entry>
      <entry>
       The default value is now <literal>MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT</literal>.
       Previously, it was <constant>MYSQLI_REPORT_OFF</constant>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php

/* activate reporting */
$driver = new mysqli_driver();
$driver->report_mode = MYSQLI_REPORT_ALL;

try {
    /* if the connection fails, a mysqli_sql_exception will be thrown */
    $mysqli = new mysqli("localhost", "my_user", "my_password", "my_db");

    /* this query should report an error */
    $result = $mysqli->query("SELECT Name FROM Nonexistingtable WHERE population > 50000");

    /* this query should report a bad index if the column population doesn't have an index */
    $result = $mysqli->query("SELECT Name FROM City WHERE population > 50000");
} catch (mysqli_sql_exception $e) {
    error_log($e->__toString());
}
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php

/* activate reporting */
mysqli_report(MYSQLI_REPORT_ALL);

try {
    /* if the connection fails, a mysqli_sql_exception will be thrown */
    $link = mysqli_connect("localhost", "my_user", "my_password", "my_db");

    /* this query should report an error */
    $result = mysqli_query($link, "SELECT Name FROM Nonexistingtable WHERE population > 50000");

    /* this query should report a bad index if the column population doesn't have an index */
    $result = mysqli_query($link, "SELECT Name FROM City WHERE population > 50000");
} catch (mysqli_sql_exception $e) {
    error_log($e->__toString());
}
]]>
   </programlisting>
  </example>
  <example>
   <title>Error reporting except bad index errors</title>
   <programlisting role="php">
<![CDATA[
<?php

/* activate reporting */
mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);

try {
    /* if the connection fails, a mysqli_sql_exception will be thrown */
    $mysqli = new mysqli("localhost", "my_user", "my_password", "my_db");

    /* this query should report an error */
    $result = $mysqli->query("SELECT Name FROM Nonexistingtable WHERE population > 50000");

    /* this WILL NOT report any errors even if index is not available */
    $result = $mysqli->query("SELECT Name FROM City WHERE population > 50000");
} catch (mysqli_sql_exception $e) {
    error_log($e->__toString());
}
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><classname>mysqli_sql_exception</classname></member>
    <member><function>set_exception_handler</function></member>
    <member><function>error_reporting</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

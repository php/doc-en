<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="mysqli.insert-id" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::$insert_id</refname>
  <refname>mysqli_insert_id</refname>
  <refpurpose>Returns the auto generated id used in the latest query</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <fieldsynopsis><type>mixed</type><varname linkend="mysqli.insert-id">mysqli->insert_id</varname></fieldsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>int</type><type>string</type></type><methodname>mysqli_insert_id</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
  </methodsynopsis>
  <para>
   The <function>mysqli_insert_id</function> function returns the ID generated
   by a query (usually INSERT) on a table with a column having the
   AUTO_INCREMENT attribute. If no INSERT or UPDATE statements were sent via this 
connection, or if the modified table does not have a column
   with the AUTO_INCREMENT attribute, this function will return zero.
  </para>
  <note>
   <para>
    Performing an INSERT or UPDATE statement using the LAST_INSERT_ID()
    function will also modify the value returned by the
    <function>mysqli_insert_id</function> function.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The value of the <literal>AUTO_INCREMENT</literal> field that was updated
   by the previous query. Returns zero if there was no previous query on the
   connection or if the query did not update an <literal>AUTO_INCREMENT</literal>
   value.
  </para>
  <note>
   <para>
    If the number is greater than maximal int value, <function>mysqli_insert_id</function>
    will return a string.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><varname>$mysqli->insert_id</varname> example</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$mysqli->query("CREATE TABLE myCity LIKE City");

$query = "INSERT INTO myCity VALUES (NULL, 'Stuttgart', 'DEU', 'Stuttgart', 617000)";
$mysqli->query($query);

printf ("New Record has id %d.\n", $mysqli->insert_id);

/* drop table */
$mysqli->query("DROP TABLE myCity");

/* close connection */
$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

mysqli_query($link, "CREATE TABLE myCity LIKE City");

$query = "INSERT INTO myCity VALUES (NULL, 'Stuttgart', 'DEU', 'Stuttgart', 617000)";
mysqli_query($link, $query);

printf ("New Record has id %d.\n", mysqli_insert_id($link));

/* drop table */
mysqli_query($link, "DROP TABLE myCity");

/* close connection */
mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
New Record has id 1.
]]>
   </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

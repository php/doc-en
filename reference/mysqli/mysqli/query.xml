<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="mysqli.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::query</refname>
  <refname>mysqli_query</refname>
  <refpurpose>Performs a query on the database</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>mysqli_result</type><type>bool</type></type><methodname>mysqli::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>result_mode</parameter><initializer><constant>MYSQLI_STORE_RESULT</constant></initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type class="union"><type>mysqli_result</type><type>bool</type></type><methodname>mysqli_query</methodname>
   <methodparam><type>mysqli</type><parameter>mysql</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>result_mode</parameter><initializer><constant>MYSQLI_STORE_RESULT</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Performs a <parameter>query</parameter> against the database.
  </para>
  <para>
   For non-DML queries (not INSERT, UPDATE or DELETE),
   this function is similar to calling 
   <function>mysqli_real_query</function> followed by either
   <function>mysqli_use_result</function> or 
   <function>mysqli_store_result</function>.
  </para>
  <note>
   <para>
    In the case where you pass a statement to
    <function>mysqli_query</function> that is longer than
    <literal>max_allowed_packet</literal> of the server, the returned
    error codes are different depending on whether you are using MySQL
    Native Driver (<literal>mysqlnd</literal>) or MySQL Client Library
    (<literal>libmysqlclient</literal>). The behavior is as follows:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <literal>mysqlnd</literal> on Linux returns an error code of 1153.
      The error message means <quote>got a packet bigger than
      <literal>max_allowed_packet</literal> bytes</quote>.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>mysqlnd</literal> on Windows returns an error code 2006.
      This error message means <quote>server has gone away</quote>.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>libmysqlclient</literal> on all platforms returns an error code
      2006. This error message means <quote>server has gone
      away</quote>.
     </para>
    </listitem>
   </itemizedlist>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       The query string.
      </para>
      &mysqli.sqlinjection.warning;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>result_mode</parameter></term>
     <listitem>
      <para>
       The result mode can be one of 3 constants indicating how the result will
       be returned from the MySQL server.
      </para>
      <para>
       <constant>MYSQLI_STORE_RESULT</constant> (default) - returns a
       <classname>mysqli_result</classname> object with buffered result set.
      </para>
      <para>
       <constant>MYSQLI_USE_RESULT</constant> - returns a
       <classname>mysqli_result</classname> object with unbuffered result set. 
       As long as there are pending records waiting to be fetched, the
       connection line will be busy and all subsequent calls will return error 
       <literal>Commands out of sync</literal>. To avoid the error all records 
       must be fetched from the server or the result set must be discarded by
       calling <function>mysqli_free_result</function>.
      </para>
      <para>
       <constant>MYSQLI_ASYNC</constant> (available with mysqlnd) - the query is
       performed asynchronously and no result set is immediately returned.
       <function>mysqli_poll</function> is then used to get results from such
       queries. Used in combination with either
       <constant>MYSQLI_STORE_RESULT</constant> or
       <constant>MYSQLI_USE_RESULT</constant> constant.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns &false; on failure. For successful queries which produce a result
   set, such as <literal>SELECT, SHOW, DESCRIBE</literal> or
   <literal>EXPLAIN</literal>, <function>mysqli_query</function> will return
   a <classname>mysqli_result</classname> object. For other successful queries,
   <function>mysqli_query</function> will
   return &true;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli::query</methodname> example</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* Create table doesn't return a resultset */
$mysqli->query("CREATE TEMPORARY TABLE myCity LIKE City");
printf("Table myCity successfully created.\n");

/* Select queries return a resultset */
$result = $mysqli->query("SELECT Name FROM City LIMIT 10");
printf("Select returned %d rows.\n", $result->num_rows);

/* If we have to retrieve large amount of data we use MYSQLI_USE_RESULT */
$result = $mysqli->query("SELECT * FROM City", MYSQLI_USE_RESULT);

/* Note, that we can't execute any functions which interact with the
	server until all records have been fully retrieved or the result
	set was closed. All calls will return an 'out of sync' error */
$mysqli->query("SET @a:='this will not work'");
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* Create table doesn't return a resultset */
mysqli_query($link, "CREATE TEMPORARY TABLE myCity LIKE City");
printf("Table myCity successfully created.\n");

/* Select queries return a resultset */
$result = mysqli_query($link, "SELECT Name FROM City LIMIT 10");
printf("Select returned %d rows.\n", mysqli_num_rows($result));

/* If we have to retrieve large amount of data we use MYSQLI_USE_RESULT */
$result = mysqli_query($link, "SELECT * FROM City", MYSQLI_USE_RESULT);

/* Note, that we can't execute any functions which interact with the
	server until all records have been fully retrieved or the result
	set was closed. All calls will return an 'out of sync' error */
mysqli_query($link, "SET @a:='this will not work'");
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Table myCity successfully created.
Select returned 10 rows.

Fatal error: Uncaught mysqli_sql_exception: Commands out of sync; you can't run this command now in...
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_real_query</function></member>
    <member><function>mysqli_multi_query</function></member>
    <member><function>mysqli_prepare</function></member>
    <member><function>mysqli_free_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

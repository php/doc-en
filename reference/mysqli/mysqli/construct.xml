<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="mysqli.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::__construct</refname>
  <refname>mysqli::connect</refname>
  <refname>mysqli_connect</refname>
  <refpurpose>Open a new connection to the MySQL server</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <constructorsynopsis role="mysqli">
   <modifier>public</modifier> <methodname>mysqli::__construct</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>hostname</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>username</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><modifier role="attribute">#[\SensitiveParameter]</modifier><type class="union"><type>string</type><type>null</type></type><parameter>password</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>database</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>port</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>socket</parameter><initializer>&null;</initializer></methodparam>
  </constructorsynopsis>
  <methodsynopsis role="mysqli">
   <modifier>public</modifier> <type>bool</type><methodname>mysqli::connect</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>hostname</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>username</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><modifier role="attribute">#[\SensitiveParameter]</modifier><type class="union"><type>string</type><type>null</type></type><parameter>password</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>database</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>port</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>socket</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>mysqli</type><type>false</type></type><methodname>mysqli_connect</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>hostname</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>username</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><modifier role="attribute">#[\SensitiveParameter]</modifier><type class="union"><type>string</type><type>null</type></type><parameter>password</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>database</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>port</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>socket</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Opens a connection to the MySQL Server.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hostname</parameter></term>
     <listitem>
      <para>
       Can be either a host name or an IP address. When passing &null;, the value is retrieved from
       <link linkend="ini.mysqli.default-host">mysqli.default_host</link>.
       When possible, pipes will be used instead of the TCP/IP protocol.
       The TCP/IP protocol is used if a host name and port number are provided together e.g. <literal>localhost:3308</literal>.
      </para>
      <para>
       Prepending host by <literal>p:</literal> opens a persistent connection.
       <function>mysqli_change_user</function> is automatically called on
       connections opened from the connection pool.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       The MySQL username or &null; to assume the username based on the
       <link linkend="ini.mysqli.default-user">mysqli.default_user</link> ini option.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       The MySQL password or &null; to assume the password based on the
       <link linkend="ini.mysqli.default-pw">mysqli.default_pw</link> ini option.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>database</parameter></term>
     <listitem>
      <para>
       The default database to be used when performing queries or &null;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       The port number to attempt to connect to the MySQL server or &null; to assume the port based on the
       <link linkend="ini.mysqli.default-port">mysqli.default_port</link> ini option.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       The socket or named pipe that should be used or &null; to assume the socket based on the
       <link linkend="ini.mysqli.default-socket">mysqli.default_socket</link> ini option.
      </para>
      <note>
       <para>
        Specifying the <parameter>socket</parameter> parameter will not
        explicitly determine the type of connection to be used when
        connecting to the MySQL server. How the connection is made to the
        MySQL database is determined by the <parameter>hostname</parameter>
        parameter.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>mysqli_connect</function> returns an object which represents the connection to a MySQL Server,
   &return.falseforfailure;.
  </para>
  <para>
   <methodname>mysqli::connect</methodname> returns &true; on success&return.falseforfailure;.
   Prior to PHP 8.1.0, returns &null; on success.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mysqli.conditionalexception;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.1.0</entry>
       <entry>
        <methodname>mysqli::connect</methodname> now returns &true; instead of &null; on success.
       </entry>
      </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        All parameters are now nullable.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli::__construct</methodname> example</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

/* You should enable error reporting for mysqli before attempting to make a connection */
mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);

$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'my_db');

/* Set the desired charset after establishing a connection */
$mysqli->set_charset('utf8mb4');

printf("Success... %s\n", $mysqli->host_info);
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

/* You should enable error reporting for mysqli before attempting to make a connection */
mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);

$mysqli = mysqli_connect('localhost', 'my_user', 'my_password', 'my_db');

/* Set the desired charset after establishing a connection */
mysqli_set_charset($mysqli, 'utf8mb4');

printf("Success... %s\n", mysqli_get_host_info($mysqli));
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Success... localhost via TCP/IP
]]>
   </screen>
  </example>
  <example>
   <title>Extending mysqli class</title>
   <programlisting role="php">
<![CDATA[
<?php

class FooMysqli extends mysqli {
    public function __construct($host, $user, $pass, $db, $port, $socket, $charset) {
        mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
        parent::__construct($host, $user, $pass, $db, $port, $socket);
        $this->set_charset($charset);
    }
}

$db = new FooMysqli('localhost', 'my_user', 'my_password', 'my_db', 3306, null, 'utf8mb4');
]]>
   </programlisting>
  </example>
  <example>
   <title>Manual error handling</title>
   <para>If error reporting is disabled, the developer is responsible for checking and handling failures</para>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

error_reporting(0);
mysqli_report(MYSQLI_REPORT_OFF);
$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'my_db');
if ($mysqli->connect_errno) {
    throw new RuntimeException('mysqli connection error: ' . $mysqli->connect_error);
}

/* Set the desired charset after establishing a connection */
$mysqli->set_charset('utf8mb4');
if ($mysqli->errno) {
    throw new RuntimeException('mysqli error: ' . $mysqli->error);
}
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

error_reporting(0);
mysqli_report(MYSQLI_REPORT_OFF);
$mysqli = mysqli_connect('localhost', 'my_user', 'my_password', 'my_db');
if (mysqli_connect_errno()) {
    throw new RuntimeException('mysqli connection error: ' . mysqli_connect_error());
}

/* Set the desired charset after establishing a connection */
mysqli_set_charset($mysqli, 'utf8mb4');
if (mysqli_errno($mysqli)) {
    throw new RuntimeException('mysqli error: ' . mysqli_error($mysqli));
}
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &mysqli.charset.note;
  <note>
   <para>
    &style.oop; only: If the connection fails, an object is still returned. To check 
    whether the connection failed, use either the 
    <function>mysqli_connect_error</function> function or the <link linkend="mysqli.connect-error">mysqli-&gt;connect_error</link> property as in 
    the preceding examples.
   </para>
  </note>
  <note>
   <para>
    If it is necessary to set options, such as the connection timeout,
    <function>mysqli_real_connect</function> must be used instead.
   </para>
  </note>
  <note>
   <para>
    Calling the constructor with no parameters is the same as calling
    <function>mysqli_init</function>.
   </para>
  </note>
  <note>
   <para>
    Error "Can't create TCP/IP socket (10106)" usually means that the <link linkend="ini.variables-order">variables_order</link> configure directive
    doesn't contain character <literal>E</literal>. On Windows, if the
    environment is not copied the <literal>SYSTEMROOT</literal> environment
    variable won't be available and PHP will have problems loading Winsock.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_real_connect</function></member>
    <member><function>mysqli_options</function></member>
    <member><function>mysqli_connect_errno</function></member>
    <member><function>mysqli_connect_error</function></member>
    <member><function>mysqli_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

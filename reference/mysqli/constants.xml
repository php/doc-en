<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<appendix xml:id="mysqli.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
  <variablelist>
   <varlistentry xml:id="constant.mysqli-read-default-group">
    <term>
     <constant>MYSQLI_READ_DEFAULT_GROUP</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Read options from the named group from <filename>my.cnf</filename>
      or the file specified with <constant>MYSQLI_READ_DEFAULT_FILE</constant>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-read-default-file">
    <term>
     <constant>MYSQLI_READ_DEFAULT_FILE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Read options from the named option file instead of from <filename>my.cnf</filename>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-can-handle_expired_passwords">
    <term>
     <constant>MYSQLI_OPT_CAN_HANDLE_EXPIRED_PASSWORDS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Indicates to the server that the client can handle sandbox mode
      for expired passwords.
      Can be used with <function>mysqli_options</function>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-load-data_local_dir">
    <term>
     <constant>MYSQLI_OPT_LOAD_DATA_LOCAL_DIR</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      If enabled, this option specifies the directory
      from which client-side <literal>LOCAL</literal> data loading is permitted
      in <literal>LOAD DATA LOCAL</literal> statements.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-connect-timeout">
    <term>
     <constant>MYSQLI_OPT_CONNECT_TIMEOUT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Connect timeout in seconds.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-read-timeout">
    <term>
     <constant>MYSQLI_OPT_READ_TIMEOUT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Command execution result timeout in seconds. Available as of PHP 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-local-infile">
    <term>
     <constant>MYSQLI_OPT_LOCAL_INFILE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Enables command <literal>LOAD LOCAL INFILE</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-int-and-float-native">
    <term>
     <constant>MYSQLI_OPT_INT_AND_FLOAT_NATIVE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Convert integer and float columns back to PHP numbers. Only valid for mysqlnd.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-net-cmd-buffer-size">
    <term>
     <constant>MYSQLI_OPT_NET_CMD_BUFFER_SIZE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      The size of the internal command/network buffer. Only valid for mysqlnd.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-net-read-buffer-size">
    <term>
     <constant>MYSQLI_OPT_NET_READ_BUFFER_SIZE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Maximum read chunk size in bytes when reading the body of a MySQL command packet.
      Only valid for mysqlnd.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-ssl-verify-server-cert">
    <term>
     <constant>MYSQLI_OPT_SSL_VERIFY_SERVER_CERT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-init-command">
    <term>
     <constant>MYSQLI_INIT_COMMAND</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Command to execute when connecting to MySQL server. Will automatically be re-executed when reconnecting.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-can-handle_expired_passwords">
    <term>
     <constant>MYSQLI_CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS</constant>
    (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Indicates to the server that the client can handle sandbox mode
      for expired passwords.
      Can be used with <function>mysqli_real_connect</function>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-found-rows">
    <term>
     <constant>MYSQLI_CLIENT_FOUND_ROWS</constant>
    (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Return number of matched rows, not the number of affected rows.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-ssl-verify_server_cert">
    <term>
     <constant>MYSQLI_CLIENT_SSL_VERIFY_SERVER_CERT</constant>
    (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Verify server certificate.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-ssl">
    <term>
     <constant>MYSQLI_CLIENT_SSL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Use SSL (encrypted protocol). This option should not be set by application programs;
      it is set internally in the MySQL client library.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-compress">
    <term>
     <constant>MYSQLI_CLIENT_COMPRESS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Use compression protocol.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-interactive">
    <term>
     <constant>MYSQLI_CLIENT_INTERACTIVE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Allow <literal>interactive_timeout</literal> seconds
      (instead of <literal>wait_timeout</literal> seconds) of inactivity before
      closing the connection.  The client's session
      <literal>wait_timeout</literal> variable will be set to
      the value of the session <literal>interactive_timeout</literal> variable.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-ignore-space">
    <term>
     <constant>MYSQLI_CLIENT_IGNORE_SPACE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Allow spaces after function names. Makes all functions names reserved words.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-no-schema">
    <term>
     <constant>MYSQLI_CLIENT_NO_SCHEMA</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Don't allow the <literal>db_name.tbl_name.col_name</literal> syntax.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-multi-queries">
    <term><constant>MYSQLI_CLIENT_MULTI_QUERIES</constant></term>
    <listitem>
     <para>
      Allows multiple semicolon-delimited queries in a single <function>mysqli_query</function> call.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-store-result">
    <term>
     <constant>MYSQLI_STORE_RESULT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      For using buffered result sets. It has a value of <literal>0</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-store-result-copy_data">
    <term>
     <constant>MYSQLI_STORE_RESULT_COPY_DATA</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      As of PHP 8.1, this constant no longer has any effect.
      Before PHP 8.1, this constant is used to copy results
      from the internal <literal>mysqlnd</literal> buffer
      into the PHP variables fetched.
      By default, <literal>mysqlnd</literal> will use a reference logic
      to avoid copying and duplicating results held in memory.
      For certain result sets, for example, result sets with many small rows,
      the copy approach can reduce the overall memory usage
      because PHP variables holding results may be released earlier.
      Available with <literal>mysqlnd</literal> only.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-use-result">
    <term>
     <constant>MYSQLI_USE_RESULT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      For using unbuffered result sets. It has a value of <literal>1</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-assoc">
    <term>
     <constant>MYSQLI_ASSOC</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Columns are returned into the array having the fieldname as the array index.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-num">
    <term>
     <constant>MYSQLI_NUM</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Columns are returned into the array having an enumerated index.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-both">
    <term>
     <constant>MYSQLI_BOTH</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Columns are returned into the array having both a numerical index and the fieldname as the associative index.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-not-null-flag">
    <term>
     <constant>MYSQLI_NOT_NULL_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Indicates that a field is defined as <literal>NOT NULL</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-pri-key-flag">
    <term>
     <constant>MYSQLI_PRI_KEY_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is part of a primary index.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-unique-key-flag">
    <term>
     <constant>MYSQLI_UNIQUE_KEY_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is part of a unique index.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="constant.mysqli-multiple-key-flag">
    <term>
     <constant>MYSQLI_MULTIPLE_KEY_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is part of an index.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-blob-flag">
    <term>
     <constant>MYSQLI_BLOB_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>BLOB</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-unsigned-flag">
    <term>
     <constant>MYSQLI_UNSIGNED_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>UNSIGNED</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-zerofill-flag">
    <term>
     <constant>MYSQLI_ZEROFILL_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>ZEROFILL</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-auto-increment-flag">
    <term>
     <constant>MYSQLI_AUTO_INCREMENT_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>AUTO_INCREMENT</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-timestamp-flag">
    <term>
     <constant>MYSQLI_TIMESTAMP_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>TIMESTAMP</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-set-flag">
    <term>
     <constant>MYSQLI_SET_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>SET</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-num-flag">
    <term>
     <constant>MYSQLI_NUM_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>NUMERIC</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-part-key-flag">
    <term>
     <constant>MYSQLI_PART_KEY_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is part of an multi-index.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-group-flag">
    <term>
     <constant>MYSQLI_GROUP_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is part of <literal>GROUP BY</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-no-default-value_flag">
    <term>
     <constant>MYSQLI_NO_DEFAULT_VALUE_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      A column has no <literal>DEFAULT</literal> clause in its definition.
      This does not apply to <literal>NULL</literal>
      or to <literal>AUTO_INCREMENT</literal> columns
      because such columns have a default value of <literal>NULL</literal>
      and an implied default value respectively.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-decimal">
    <term>
     <constant>MYSQLI_TYPE_DECIMAL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>DECIMAL</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-newdecimal">
    <term>
     <constant>MYSQLI_TYPE_NEWDECIMAL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Precision math <literal>DECIMAL</literal> or <literal>NUMERIC</literal> field.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-bit">
    <term>
     <constant>MYSQLI_TYPE_BIT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>BIT</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-tiny">
    <term>
     <constant>MYSQLI_TYPE_TINY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>TINYINT</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-short">
    <term>
     <constant>MYSQLI_TYPE_SHORT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>SMALLINT</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-long">
    <term>
     <constant>MYSQLI_TYPE_LONG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>INT</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-float">
    <term>
     <constant>MYSQLI_TYPE_FLOAT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>FLOAT</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-double">
    <term>
     <constant>MYSQLI_TYPE_DOUBLE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>DOUBLE</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-null">
    <term>
     <constant>MYSQLI_TYPE_NULL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>DEFAULT NULL</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-timestamp">
    <term>
     <constant>MYSQLI_TYPE_TIMESTAMP</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>TIMESTAMP</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-longlong">
    <term>
     <constant>MYSQLI_TYPE_LONGLONG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>BIGINT</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-int24">
    <term>
     <constant>MYSQLI_TYPE_INT24</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>MEDIUMINT</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-date">
    <term>
     <constant>MYSQLI_TYPE_DATE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>DATE</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-time">
    <term>
     <constant>MYSQLI_TYPE_TIME</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>TIME</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-datetime">
    <term>
     <constant>MYSQLI_TYPE_DATETIME</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>DATETIME</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-year">
    <term>
     <constant>MYSQLI_TYPE_YEAR</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>YEAR</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-newdate">
    <term>
     <constant>MYSQLI_TYPE_NEWDATE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>DATE</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-interval">
    <term>
     <constant>MYSQLI_TYPE_INTERVAL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Alias of <constant>MYSQLI_TYPE_ENUM</constant>. Removed as of PHP 8.4.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-enum">
    <term>
     <constant>MYSQLI_TYPE_ENUM</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>ENUM</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-set">
    <term>
     <constant>MYSQLI_TYPE_SET</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>SET</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-tiny-blob">
    <term>
     <constant>MYSQLI_TYPE_TINY_BLOB</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>TINYBLOB</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-medium-blob">
    <term>
     <constant>MYSQLI_TYPE_MEDIUM_BLOB</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>MEDIUMBLOB</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-long-blob">
    <term>
     <constant>MYSQLI_TYPE_LONG_BLOB</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>LONGBLOB</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-blob">
    <term>
     <constant>MYSQLI_TYPE_BLOB</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>BLOB</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-var-string">
    <term>
     <constant>MYSQLI_TYPE_VAR_STRING</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>VARCHAR</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-string">
    <term>
     <constant>MYSQLI_TYPE_STRING</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>CHAR</literal> or <literal>BINARY</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-char">
    <term>
     <constant>MYSQLI_TYPE_CHAR</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>TINYINT</literal>.
      For <literal>CHAR</literal>, see <literal>MYSQLI_TYPE_STRING</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-geometry">
    <term>
     <constant>MYSQLI_TYPE_GEOMETRY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>GEOMETRY</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-type-json">
    <term>
     <constant>MYSQLI_TYPE_JSON</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>JSON</literal>.
      Only valid for mysqlnd and MySQL 5.7.8 and up.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-need-data">
    <term><constant>MYSQLI_NEED_DATA</constant></term>
    <listitem>
     <para>
      More data available for bind variable.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-enum-flag">
    <term>
     <constant>MYSQLI_ENUM_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     Field is defined as <literal>ENUM</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-binary-flag">
    <term>
     <constant>MYSQLI_BINARY_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Field is defined as <literal>BINARY</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-cursor-type-for-update">
    <term>
     <constant>MYSQLI_CURSOR_TYPE_FOR_UPDATE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-cursor-type-no-cursor">
    <term>
     <constant>MYSQLI_CURSOR_TYPE_NO_CURSOR</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-cursor-type-read-only">
    <term>
     <constant>MYSQLI_CURSOR_TYPE_READ_ONLY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-cursor-type-scrollable">
    <term>
     <constant>MYSQLI_CURSOR_TYPE_SCROLLABLE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-stmt-attr-cursor-type">
    <term>
     <constant>MYSQLI_STMT_ATTR_CURSOR_TYPE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-stmt-attr-prefetch-rows">
    <term>
     <constant>MYSQLI_STMT_ATTR_PREFETCH_ROWS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-stmt-attr-update-max-length">
    <term>
     <constant>MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-set-charset-name">
    <term>
     <constant>MYSQLI_SET_CHARSET_NAME</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-report-index">
    <term>
     <constant>MYSQLI_REPORT_INDEX</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Report if no index or bad index was used in a query.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-report-error">
    <term>
     <constant>MYSQLI_REPORT_ERROR</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Report errors from mysqli function calls.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-report-strict">
    <term>
     <constant>MYSQLI_REPORT_STRICT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Throw a <literal>mysqli_sql_exception</literal> for errors instead of warnings.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-report-all">
    <term>
     <constant>MYSQLI_REPORT_ALL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Set all options on (report all).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-report-off">
    <term>
     <constant>MYSQLI_REPORT_OFF</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Turns reporting off.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-debug-trace-enabled">
    <term>
     <constant>MYSQLI_DEBUG_TRACE_ENABLED</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Is set to 1 if <function>mysqli_debug</function> functionality is enabled.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-server-public-key">
    <term>
     <constant>MYSQLI_SERVER_PUBLIC_KEY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-grant">
    <term>
     <constant>MYSQLI_REFRESH_GRANT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Refreshes the grant tables.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-log">
    <term>
     <constant>MYSQLI_REFRESH_LOG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Flushes the logs, like executing the
      <literal>FLUSH LOGS</literal> <acronym>SQL</acronym> statement.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-tables">
    <term>
     <constant>MYSQLI_REFRESH_TABLES</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Flushes the table cache, like executing the
      <literal>FLUSH TABLES</literal> <acronym>SQL</acronym> statement.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-hosts">
    <term>
     <constant>MYSQLI_REFRESH_HOSTS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Flushes the host cache, like executing the
      <literal>FLUSH HOSTS</literal> <acronym>SQL</acronym> statement.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-replica">
    <term>
     <constant>MYSQLI_REFRESH_REPLICA</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Alias of <constant>MYSQLI_REFRESH_SLAVE</constant> constant.
      Available as of PHP 8.1.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-status">
    <term>
     <constant>MYSQLI_REFRESH_STATUS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Reset the status variables, like executing the
      <literal>FLUSH STATUS</literal> <acronym>SQL</acronym> statement.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-threads">
    <term>
     <constant>MYSQLI_REFRESH_THREADS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Flushes the thread cache.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-slave">
    <term>
     <constant>MYSQLI_REFRESH_SLAVE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      On a slave replication server: resets the master server information, and
      restarts the slave. Like executing the <literal>RESET SLAVE</literal>
      <acronym>SQL</acronym> statement.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-master">
    <term>
     <constant>MYSQLI_REFRESH_MASTER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      On a master replication server: removes the binary log files listed in the
      binary log index, and truncates the index file. Like executing the
      <literal>RESET MASTER</literal> <acronym>SQL</acronym> statement.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-refresh-backup-log">
    <term>
     <constant>MYSQLI_REFRESH_BACKUP_LOG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Closes and reopens the backup log files.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-cor-and-chain">
    <term>
     <constant>MYSQLI_TRANS_COR_AND_CHAIN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Appends "AND CHAIN" to <function>mysqli_commit</function> or
      <function>mysqli_rollback</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-cor-and-no-chain">
    <term>
     <constant>MYSQLI_TRANS_COR_AND_NO_CHAIN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Appends "AND NO CHAIN" to <function>mysqli_commit</function> or
      <function>mysqli_rollback</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-cor-release">
    <term>
     <constant>MYSQLI_TRANS_COR_RELEASE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Appends "RELEASE" to <function>mysqli_commit</function> or
      <function>mysqli_rollback</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-cor-no-release">
    <term>
     <constant>MYSQLI_TRANS_COR_NO_RELEASE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Appends "NO RELEASE" to <function>mysqli_commit</function> or
      <function>mysqli_rollback</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-start-read-only">
    <term>
     <constant>MYSQLI_TRANS_START_READ_ONLY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Start the transaction as "START TRANSACTION READ ONLY" with
      <function>mysqli_begin_transaction</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-start-read-write">
    <term>
     <constant>MYSQLI_TRANS_START_READ_WRITE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Start the transaction as "START TRANSACTION READ WRITE" with
      <function>mysqli_begin_transaction</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-start-consistent-snapshot">
    <term><constant>MYSQLI_TRANS_START_WITH_CONSISTENT_SNAPSHOT</constant></term>
    <listitem>
     <para>
      Start the transaction as "START TRANSACTION WITH CONSISTENT SNAPSHOT".
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-ssl-dont-verify-server-cert">
    <term>
     <constant>MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Requires MySQL 5.6.5 and up.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-is-mariadb">
    <term>
     <constant>MYSQLI_IS_MARIADB</constant>
     (<type>bool</type>)
    </term>
    <listitem>
     <para>
      Whether the mysqli extension has been built against a MariaDB client library.
      Available as of PHP 8.1.2.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-async">
    <term>
     <constant>MYSQLI_ASYNC</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      The query is performed asynchronously and no result set is immediately returned.
      Available with <literal>mysqlnd</literal> only.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-on-update-now_flag">
    <term>
     <constant>MYSQLI_ON_UPDATE_NOW_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      If a field is updated it will get the current time value.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

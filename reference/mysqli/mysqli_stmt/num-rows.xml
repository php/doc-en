<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="mysqli-stmt.num-rows" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_stmt::$num_rows</refname>
  <refname>mysqli_stmt::num_rows</refname>
  <refname>mysqli_stmt_num_rows</refname>
  <refpurpose>Returns the number of rows fetched from the server</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <fieldsynopsis><type class="union"><type>int</type><type>string</type></type><varname linkend="mysqli-stmt.num-rows">mysqli_stmt-&gt;num_rows</varname></fieldsynopsis>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>int</type><type>string</type></type><methodname>mysqli_stmt::num_rows</methodname>
   <void/>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type class="union"><type>int</type><type>string</type></type><methodname>mysqli_stmt_num_rows</methodname>
   <methodparam><type>mysqli_stmt</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns the number of rows buffered in the statement. This function will only
   work after <function>mysqli_stmt_store_result</function> is called to buffer
   the entire result set in the statement handle.
  </para>
  <para>
   This function returns <literal>0</literal> unless all rows have been
   fetched from the server.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.stmt.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   An &integer; representing the number of buffered rows.
   Returns <literal>0</literal> in unbuffered mode unless all rows have been
   fetched from the server.
  </para>
  &mysqli.integer.overflow.as.string.note;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER BY Name LIMIT 20";
$stmt = $mysqli->prepare($query);
$stmt->execute();

/* store the result in an internal buffer */
$stmt->store_result();

printf("Number of rows: %d.\n", $stmt->num_rows);
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER BY Name LIMIT 20";
$stmt = mysqli_prepare($link, $query);
mysqli_stmt_execute($stmt);

/* store the result in an internal buffer */
mysqli_stmt_store_result($stmt);

printf("Number of rows: %d.\n", mysqli_stmt_num_rows($stmt));
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Number of rows: 20.
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_stmt_store_result</function></member>
    <member><function>mysqli_stmt_affected_rows</function></member>
    <member><function>mysqli_prepare</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

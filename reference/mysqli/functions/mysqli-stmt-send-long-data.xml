<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11.2.1 $ -->
<refentry xml:id="function.mysqli-stmt-send-long-data" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_stmt_send_long_data</refname>
  <refname>stmt->send_long_data()</refname>
  <refpurpose>Send data in blocks</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>Procedural style:</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_stmt_send_long_data</methodname>
   <methodparam><type>mysqli_stmt</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>int</type><parameter>param_nr</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>Object oriented style (method)</para>
  <classsynopsis>
   <ooclass><classname>mysqli_stmt</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>send_long_data</methodname>
    <methodparam><type>int</type><parameter>param_nr</parameter></methodparam>
    <methodparam><type>string</type><parameter>data</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   Allows to send parameter data to the server in pieces (or chunks), e.g. if the
   size of a blob exceeds the size of <literal>max_allowed_packet</literal>.
   This function can be called multiple times to send the parts of a character or
   binary data value for a column, which must be one of the TEXT or BLOB datatypes.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.stmt.description;
    <varlistentry>
     <term><parameter>param_nr</parameter></term>
     <listitem>
      <para>
       Indicates which parameter to associate the data with. Parameters are
       numbered beginning with 0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       A string containing data to be sent.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Object oriented style</title>
   <programlisting role="php">
<![CDATA[
<?php
$stmt = $mysqli->prepare("INSERT INTO messages (message) VALUES (?)");
$null = NULL;
$stmt->bind_param("b", $null);
$fp = fopen("messages.txt", "r");
while (!feof($fp)) {
    $stmt->send_long_data(0, fread($fp, 8192));
}
fclose($fp);
$stmt->execute();
?>
]]>
  </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_prepare</function></member>
    <member><function>mysqli_stmt_bind_param</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="mysqli-result.fetch-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_all</refname>
  <refname>mysqli_fetch_all</refname>
  <refpurpose>Fetches all result rows as an associative array, a numeric array, or both</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>array</type><methodname>mysqli_result::fetch_all</methodname>
   <methodparam choice="opt"><type>int</type><parameter>resulttype</parameter><initializer>MYSQLI_NUM</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>array</type><methodname>mysqli_fetch_all</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>resulttype</parameter><initializer>MYSQLI_NUM</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>mysqli_fetch_all</function> fetches all result rows and returns the result 
   set as an associative array, a numeric array, or both.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
    <varlistentry>
     <term><parameter>resulttype</parameter></term>
     <listitem>
      <para>
       This optional parameter is a constant indicating what type of array
       should be produced from the current row data. The possible values for
       this parameter are the constants <constant>MYSQLI_ASSOC</constant>,
       <constant>MYSQLI_NUM</constant>, or <constant>MYSQLI_BOTH</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an array of associative or numeric arrays holding result rows.
  </para>
 </refsect1>

 <refsect1 role="mysqlnd">
   &reftitle.mysqlnd;

  <para>
   &mysqli.available.mysqlnd;
  </para>

  <para>
    As <function>mysqli_fetch_all</function> returns all the rows as an
    array in a single step, it may consume more memory than some similar
    functions such as <function>mysqli_fetch_array</function>, which
    only returns one row at a time from the result set. Further, if you
    need to iterate over the result set, you will need a looping
    construct that will further impact performance. For these reasons
    <function>mysqli_fetch_all</function> should only be used in those
    situations where the fetched result set will be sent to another
    layer for processing.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_fetch_array</function></member>
    <member><function>mysqli_query</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

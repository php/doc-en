<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.array-unique" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_unique</refname>
  <refpurpose>Removes duplicate values from an array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_unique</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sort_flags</parameter><initializer>SORT_STRING</initializer></methodparam>
  </methodsynopsis>
  <para>
   Takes an input <parameter>array</parameter> and returns a new array
   without duplicate values.
  </para>
  <para>
   Note that keys are preserved. If multiple elements compare equal under
   the given <parameter>sort_flags</parameter>, then the key and value of
   the first equal element will be retained.
  </para>
  <note>
   <simpara>
    Two elements are considered equal if and only if
    <literal>(string) $elem1 === (string) $elem2</literal> i.e. 
    when the string representation is the same, the first element will be used.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       The input array.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sort_flags</parameter></term>
     <listitem>
      <para>
       The optional second parameter <parameter>sort_flags</parameter>
       may be used to modify the sorting behavior using these values:
      </para>
      <para>
       Sorting type flags:
       <itemizedlist>
        <listitem>
         <simpara><constant>SORT_REGULAR</constant> - compare items normally
         (don't change types)</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_NUMERIC</constant> - compare items numerically</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_STRING</constant> - compare items as strings</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_LOCALE_STRING</constant> - compare items as
          strings, based on the current locale.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the filtered array.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        If <parameter>sort_flags</parameter> is <constant>SORT_STRING</constant>,
        formerly <parameter>array</parameter> has been copied and non-unique
        elements have been removed (without packing the array afterwards), but
        now a new array is built by adding the unique elements. This can result
        in different numeric indexes.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_unique</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array("a" => "green", "red", "b" => "green", "blue", "red");
$result = array_unique($input);
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [a] => green
    [0] => red
    [1] => blue
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>array_unique</function> and types</title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array(4, "4", "3", 4, 3, "3");
$result = array_unique($input);
var_dump($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
array(2) {
  [0] => int(4)
  [2] => string(1) "3"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_count_values</function></member>
   </simplelist>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Note that <function>array_unique</function> is not intended to 
    work on multi dimensional arrays.
   </simpara>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

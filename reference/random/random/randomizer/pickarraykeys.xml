<?xml version="1.0" encoding="utf-8"?>
<refentry xml:id="random-randomizer.pickarraykeys" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Random\Randomizer::pickArrayKeys</refname>
  <refpurpose>Select random array keys</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Random\\Randomizer">
   <modifier>public</modifier> <type>array</type><methodname>Random\Randomizer::pickArrayKeys</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam><type>int</type><parameter>num</parameter></methodparam>
  </methodsynopsis>
  <para>
   Uniformly selects <parameter>num</parameter> distinct array keys of the input <parameter>array</parameter>.
  </para>
  <para>
   Each key of the input <parameter>array</parameter> is equally likely to be returned.
  </para>
  <caution>
   <para>
    The selection of the array keys depends on the internal structure of the input
    <parameter>array</parameter>. The returned array keys might be different for
    two equal input arrays and two <classname>Random\Engine</classname>s with
    identical state, depending on how the input arrays have been created.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>array</parameter></term>
    <listitem>
     <para>
      The array whose array keys are selected.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>num</parameter></term>
    <listitem>
     <para>
      The number of array keys to return; must be between <literal>1</literal>
      and the number of elements in <parameter>array</parameter>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   An &array; containing <parameter>num</parameter> distinct array keys of <parameter>array</parameter>.
  </para>
  <para>
   The returned &array; will be a list (<function>array_is_list</function>). It will be a subset
   of the &array; returned by <function>array_keys</function>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     If <parameter>num</parameter> is less than <literal>1</literal> or
     greater than the number of elements in <parameter>array</parameter>, a
     <classname>ValueError</classname> will be thrown.
    </simpara>
   </listitem>
   &random.engineErrors;
  </itemizedlist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>Random\Randomizer::pickArrayKeys</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
$r = new \Random\Randomizer();

$fruits = [ 'red' => '🍎', 'green' => '🥝', 'yellow' => '🍌', 'pink' => '🍑', 'purple' => '🍇' ];

// Pick 2 random array keys:
echo "Keys: ", implode(', ', $r->pickArrayKeys($fruits, 2)), "\n";

// Pick another 3:
echo "Keys: ", implode(', ', $r->pickArrayKeys($fruits, 3)), "\n";
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Keys: yellow, purple
Keys: red, green, yellow
]]>
   </screen>
  </example>
  <example>
   <title>Picking random values</title>
   <programlisting role="php">
<![CDATA[
<?php
$r = new \Random\Randomizer();

$fruits = [ 'red' => '🍎', 'green' => '🥝', 'yellow' => '🍌', 'pink' => '🍑', 'purple' => '🍇' ];

$keys = $r->pickArrayKeys($fruits, 2);
// Look up the values for the picked keys.
$selection = array_map(
    static fn ($key) => $fruits[$key],
    $keys
);

echo "Values: ", implode(', ', $selection), "\n";
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Values: 🍎, 🍇
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>array_keys</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.easter-date" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>easter_date</refname>
  <refpurpose>Get Unix timestamp for midnight on Easter of a given year</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>easter_date</methodname>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>year</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>CAL_EASTER_DEFAULT</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Returns the Unix timestamp corresponding to midnight on Easter of
   the given year.
  </para>
  <warning>
   <para>
    This function will generate a warning if the year is outside
    of the range for Unix timestamps (i.e. typically before 1970 or after 2037
    on 32bit systems).
   </para>
  </warning>
  <para>
   The date of Easter Day was defined by the Council of Nicaea in
   AD325 as the Sunday after the first full moon which falls on or
   after the Spring Equinox.  The Equinox is assumed to always fall
   on 21st March, so the calculation reduces to determining the date
   of the full moon and the date of the following Sunday.  The
   algorithm used here was introduced around the year 532 by
   Dionysius Exiguus.  Under the Julian Calendar (for years before
   1753) a simple 19-year cycle is used to track the phases of the
   Moon.  Under the Gregorian Calendar (for years after 1753 -
   devised by Clavius and Lilius, and introduced by Pope Gregory
   XIII in October 1582, and into Britain and its then colonies in
   September 1752) two correction factors are added to make the
   cycle more accurate.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>year</parameter></term>
     <listitem>
      <para>
       The year as a number between 1970 an 2037. If omitted or &null;, defaults to the
       current year according to the local time.
      </para>
     </listitem>
    </varlistentry>  
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Allows Easter dates to be calculated based on the Julian calendar when set
       to <constant>CAL_EASTER_ALWAYS_JULIAN</constant>. See also <link
        linkend="calendar.constants">calendar constants</link>.
       </para>
     </listitem>
    </varlistentry>  
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The easter date as a unix timestamp.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>year</parameter> is nullable now.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>easter_date</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

echo date("M-d-Y", easter_date(1999));        // Apr-04-1999
echo date("M-d-Y", easter_date(2000));        // Apr-23-2000
echo date("M-d-Y", easter_date(2001));        // Apr-15-2001

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>easter_date</function> relies on your system's C library time
    functions, rather than using PHP's internal date and time functions. As a
    consequence, <function>easter_date</function> uses the
    <literal>TZ</literal> environment variable to determine the time zone it
    should operate in, rather than using PHP's
    <link linkend="ini.date.timezone">default time zone</link>, which may
    result in unexpected behaviour when using this function in conjunction
    with other date functions in PHP.
   </para>
   <para>
    As a workaround, you can use the <function>easter_days</function> with
    <classname>DateTime</classname> and <classname>DateInterval</classname> to
    calculate the start of Easter in your PHP time zone as follows:
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function get_easter_datetime($year) {
    $base = new DateTime("$year-03-21");
    $days = easter_days($year);

    return $base->add(new DateInterval("P{$days}D"));
}

foreach (range(2012, 2015) as $year) {
    printf("Easter in %d is on %s\n",
           $year,
           get_easter_datetime($year)->format('F j'));
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Easter in 2012 is on April 8
Easter in 2013 is on March 31
Easter in 2014 is on April 20
Easter in 2015 is on April 5
]]>
    </screen>
   </informalexample>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <function>easter_days</function> for calculating Easter 
     before 1970 or after 2037
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.ifx-fetch-row" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ifx_fetch_row</refname>
  <refpurpose>Get row as an associative array</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>ifx_fetch_row</methodname>
   <methodparam><type>resource</type><parameter>result_id</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>position</parameter></methodparam>
  </methodsynopsis>
  <para>
   Fetches one row of data from the result associated with the specified
   result identifier.
  </para>
  <para>
   Subsequent calls to <function>ifx_fetch_row</function> would return the
   next row in the result set, or &false; if there are no  more rows.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result_id</parameter></term>
     <listitem>
      <para>
       <parameter>result_id</parameter> is a valid resultid returned by
       <function>ifx_query</function> or
       <function>ifx_prepare</function> (select type queries only!).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>position</parameter></term>
     <listitem>
      <para>
       An optional parameter for a "fetch" operation on "scroll" cursors:
       <literal>NEXT</literal>, <literal>PREVIOUS</literal>,
       <literal>CURRENT</literal>, <literal>FIRST</literal>, 
       <literal>LAST</literal> or a number.  If you specify a number, an
       "absolute" row fetch is executed.  This parameter is optional, and
       only valid for SCROLL cursors.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an associative array that corresponds to the fetched row, or
   &false; if there are no more rows.
  </para>
  <para>
   Blob columns are returned as integer blob id values for use in
   <function>ifx_get_blob</function> unless you have used
   ifx_textasvarchar(1) or ifx_byteasvarchar(1), in which case blobs
   are returned as string values.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Informix fetch rows</title>
    <programlisting role="php">
<![CDATA[
<?php
$rid = ifx_prepare ("select * from emp where name like " . $name,
                     $connid, IFX_SCROLL);
if (! $rid) {
    /* ... error ... */
}
$rowcount = ifx_affected_rows($rid);
if ($rowcount > 1000) {
    printf ("Too many rows in result set (%d)\n<br />", $rowcount);
    die ("Please restrict your query<br />\n");
}
if (! ifx_do ($rid)) {
   /* ... error ... */
}
$row = ifx_fetch_row ($rid, "NEXT");
while (is_array($row)) {
    for (reset($row); $fieldname=key($row); next($row)) {
        $fieldvalue = $row[$fieldname];
        printf ("%s = %s,", $fieldname, $fieldvalue);
    }
    printf("\n<br />");
    $row = ifx_fetch_row($rid, "NEXT");
}
ifx_free_result ($rid);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

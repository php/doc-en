<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.ssh2-auth-pubkey-file">
 <refnamediv>
  <refname>ssh2_auth_pubkey_file</refname>
  <refpurpose>Authenticate using a public key</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>ssh2_auth_pubkey_file</methodname>
   <methodparam><type>resource</type><parameter>session</parameter></methodparam>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>pubkeyfile</parameter></methodparam>
   <methodparam><type>string</type><parameter>privkeyfile</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>passphrase</parameter></methodparam>
  </methodsynopsis>
  <para>
   Authenticate using a public key read from a file.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>session</parameter></term>
     <listitem>
      <para>
       An SSH connection link identifier, obtained from a call to
       <function>ssh2_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pubkeyfile</parameter></term>
     <listitem>
      <para>
       The public key file needs to be in OpenSSH's format. It should look something like:
      </para>
      <para>
       ssh-rsa AAAAB3NzaC1yc2EAAA....NX6sqSnHA8= rsa-key-20121110
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>privkeyfile</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>passphrase</parameter></term>
     <listitem>
      <para>
       If <parameter>privkeyfile</parameter> is encrypted (which it should
       be), the <parameter>passphrase</parameter> must be provided.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Authentication using a public key</title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = ssh2_connect('shell.example.com', 22, array('hostkey'=>'ssh-rsa'));

if (ssh2_auth_pubkey_file($connection, 'username',
                          '/home/username/.ssh/id_rsa.pub',
                          '/home/username/.ssh/id_rsa', 'secret')) {
  echo "Public Key Authentication Successful\n";
} else {
  die('Public Key Authentication Failed');
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    The underlying libssh library doesn't support partial auths very cleanly
    That is, if you need to supply both a public key and a password it will
    appear as if this function has failed. In this particular case a failure
    from this call may just mean that auth hasn't been completed yet. You
    would need to ignore this failure and continue on and call
    <function>ssh2_auth_password</function> in order to complete
    authentication.
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.ssh2-send-eof" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ssh2_send_eof</refname>
  <refpurpose>Send EOF to stream</refpurpose>
 </refnamediv>

 <refsect1 role="description"><!-- {{{ -->
  &reftitle.description;
  <methodsynopsis role="procedural">
   <type>bool</type><methodname>ssh2_send_eof</methodname>
   <methodparam><type>resource</type><parameter>channel</parameter></methodparam>
  </methodsynopsis>
  <para>
   Sends an EOF to the stream; this is typically used to close standard input,
   while keeping output and error alive. For example, one can send a remote
   process some data over standard input, close it to start processing, and
   still be able to read out the results without creating additional files.
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="parameters"><!-- {{{ -->
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>channel</parameter></term>
    <listitem>
     <para>
      An SSH stream; can be acquired through functions like <function>ssh2_fetch_stream</function>
      or <function>ssh2_connect</function>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1><!-- }}} -->

 <refsect1 role="returnvalues"><!-- {{{ -->
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="seealso"><!-- {{{ -->
  &reftitle.seealso;
  <simplelist>
   <member><function>ssh2_fetch_stream</function></member>
  </simplelist>
 </refsect1><!-- }}} -->

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

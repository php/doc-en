<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.session-gc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>session_gc</refname>
  <refpurpose>Perform session data garbage collection</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>session_gc</methodname>
   <void/>
  </methodsynopsis>
  <para>
   <function>session_gc</function> is used to perform session data
   GC(garbage collection). PHP does probability based session GC by
   default.
  </para>
  <para>
   Probability based GC works somewhat but it has few problems. 1) Low
   traffic sites' session data may not be deleted within the preferred
   duration. 2) High traffic sites' GC may be too frequent GC. 3) GC is
   performed on the user's request and the user will experience a GC
   delay.
  </para>
  <para>
   Therefore, it is recommended to execute GC periodically for
   production systems using, e.g., "cron" for UNIX-like systems.
   Make sure to disable probability based GC by setting 
   <link linkend="ini.session.gc-probability">session.gc_probability</link> 
   to 0.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>session_gc</function> returns number of deleted session
   data for success, &false; for failure.
  </para>
  <para>
   Old save handlers do not return number of deleted session data, but 
   only success/failure flag. If this is the case, number of deleted
   session data became 1 regardless of actually deleted data.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>session_gc</function> example for task managers like cron</title>
    <programlisting role="php">
<![CDATA[
<?php
// Note: This script should be executed by the same user of web server process.

// Need active session to initialize session data storage access.
session_start();

// Executes GC immediately
session_gc();

// Clean up session ID created by session_gc()
session_destroy();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title><function>session_gc</function> example for user accessible script</title>
    <programlisting role="php">
<![CDATA[
<?php
// Note: session_gc() is recommended to be used by task manager script, but
// it may be used as follows.

// Used for last GC time check
$gc_time = '/tmp/php_session_last_gc';
$gc_period = 1800;

session_start();
// Execute GC only when GC period elapsed. 
// i.e. Calling session_gc() every request is waste of resources. 
if (file_exists($gc_time)) {
    if (filemtime($gc_time) < time() - $gc_period) {
        session_gc();
        touch($gc_time);
    }
} else {
    touch($gc_time);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_start</function></member>
    <member><function>session_destroy</function></member>
    <member><link linkend="ini.session.gc-probability">session.gc_probability</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

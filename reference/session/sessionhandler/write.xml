<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="sessionhandler.write" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SessionHandler::write</refname>
  <refpurpose>Write session data</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>SessionHandler::write</methodname>
   <methodparam><type>string</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Writes the session data to the session storage. Called by normal PHP shutdown, by
   <function>session_write_close</function>, or when <function>session_register_shutdown</function> fails.
   PHP will call <function>SessionHandler::close</function> immediately after this method returns.
  </para>
  <para>
   This method wraps the internal PHP save handler defined in the
   <link linkend="ini.session.save-handler">session.save_handler</link> ini setting that was set
   before this handler was set by <function>session_set_save_handler</function>.
  </para>
  <para>
   If this class is extended by inheritiance, calling the parent <parameter>write</parameter> method will invoke the
   wrapper for this method and therefore invoke the associated internal callback.  This allows this method to be
   overridden and or intercepted and filtered (for example, encrypting the <parameter>$data</parameter> value
   before sending it to the parent <parameter>write</parameter> method).
  </para>
  <para>
   For more information on what this method is expected to do, please refer to the documentation
   at <function>SessionHandlerInterface::write</function>.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>id</parameter></term>
    <listitem>
     <para>
      The session id.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>data</parameter></term>
    <listitem>
     <para>
      The encoded session data.  This data is the result of the PHP internally encoding the <varname>$_SESSION</varname> superglobal to a serialized
      string and passing it as this parameter.  Please note sessions use an alternative serialization method.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &returns.session.storage.retval;
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     The <link linkend="ini.session.serialize-handler">session.serialize_handler</link>
     configuration directive.
    </member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.imap-delete" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imap_delete</refname>
  <refpurpose>Mark a message for deletion from current mailbox</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imap_delete</methodname>
   <methodparam><type>IMAP\Connection</type><parameter>imap</parameter></methodparam>
   <methodparam><type>string</type><parameter>message_nums</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Marks messages listed in <parameter>message_nums</parameter> for deletion.
   Messages marked for deletion will stay in the mailbox until either
   <function>imap_expunge</function> is called or
   <function>imap_close</function> is called with the optional parameter
   <constant>CL_EXPUNGE</constant>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &imap.imap-parameter.imap;
    <varlistentry>
     <term><parameter>message_nums</parameter></term>
     <listitem>
      <para>
       A &string; representing one or more messages in IMAP4-style sequence format
       (<literal>"n"</literal>, <literal>"n:m"</literal>, or combination of these
       delimited by commas).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       You can set the <constant>FT_UID</constant> which tells the function
       to treat the <parameter>message_nums</parameter> argument as a
       <literal>UID</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns &true;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &imap.changelog.imap-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>imap_delete</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

$mbox = imap_open("{imap.example.org}INBOX", "username", "password")
    or die("Can't connect: " . imap_last_error());

$check = imap_mailboxmsginfo($mbox);
echo "Messages before delete: " . $check->Nmsgs . "<br />\n";

imap_delete($mbox, 1);

$check = imap_mailboxmsginfo($mbox);
echo "Messages after  delete: " . $check->Nmsgs . "<br />\n";

imap_expunge($mbox);

$check = imap_mailboxmsginfo($mbox);
echo "Messages after expunge: " . $check->Nmsgs . "<br />\n";

imap_close($mbox);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    IMAP mailboxes may not have their message flags saved between connections,
    so <function>imap_expunge</function> should be called during the same
    connection in order to guarantee that messages marked for deletion will
    actually be purged.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imap_undelete</function></member>
    <member><function>imap_expunge</function></member>
    <member><function>imap_close</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

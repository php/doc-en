<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.imap-search" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imap_search</refname>
  <refpurpose>This function returns an array of messages matching the given search criteria</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>imap_search</methodname>
   <methodparam><type>IMAP\Connection</type><parameter>imap</parameter></methodparam>
   <methodparam><type>string</type><parameter>criteria</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>SE_FREE</constant></initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  <para>
   This function performs a search on the mailbox currently opened
   in the given <acronym>IMAP</acronym> stream. 
  </para>
  <para>
   For example, to match all unanswered messages sent by Mom, you'd
   use: "UNANSWERED FROM mom". Searches appear to be case
   insensitive. This list of criteria is from a reading of the UW
   c-client source code and may be incomplete or
   inaccurate (see also <link xlink:href="&url.rfc;1176">RFC1176</link>, 
   section "tag SEARCH search_criteria").
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &imap.imap-parameter.imap;
    <varlistentry>
     <term><parameter>criteria</parameter></term>
     <listitem>
      <para>
       A string, delimited by spaces, in which the following keywords are
       allowed. Any multi-word arguments (e.g.
       <literal>FROM "joey smith"</literal>) must be quoted. Results will match
       all <parameter>criteria</parameter> entries.
       <itemizedlist>
        <listitem>
         <simpara>
          ALL - return all messages matching the rest of the criteria
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          ANSWERED - match messages with the \\ANSWERED flag set
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          BCC "string" - match messages with "string" in the Bcc: field
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          BEFORE "date" - match messages with Date: before "date"
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          BODY "string" - match messages with "string" in the body of the message
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          CC "string" - match messages with "string" in the Cc: field
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          DELETED - match deleted messages
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          FLAGGED - match messages with the \\FLAGGED (sometimes
          referred to as Important or Urgent) flag set
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          FROM "string" - match messages with "string" in the From: field
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          KEYWORD "string" - match messages with "string" as a keyword
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          NEW - match new messages
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          OLD - match old messages
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          ON "date" - match messages with Date: matching "date"
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          RECENT - match messages with the \\RECENT flag set
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          SEEN - match messages that have been read (the \\SEEN flag is set)
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          SINCE "date" - match messages with Date: after "date"
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          SUBJECT "string" - match messages with "string" in the Subject:
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          TEXT "string" - match messages with text "string"
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          TO "string" - match messages with "string" in the To:
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          UNANSWERED - match messages that have not been answered
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          UNDELETED - match messages that are not deleted
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          UNFLAGGED - match messages that are not flagged
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          UNKEYWORD "string" - match messages that do not have the
          keyword "string"
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          UNSEEN - match messages which have not been read yet
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Valid values for <parameter>flags</parameter> are 
       <constant>SE_UID</constant>, which causes the returned array to
       contain UIDs instead of messages sequence numbers.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      <para>
       MIME character set to use when searching strings.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an array of message numbers or UIDs.
  </para>
  <para>
   Return &false; if it does not understand the search
   <parameter>criteria</parameter> or no messages have been found.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &imap.changelog.imap-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="imap-search.examples">
   <title><function>imap_search</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
$imap   = imap_open('{imap.example.com:993/imap/ssl}INBOX', 'foo@example.com', 'pass123', OP_READONLY);

$some   = imap_search($imap, 'SUBJECT "HOWTO be Awesome" SINCE "8 August 2008"', SE_UID);
$msgnos = imap_search($imap, 'ALL');
$uids   = imap_search($imap, 'ALL', SE_UID);

print_r($some);
print_r($msgnos);
print_r($uids);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Array
(
    [0] => 4
    [1] => 6
    [2] => 11
)
Array
(
    [0] => 1
    [1] => 2
    [2] => 3
    [3] => 4
    [4] => 5
    [5] => 6
)
Array
(
    [0] => 1
    [1] => 4
    [2] => 6
    [3] => 8
    [4] => 11
    [5] => 12
)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imap_listscan</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

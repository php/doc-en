<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1.2.1 $ -->

<chapter xml:id='sdo.limitations'>
 <title>Limitations</title>
 <procedure xml:id='sdo.limitations.implementation'>
  <title>Implementation Limitations</title>
  <para>
   The following are limitations in the current SDO implementation:
  </para>
  <step>
   <para>
    There is no support for multi-byte character sets.
    This will be considered, depending on community requirements,
    in the Unicode-enabled version of PHP.
    See <link linkend="ref.unicode">Unicode Functions</link>.
   </para>
  </step>
 </procedure>
 <procedure xml:id='sdo.limitations.sdo'>
  <title>SDO Limitations</title>
  <para>
   The following SDO 2.0 concepts are not supported in the current 
   PHP implementation.
   It is not necessarily the case that these will all be added over time.
   Their inclusion will depend on community requirements.
  </para>
  <step>
   <para>
    Bi-directional relationships.
   </para>
  </step>
  <step>
   <para>
    Type and property alias names.
   </para>
  </step>
  <step>
   <para>
    Read-only properties.
   </para>
  </step>
  <step>
   <para> 
    The Helper classes defined in SDO 2.0 are not directly implemented. 
    However equivalent function is provided in a more natural way for PHP. 
    For example the function of <command>CopyHelper::copy()</command> 
    is provided by applying the PHP
    <link linkend='language.oop5.cloning'>clone</link> keyword to a data object.
   </para>
  </step>
 </procedure>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

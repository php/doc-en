<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1.2.1 $ -->

<chapter xml:id="sdo.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <!-- {{{ Requirements -->
 <section xml:id="sdo.requirements">
  &reftitle.required;
  <para>
   The SDO extension requires PHP 5.1.0 or higher. It also requires the
   libxml2 library. Normally libxml2 will already be installed, but if
   not, it can be downloaded from
   <link xlink:href='&url.libxml;'>&url.libxml;</link>.
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Installation -->
 <section xml:id="sdo.installation">
  &reftitle.install;
  <note>
   <para>
    Earlier versions of the SDO extension required a separate shared
    library for the XML DAS. This is now obsolete and any references to
    <filename>php_sdo_das_xml.dll</filename>
    or
    <filename>sdo_das_xml.so</filename>
    should be removed from your &php.ini;.
   </para>
  </note>
  <procedure xml:id='sdo.install.unix'>
   <title>Unix systems</title>
   <step>
    <para>
     The three SDO components - the SDO core, the XML DAS and the
     Relational DAS - are packaged together with Service Component 
     Architecture (SCA) into one PECL project, SCA_SDO, so you can 
     download SCA and all three parts of SDO with the command:
     <screen>
<![CDATA[
pecl install SCA_SDO
]]>
     </screen>
    </para>
    <para>
     This command will build the SDO shared library as well as
     installing the PHP files that make up SCA and the SDO 
     Relational DAS.
    </para>
    <para>
     If you want to use the latest beta version, then instead run:
     <screen>
<![CDATA[
pecl install SCA_SDO-beta
]]>
     </screen>
    </para>
   </step>
   <step>
    <para>
     The
     <command>pecl</command>
     command automatically installs the SDO module into your PHP
     extensions directory. To enable the SDO extension you must add the
     following line to
     &php.ini;:
     <screen>
<![CDATA[
extension=sdo.so
]]>
     </screen>
    </para>
    <para>
     For more information about building PECL packages, consult the
     <link linkend="install.pecl">PECL installation</link>
     section of the manual.
    </para>
   </step>
  </procedure>

  <procedure xml:id='sdo.install.win32'>
   <title>Windows</title>
   <step>
    <para>
     The latest SDO DLL can be downloaded from
     <link xlink:href='&url.pecl.win.ext;php_sdo.dll'>php_sdo.dll</link>
     .
    </para>
    <para>
     Note that currently the
     <link xlink:href='&url.pecl.win;'>pecl4win</link>
     site does not provide this binary at the current release level;
     you can only download the latest level.
    </para>
   </step>
   <step>
    <para>
     The
     <command>pecl</command>
     command automatically installs the SDO module into your PHP
     extensions directory. To enable the SDO extension you must add the
     following line to
     &php.ini;:
     <screen>
<![CDATA[
extension=php_sdo.dll
]]>
     </screen>
    </para>
   </step>
   <step>
    <para>
     The Relational DAS can be downloaded and installed with the
     command:
     <screen>
<![CDATA[
pecl install -B sdo
]]>
     </screen>
    </para>
    <para>
     The Relational DAS is written in PHP. You may need to update your
     <link linkend="ini.include-path">include_path</link>
     in
     &php.ini;
     to point to the directory that contains
     <filename>sdo/DAS/Relational</filename>.
    </para>
   </step>
  </procedure>

  <procedure xml:id='sdo.build.linux.steps'>
   <title>Building SDO on Linux</title>
   <para>
    This section describes how to build the SDO core and XML DAS on
    Linux. You would only need to know how to do this if you wish to
    build a recent version that you have checked out of CVS.
   </para>
   <step>
    <para>
     Change to the main extension directory:
     <command>cd &lt; wherever your sdo code is &gt;</command>
    </para>
   </step>
   <step>
    <para>
     Run
     <command>phpize</command>
     , which will set up the environment to compile SDO.
    </para>
   </step>
   <step>
    <para>
     Next, run
     <command>./configure; make; make install</command>
     . Please note, you may need to login as root to install the
     extension.
    </para>
   </step>
   <step>
    <para>
     Make sure that the module is loaded by PHP, by adding
     <filename>extension=sdo.so</filename>
     to your &php.ini; file.
    </para>
   </step>
  </procedure>
 </section>
 <!-- }}} -->

 <!-- {{{ Configuration -->
 <section xml:id="sdo.configuration">
  &reftitle.runtime;
  &no.config;
 </section>
 <!-- }}} -->

 <!-- {{{ Resources -->
 <section xml:id="sdo.resources">
  &reftitle.resources;
  &no.resource;
 </section>
 <!-- }}} -->

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


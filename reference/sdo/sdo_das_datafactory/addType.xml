<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<refentry xml:id="sdo-das-datafactory.addtype" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_DataFactory::addType</refname>
  <refpurpose>
   Add a new type to a model
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>SDO_DAS_DataFactory::addType</methodname>
   <methodparam><type>string</type><parameter>type_namespace_uri</parameter></methodparam>
   <methodparam><type>string</type><parameter>type_name</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>

  &warn.experimental.func;

  <para>
   Add a new type to the SDO_DAS_DataFactory,
   defined by its namespace and type name.
   The type becomes part of the model of data objects
   that the data factory can create.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>type_namespace_uri</parameter>
     </term>
     <listitem>
      <para>
       The namespace of the type.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>type_name</parameter>
     </term>
     <listitem>
      <para>
       The name of the type.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem><para> This array holds one or more key=&gt;value pairs to set attribute
      values for the type. The optional keywords are:</para>
      <variablelist>
       <varlistentry>
        <term><parameter>open</parameter></term>
        <listitem>
         <para>A flag to say whether the type is open.
         An SDO_DataObject whose type is open can have properties added to
         them which are not described by the type. This capability is used to
         support working with XML documents whose schema support open content
         such as that described by an &lt;xsd:any&gt; element.
         The default value is 'false'.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <parameter>sequenced</parameter>
        </term>
        <listitem>
         <para> A flag to say whether the type is sequenced.
         Sequenced types can have the ordering across properties preserved
         and can contain unstructured text.
         The default value is 'false'.
         For more information on sequenced types see the section on
         <link linkend="sdo.sample.sequence">Working with Sequenced Data
         Objects</link>.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <parameter>basetype</parameter>
        </term>
        <listitem>
         <para> If specified, an array of namespace URI and type name strings for the
         type from which this type is derived.
         An example of the use of base types is when a type derived in an XML
         schema inherits from another type by using &lt;extension base="..."&gt;.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   None.
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->


 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here
       <entry>Description of change
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A
     <function>SDO_DAS_DataFactory::addType</function>
example</title>
    <para>
The following adds a new data object type of 'CompanyType'
where that type belongs to the namespace 'CompanyNS'.
    </para>
    <programlisting role="php">
     <![CDATA[
<?php
  $df->addType('CompanyNS', 'CompanyType');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>


 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

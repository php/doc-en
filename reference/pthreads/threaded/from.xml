<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="threaded.from" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Threaded::from</refname>
  <refpurpose>Creation</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   <para>
    This method has been removed in pthreads v3. With the introduction of
    <link linkend="language.oop5.anonymous">anonymous classes</link> in PHP 7,
    these can now be used instead.
   </para>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>Threaded</type><methodname>Threaded::from</methodname>
   <methodparam><type>Closure</type><parameter>run</parameter></methodparam>
   <methodparam choice="opt"><type>Closure</type><parameter>construct</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
  Creates an anonymous Threaded object from closures
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>run</parameter></term>
    <listitem>
     <para>
  The closure to use for ::run
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>construct</parameter></term>
    <listitem>
     <para>
  The constructor to use for anonymous object
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>args</parameter></term>
    <listitem>
     <para>
  The arguments to pass to constructor
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  A new anonymous Threaded object
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Thread safe objects from closures</title>
    <programlisting role="php">
<![CDATA[
<?php
$pool = new Pool(4);
$pool->submit(Collectable::from(function(){
    echo "Hello World";
    $this->setGarbage();
}));
/* ... */
$pool->shutdown();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Hello World
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

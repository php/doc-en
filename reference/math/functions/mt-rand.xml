<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.mt-rand" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mt_rand</refname>
  <refpurpose>Generate a random value via the Mersenne Twister Random Number Generator</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>mt_rand</methodname>
   <void/>
  </methodsynopsis>
  <methodsynopsis>
   <type>int</type><methodname>mt_rand</methodname>
   <methodparam><type>int</type><parameter>min</parameter></methodparam>
   <methodparam><type>int</type><parameter>max</parameter></methodparam>
  </methodsynopsis>
  &caution.cryptographically-insecure;
  <simpara>
   Many random number generators of older libcs
   have dubious or unknown characteristics and are slow. 
   The <function>mt_rand</function> function is a drop-in replacement
   for the older <function>rand</function>. It uses a random
   number generator with known characteristics using the
   <link xlink:href="&url.mersenne;">Mersenne Twister</link>, which
   will produce random numbers four times faster than what the average
   libc rand() provides.
  </simpara>
  <simpara>
   If called without the optional <parameter>min</parameter>,
   <parameter>max</parameter> arguments <function>mt_rand</function>
   returns a pseudo-random value between 0 and
   <function>mt_getrandmax</function>.  If you want a random number
   between 5 and 15 (inclusive), for example, use <literal>mt_rand(5,
   15)</literal>.
  </simpara>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>min</parameter></term>
     <listitem>
      <para>
       Optional lowest value to be returned (default: 0)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>max</parameter></term>
     <listitem>
      <para>
       Optional highest value to be returned (default: <function>mt_getrandmax</function>)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A random integer value between <parameter>min</parameter> (or 0)
   and <parameter>max</parameter> (or <function>mt_getrandmax</function>, inclusive),
   or &false; if <parameter>max</parameter> is less than <parameter>min</parameter>.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <function>mt_rand</function> <link linkend="migration72.incompatible.rand-mt_rand-output">has received a bug fix</link> for a modulo bias bug. This means that sequences generated with a specific seed may differ from PHP 7.1 on 64-bit machines.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        <function>rand</function> <link linkend="migration71.incompatible.rand-srand-aliases">has been made</link> an alias of <function>mt_rand</function>.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        <function>mt_rand</function> <link linkend="migration71.incompatible.fixes-to-mt_rand-algorithm">has been updated</link> to use the fixed, correct, version of
         the Mersenne Twister algorithm. To fall back to the old behaviour, use <function>mt_srand</function> with <constant>MT_RAND_PHP</constant> as the second parameter.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mt_rand</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
echo mt_rand() . "\n";
echo mt_rand() . "\n";

echo mt_rand(5, 15);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
1604716014
1478613278
6
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    <parameter>min</parameter> <parameter>max</parameter> range must
    be within the range <function>mt_getrandmax</function>. i.e. (<parameter>max</parameter> -
    <parameter>min</parameter>) &lt;= <function>mt_getrandmax</function>
    Otherwise, <function>mt_rand</function> may return poorer random numbers
    than it should.
   </para>
  </warning>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mt_srand</function></member>
    <member><function>mt_getrandmax</function></member>
    <member><function>random_int</function></member>
    <member><function>random_bytes</function></member>
    <member><function>openssl_random_pseudo_bytes</function></member>
    <member><function>rand</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4.2.1 $ -->
<!-- Purpose: xml -->
<!-- Membership: pecl, bundled, external -->

 <reference xml:id="ref.xmlreader" xmlns="http://docbook.org/ns/docbook">
  <title>XMLReader functions</title>
  <titleabbrev>XMLReader</titleabbrev>

  <partintro>

   <section xml:id="xmlreader.intro">
    &reftitle.intro;
    <para>
     The XMLReader extension is an XML Pull parser. The reader acts as a 
     cursor going forward on the document stream and stopping at each node 
     on the way.
    </para>
   </section>

   <section xml:id="xmlreader.encoding">
    &reftitle.encoding;
    <para>
     It is important to note that internally, libxml uses the UTF-8 encoding
     and as such, the encoding of the retrieved contents will always be in 
     UTF-8 encoding.
    </para>
   </section>

   &reference.xmlreader.configure;

   <section xml:id='xmlreader.classes'>
    &reftitle.classes;
    <para>
    </para>

    <section xml:id='xmlreader.class.xmlreader'>
     <title><classname>XMLReader</classname></title>
     <para>
      </para>
     <section xml:id='xmlreader.class.xmlreader.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend="function.xmlreader-close" /> - Close the XMLReader input</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-expand" /> - Export current node to a DOM node</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-getattribute" /> - Get value of attribute by name</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-getattributeno" /> - Get value of attribute by position</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-getattributens" /> - Get value of attribute by name and URI</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-getparserproperty" /> - Indicates if parser property is set or not</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-isvalid" /> - Indicates if document is valid</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-lookupnamespace" /> - Get URI for prefix in scope of node</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-movetoattribute" /> - Positions reader on named attribute</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-movetoattributeno" /> - Positions reader on attribute by index</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-movetoattributens" /> - Position reader on attribute by name and URI</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-movetoelement" /> - Move to parent element of current attribute node</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-movetofirstattribute" /> - Move to first attribute of node</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-movetonextattribute" /> - Move to next attribute of node</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-next" /> - Move to next element skipping children</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-open" /> - Set URI to be parsed</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-read" /> - Move to next node in stream</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-setparserproperty" /> - Set parser property</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-setrelaxngschema" /> - Set URI of RelaxNG schema to validate against</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-setrelaxngschemasource" /> - Set string containing RelaxNG schema to validate against</para>
       </listitem>
       <listitem>
        <para><xref linkend="function.xmlreader-xml" /> - Set string of data to be parsed</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='xmlreader.class.xmlreader.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>Name</entry>
          <entry>Type</entry>
          <entry>Read-only</entry>
          <entry>Description</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>attributeCount</entry>
          <entry>int</entry>
          <entry>yes</entry>
          <entry>The number of attributes on the node</entry>
         </row>
         <row>
          <entry>baseURI</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>The base URI of the node</entry>
         </row>
         <row>
          <entry>depth</entry>
          <entry>int</entry>
          <entry>yes</entry>
          <entry>Depth of the node in the tree starting at 0</entry>
         </row>
         <row>
          <entry>hasAttributes</entry>
          <entry>bool</entry>
          <entry>yes</entry>
          <entry>Indicates if node has attributes</entry>
         </row>
         <row>
          <entry>hasValue</entry>
          <entry>bool</entry>
          <entry>yes</entry>
          <entry>Indicates if node has a text value</entry>
         </row>
         <row>
          <entry>isDefault</entry>
          <entry>bool</entry>
          <entry>yes</entry>
          <entry>Indicates if attribute is defaulted from DTD</entry>
         </row>
         <row>
          <entry>isEmptyElement</entry>
          <entry>bool</entry>
          <entry>yes</entry>
          <entry>Indicates if node is an empty element tag</entry>
         </row>
         <row>
          <entry>localName</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>The local name of the node</entry>
         </row>
         <row>
          <entry>name</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>The qualified name of the node</entry>
         </row>
         <row>
          <entry>namespaceURI</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>The URI of the namespace associated with the node</entry>
         </row>
         <row>
          <entry>nodeType</entry>
          <entry>int</entry>
          <entry>yes</entry>
          <entry>The node type for the node</entry>
         </row>
         <row>
          <entry>prefix</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>The prefix of the namespace associated with the node</entry>
         </row>
         <row>
          <entry>value</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>The text value of the node</entry>
         </row>
         <row>
          <entry>xmlLang</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>The xml:lang scope which the node resides</entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </section>
    </section>
   </section>
      
   &reference.xmlreader.constants;
      
  </partintro>

 &reference.xmlreader.functions.entities;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

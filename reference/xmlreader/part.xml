<?xml version='1.0' encoding='UTF-8' ?>
<!-- $Revision: 1.1.2.1 $ -->
<part xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="xmlreader" xml:lang="en" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>XMLReader</title>

 <partintro>
<!-- {{{ XMLReader intro -->
  <section xml:id="part.xmlreader.intro">
   &reftitle.intro;
   <para>
    The XMLReader extension is an XML Pull parser. The reader acts as a 
    cursor going forward on the document stream and stopping at each node 
    on the way.
   </para>
  </section>
<!-- }}} -->
<!-- {{{ XMLReader encoding -->
  <section xml:id="part.xmlreader.encoding">
   &reftitle.encoding;
   <para>
    It is important to note that internally, libxml uses the UTF-8 encoding
    and as such, the encoding of the retrieved contents will always be in 
    UTF-8 encoding.
   </para>
  </section>
<!-- }}} -->
<!-- {{{ XMLReader installation -->
  <section xml:id="part.xmlreader.installation" xmlns="http://docbook.org/ns/docbook">
   &reftitle.install;
   <para>
    The XMLReader extension is available in PECL as of PHP 5.0.0 and is 
    included and enabled as of PHP 5.1.0 by default. It can be enabled
    by adding the argument <option role="configure">--enable-xmlreader</option>
    (or <option role="configure">--with-xmlreader</option> before 5.1.0)
    to your configure line. The <link linkend="ref.libxml">libxml</link>
    extension is required.
   </para>
  </section>
<!-- }}} -->
 </partintro>

 <reference xml:id="ref.xmlreader">
  <title>The XMLReader class</title>
  <titleabbrev>XMLReader</titleabbrev>

  <partintro>
<!-- {{{ XMLReader intro -->
  <section xml:id="ref.xmlreader.intro">
   &reftitle.intro;
   <para>
    The XMLReader extension is an XML Pull parser. The reader acts as a 
    cursor going forward on the document stream and stopping at each node 
    on the way.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="ref.xmlreader.synopsis">
   <title>Class synopsis</title>
    <classsynopsis>
<!-- {{{ XMLReader hier -->
     <ooclass>
      <classname>XMLReader</classname>
     </ooclass>
<!-- }}} -->
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('ref.xmlreader.props')/descendant::db:fieldsynopsis)" />
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('ref.xmlreader')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis)" />
    </classsynopsis>
   </section>
<!-- {{{ XMLReader props -->
   <section xml:id="ref.xmlreader.props">
    &reftitle.properties;
    <informaltable>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Property</entry>
        <entry>Description</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>int</type>
          <varname>attributeCount</varname>
         </fieldsynopsis>
        </entry>
        <entry>The number of attributes on the node</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>string</type>
          <varname>baseURI</varname>
         </fieldsynopsis>
        </entry>
        <entry>The base URI of the node</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>int</type>
          <varname>depth</varname>
         </fieldsynopsis>
        </entry>
        <entry>Depth of the node in the tree, starting at 0</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>bool</type>
          <varname>hasAttributes</varname>
         </fieldsynopsis>
        </entry>
        <entry>Indicates if node has attributes</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>bool</type>
          <varname>hasValue</varname>
         </fieldsynopsis>
        </entry>
        <entry>Indicates if node has a text value</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>bool</type>
          <varname>isDefault</varname>
         </fieldsynopsis>
        </entry>
        <entry>Indicates if attribute is defaulted from DTD</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>bool</type>
          <varname>isEmptyElement</varname>
         </fieldsynopsis>
        </entry>
         <entry>Indicates if node is an empty element tag</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>string</type>
          <varname>localName</varname>
         </fieldsynopsis>
        </entry>
        <entry>The local name of the node</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>string</type>
          <varname>name</varname>
         </fieldsynopsis>
        </entry>
        <entry>The qualified name of the node</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>string</type>
          <varname>namespaceURI</varname>
         </fieldsynopsis>
        </entry>
        <entry>The URI of the namespace associated with the node</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>int</type>
          <varname>nodeType</varname>
         </fieldsynopsis>
        </entry>
        <entry>The node type for the node</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>string</type>
          <varname>prefix</varname>
         </fieldsynopsis>
        </entry>
        <entry>The prefix of the namespace associated with thenode</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>string</type>
          <varname>value</varname>
         </fieldsynopsis>
        </entry>
        <entry>The text value of the node</entry>
       </row>

       <row>
        <entry>
         <fieldsynopsis>
          <modifier>public</modifier>
          <modifier>readonly</modifier>
          <type>string</type>
          <varname>xmlLang</varname>
         </fieldsynopsis>
        </entry>
        <entry>The xml:lang scope which the node resides</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
   </section>
<!-- }}} -->
  </partintro>
  &reference.xmlreader.functions;
  <!-- {{{ refentrys
  &reference.xmlreader.functions.xmlreader-close;
  &reference.xmlreader.functions.xmlreader-expand;
  &reference.xmlreader.functions.xmlreader-getattribute;
  &reference.xmlreader.functions.xmlreader-getattributeno;
  &reference.xmlreader.functions.xmlreader-getattributens;
  &reference.xmlreader.functions.xmlreader-getparserproperty;
  &reference.xmlreader.functions.xmlreader-isvalid;
  &reference.xmlreader.functions.xmlreader-lookupnamespace;
  &reference.xmlreader.functions.xmlreader-movetoattribute;
  &reference.xmlreader.functions.xmlreader-movetoattributeNo;
  &reference.xmlreader.functions.xmlreader-movetoattributeNs;
  &reference.xmlreader.functions.xmlreader-movetoelement;
  &reference.xmlreader.functions.xmlreader-movetofirstattribute;
  &reference.xmlreader.functions.xmlreader-movetonextattribute;
  &reference.xmlreader.functions.xmlreader-next;
  &reference.xmlreader.functions.xmlreader-open;
  &reference.xmlreader.functions.xmlreader-read;
  &reference.xmlreader.functions.xmlreader-setparserproperty;
  &reference.xmlreader.functions.xmlreader-setrelaxngschema;
  &reference.xmlreader.functions.xmlreader-setrelaxngschemasource;
  &reference.xmlreader.functions.xmlreader-xml;
}}} -->
 </reference>
</part>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


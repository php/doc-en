<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.sem-get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sem_get</refname>
  <refpurpose>Get a semaphore id</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>SysvSemaphore</type><type>false</type></type><methodname>sem_get</methodname>
   <methodparam><type>int</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>max_acquire</parameter><initializer>1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>permissions</parameter><initializer>0666</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>auto_release</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>sem_get</function> returns an id that can be used to
   access the System V semaphore with the given <parameter>key</parameter>.
  </para>
  <para>
   A second call to <function>sem_get</function> for the same key
   will return a different semaphore identifier, but both
   identifiers access the same underlying semaphore.
  </para>
  <para>
   If <parameter>key</parameter> is <literal>0</literal>, a new private semaphore
   is created for each call to <function>sem_get</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>max_acquire</parameter></term>
     <listitem>
      <para>
       The number of processes that can acquire the semaphore simultaneously
       is set to <parameter>max_acquire</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>permissions</parameter></term>
     <listitem>
      <para>
       The semaphore permissions. Actually this value is
       set only if the process finds it is the only process currently
       attached to the semaphore.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>auto_release</parameter></term>
     <listitem>
      <para>
       Specifies if the semaphore should be automatically released on request
       shutdown.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a positive semaphore identifier on success, or &false; on
   error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        On success, this function returns a <classname>SysvSemaphore</classname> instance now;
        previously, a <type>resource</type> was returned.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        The type of <parameter>auto_release</parameter> has been changed from
        <type>int</type> to <type>bool</type>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <simpara>
    When using <function>sem_get</function> to access a semaphore created
    outside PHP, note that the semaphore must have been created as a set of 3
    semaphores (for example, by specifying 3 as the <literal>nsems</literal>
    parameter when calling the C <literal>semget()</literal> function),
    otherwise PHP will be unable to access the semaphore.
   </simpara>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sem_acquire</function></member>
    <member><function>sem_release</function></member>
    <member><function>ftok</function></member>
   </simplelist>
  </para>
 </refsect1>  

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13.2.2 $ -->
<!-- State: deprecated -->

<book xml:id="ref.overload" xmlns="http://docbook.org/ns/docbook">
 <title>Object property and method call overloading</title>
 <titleabbrev>Object overloading</titleabbrev>

 <preface xml:id="overload.intro">
  &reftitle.intro;
  <para>
   The purpose of this extension is to allow overloading of object
   property access and method calls. Only one function is defined
   in this extension, <function>overload</function> which
   takes the name of the class that should have this functionality
   enabled. The class named has to define appropriate methods if
   it wants to have this functionality: <literal>__get()</literal>,
   <literal>__set()</literal> and <literal>__call()</literal>
   respectively for getting/setting a property, or calling a method.
   This way overloading can be selective. Inside these handler
   functions the overloading is disabled so you can access object
   properties normally.
  </para>
  &warn.experimental;
  <warning>
   <para>
    This extension is not a part of PHP 5. PHP 5 supports <literal>__get()</literal>, <literal>__set()</literal> and
    <literal>__call()</literal> natively. See the <link
     linkend="language.oop5.overloading">Overloading in PHP 5</link> page
    for more information.
   </para>
  </warning>
 </preface>

 <chapter xml:id="overload.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Installing/Configuring</title>
 
  <section xml:id="overload.requirements">
   &reftitle.required;
   &no.requirement;
  </section>
 
  &reference.overload.configure;
 
  <section xml:id="overload.configuration">
   &reftitle.runtime;
   &no.config;
  </section>
 
  <section xml:id="overload.resources">
   &reftitle.resources;
   &no.resource;
  </section>
 
 </chapter>

  <appendix xml:id="overload.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  &reftitle.constants;
  &no.constants;
 </appendix>

 <appendix xml:id="overload.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  &reftitle.examples;
  <section xml:id="overload.examples.basic">
   <para>
    Some simple examples on using the <function>overload</function>
    function:
    <example>
     <title>Overloading a PHP class</title>
     <programlisting role="php">
<![CDATA[
<?php

class OO {
    var $a = 111;
    var $elem = array('b' => 9, 'c' => 42);

    // Callback method for getting a property
    function __get($prop_name, &$prop_value) 
    {
        if (isset($this->elem[$prop_name])) {
            $prop_value = $this->elem[$prop_name];
            return true;
        } else {
            return false;
        }
    }

    // Callback method for setting a property
    function __set($prop_name, $prop_value) 
    {
        $this->elem[$prop_name] = $prop_value;
        return true;
    }
}

// Here we overload the OO object
overload('OO');

$o = new OO;
echo "\$o->a: $o->a\n"; // print: $o->a: 111
echo "\$o->b: $o->b\n"; // print: $o->b: 9
echo "\$o->c: $o->c\n"; // print: $o->c: 42
echo "\$o->d: $o->d\n"; // print: $o->d:

// add a new item to the $elem array in OO
$o->x = 56; 

// instantiate stdclass (it is built-in in PHP 4)
// $val is not overloaded!
$val = new stdclass;
$val->prop = 555;

// Set "a" to be an array with the $val object in it
// But __set() will put this in the $elem array
$o->a = array($val);
var_dump($o->a[0]->prop);

?>
]]>
     </programlisting>
    </example>
   </para>
  </section>
 </appendix>

 <reference xml:id="functions.overload" xmlns="http://docbook.org/ns/docbook">
  <title>Object overloading &Functions;</title>

  &reference.overload.functions.entities;

 </reference>
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

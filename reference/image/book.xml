<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1.2.1 $ -->
<!-- Purpose: utilspec.image -->
<!-- Membership: bundled -->
 
<book xml:id="book.image" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Image</title>
 
 <!-- {{{ preface -->
 <preface xml:id="intro.image">
  &reftitle.intro;
  <para>
   PHP is not limited to creating just HTML output.  It can also be
   used to create and manipulate image files in a variety of different
   image formats, including gif, png, jpg, wbmp, and xpm. Even more
   convenient, PHP can output image streams directly to a browser. You
   will need to compile PHP with the GD library of image functions for
   this to work. GD and PHP may also require other libraries, depending
   on which image formats you want to work with.
  </para>
  <para>
   You can use the image functions in PHP to get the size of
   <acronym>JPEG</acronym>, <acronym>GIF</acronym>,
   <acronym>PNG</acronym>, <acronym>SWF</acronym>,
   <acronym>TIFF</acronym> and <acronym>JPEG2000</acronym> images.
  </para>
  <para>
    With the <link linkend="ref.exif">exif extension</link>, you are able
    to work with information stored in headers of
    <acronym>JPEG</acronym> and <acronym>TIFF</acronym> images. This way you can
    read meta data generated by digital cameras. The exif
    functions do not require the <acronym>GD</acronym> library.
  </para>
  
  <para>
   <note>
    <simpara>
     Read the requirements section about how to expand image capabilities
     to read, write and modify images. To read meta data of pictures
     taken by digital cameras you need the above mentioned
     <link linkend="ref.exif">exif extension</link>.
    </simpara>
   </note>
  </para>
 </preface>
 <!-- }}} -->
 
 &reference.image.setup;
 &reference.image.constants;
 &reference.image.examples;
 &reference.image.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


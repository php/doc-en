<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.imagecropauto" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagecropauto</refname>
  <refpurpose>Crop an image automatically using one of the available modes</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>GdImage</type><type>false</type></type><methodname>imagecropauto</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>IMG_CROP_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>float</type><parameter>threshold</parameter><initializer>0.5</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>color</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Automatically crops an image according to the given
   <parameter>mode</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   &gd.image.description;
   <varlistentry>
    <term><parameter>mode</parameter></term>
    <listitem>
     <para>
      One of the following constants:
     </para>
     <variablelist>
      <varlistentry>
       <term><constant>IMG_CROP_DEFAULT</constant></term>
       <listitem>
        <simpara>
         Same as <constant>IMG_CROP_TRANSPARENT</constant>.
         Before PHP 7.4.0, the bundled libgd fell back to <constant>IMG_CROP_SIDES</constant>,
         if the image had no transparent color.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_TRANSPARENT</constant></term>
       <listitem>
        <simpara>
         Crops out a transparent background.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_BLACK</constant></term>
       <listitem>
        <simpara>
         Crops out a black background.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_WHITE</constant></term>
       <listitem>
        <simpara>
          Crops out a white background.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_SIDES</constant></term>
       <listitem>
        <simpara>
         Uses the 4 corners of the image to attempt to detect the background to
         crop.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_THRESHOLD</constant></term>
       <listitem>
        <simpara>
         Crops an image using the given <parameter>threshold</parameter> and
         <parameter>color</parameter>.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>threshold</parameter></term>
    <listitem>
     <para>
      Specifies the tolerance in percent to be used while comparing the image
      color and the color to crop. The method used to calculate the color
      difference is based on the color distance in the RGB(a) cube.
     </para>
     <para>
      Used only in <constant>IMG_CROP_THRESHOLD</constant> mode.
     </para>
     <note>
      <simpara>
       Before PHP 7.4.0, the bundled libgd used a somewhat different algorithm,
       so the same <parameter>threshold</parameter> yielded different results
       for system and bundled libgd.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>color</parameter></term>
    <listitem>
     <para>
      Either an RGB color value or a palette index.
     </para>
     <para>
      Used only in <constant>IMG_CROP_THRESHOLD</constant> mode.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a cropped image object on success&return.falseforfailure;.
   If the complete image was cropped, <function>imagecrop</function> returns &false;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
     <row>
      <entry>8.0.0</entry>
      <entry>
       On success, this function returns a <classname>GDImage</classname> instance now;
       previously, a <type>resource</type> was returned.
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       The behavior of imagecropauto() in the bundled libgd has been synced with
       that of system libgd: <constant>IMG_CROP_DEFAULT</constant> no longer falls
       back to <constant>IMG_CROP_SIDES</constant> and threshold-cropping now uses
       the same algorithm as system libgd.
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       The default value of <parameter>mode</parameter> has been changed to
       <constant>IMG_CROP_AUTO</constant>. Formerly, the default value has been
       <literal>-1</literal> which corresponds to <constant>IMG_CROP_DEFAULT</constant>,
       but passing <literal>-1</literal> is now deprecated.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Proper handling of auto-cropping</title>
    <para>
     As noted in the return value section, <function>imagecropauto</function>
     returns &false; if the whole image
     was cropped. In this example we have an image object
     <literal>$im</literal> which should be automatically cropped only if there
     is something to crop; otherwise we want to proceed with the original image.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$cropped = imagecropauto($im, IMG_CROP_DEFAULT);
if ($cropped !== false) { // in case a new image object was returned
    imagedestroy($im);    // we destroy the original image
    $im = $cropped;       // and assign the cropped image to $im
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagecrop</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

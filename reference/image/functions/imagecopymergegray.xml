<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.imagecopymergegray" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecopymergegray</refname>
  <refpurpose>Copy and merge part of an image with gray scale</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagecopymergegray</methodname>
   <methodparam><type>GdImage</type><parameter>dst_image</parameter></methodparam>
   <methodparam><type>GdImage</type><parameter>src_image</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_width</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_height</parameter></methodparam>
   <methodparam><type>int</type><parameter>pct</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagecopymergegray</function> copy a part of <parameter>src_image</parameter> onto
   <parameter>dst_image</parameter> starting at the x,y coordinates
   <parameter>src_x</parameter>, <parameter>src_y </parameter> with
   a width of <parameter>src_width</parameter> and a height of
   <parameter>src_height</parameter>.  The portion defined will be copied
   onto the x,y coordinates, <parameter>dst_x</parameter> and
   <parameter>dst_y</parameter>.
  </para>
  <para>
   This function is identical to <function>imagecopymerge</function> except
   that when merging it preserves the hue of the source by converting
   the destination pixels to gray scale before the copy operation.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dst_image</parameter></term>
     <listitem>
      <para>&gd.image.destination;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_image</parameter></term>
     <listitem>
      <para>&gd.image.source;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dst_x</parameter></term>
     <listitem>
      <para>
       x-coordinate of destination point.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dst_y</parameter></term>
     <listitem>
      <para>
       y-coordinate of destination point.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_x</parameter></term>
     <listitem>
      <para>
       x-coordinate of source point.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_y</parameter></term>
     <listitem>
      <para>
       y-coordinate of source point.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_width</parameter></term>
     <listitem>
      <para>&gd.source.width;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_height</parameter></term>
     <listitem>
      <para>&gd.source.height;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pct</parameter></term>
     <listitem>
      <para>
        The <parameter>src_image</parameter> will be changed to grayscale according 
        to <parameter>pct</parameter> where 0 is fully grayscale and 100 is 
        unchanged. When <parameter>pct</parameter> = 100 this function behaves 
        identically to <function>imagecopy</function> for pallete images, except for
        ignoring alpha components, while
        it implements alpha transparency for true colour images.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>dst_image</parameter> and <parameter>src_image</parameter> expect
       <classname>GdImage</classname> instances now; previously, <type>resource</type>s
       were expected.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>imagecopymergegray</function> usage</title>
    <programlisting role="php">
<![CDATA[
<?php
// Create image instances
$dest = imagecreatefromgif('php.gif');
$src = imagecreatefromgif('php.gif');

// Copy and merge - Gray = 20%
imagecopymergegray($dest, $src, 10, 10, 0, 0, 100, 47, 20);

// Output and free from memory
header('Content-Type: image/gif');
imagegif($dest);

imagedestroy($dest);
imagedestroy($src);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

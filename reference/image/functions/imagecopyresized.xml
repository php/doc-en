<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.imagecopyresized" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecopyresized</refname>
  <refpurpose>Copy and resize part of an image</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagecopyresized</methodname>
   <methodparam><type>GdImage</type><parameter>dst_image</parameter></methodparam>
   <methodparam><type>GdImage</type><parameter>src_image</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_width</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_height</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_width</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_height</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagecopyresized</function> copies a rectangular
   portion of one image to another image.
   <parameter>dst_image</parameter> is the destination image,
   <parameter>src_image</parameter> is the source image identifier.
  </para>
  <para>
   In other words, <function>imagecopyresized</function> will take a 
   rectangular area from <parameter>src_image</parameter> of width 
   <parameter>src_width</parameter> and height <parameter>src_height</parameter> at 
   position (<parameter>src_x</parameter>,<parameter>src_y</parameter>) 
   and place it in a rectangular area of <parameter>dst_image</parameter> 
   of width <parameter>dst_width</parameter> and height <parameter>dst_height</parameter>
   at position (<parameter>dst_x</parameter>,<parameter>dst_y</parameter>).
  </para>
  <para>
   If the source and destination coordinates and width and heights
   differ, appropriate stretching or shrinking of the image fragment
   will be performed. The coordinates refer to the upper left
   corner. This function can be used to copy regions within the
   same image (if <parameter>dst_image</parameter> is the same as
   <parameter>src_image</parameter>) but if the regions overlap the
   results will be unpredictable.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dst_image</parameter></term>
     <listitem>
      <para>&gd.image.destination;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_image</parameter></term>
     <listitem>
      <para>&gd.image.source;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dst_x</parameter></term>
     <listitem>
      <para>
       x-coordinate of destination point.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dst_y</parameter></term>
     <listitem>
      <para>
       y-coordinate of destination point.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_x</parameter></term>
     <listitem>
      <para>
       x-coordinate of source point.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_y</parameter></term>
     <listitem>
      <para>
       y-coordinate of source point.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dst_width</parameter></term>
     <listitem>
      <para>
       Destination width.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dst_height</parameter></term>
     <listitem>
      <para>
       Destination height.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_width</parameter></term>
     <listitem>
      <para>&gd.source.width;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>src_height</parameter></term>
     <listitem>
      <para>&gd.source.height;</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>dst_image</parameter> and <parameter>src_image</parameter> expect
       <classname>GdImage</classname> instances now; previously, <type>resource</type>s
       were expected.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Resizing an image</title>
    <para>
     This example will display the image at half size.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// File and new size
$filename = 'test.jpg';
$percent = 0.5;

// Content type
header('Content-Type: image/jpeg');

// Get new sizes
list($width, $height) = getimagesize($filename);
$newwidth = $width * $percent;
$newheight = $height * $percent;

// Load
$thumb = imagecreatetruecolor($newwidth, $newheight);
$source = imagecreatefromjpeg($filename);

// Resize
imagecopyresized($thumb, $source, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);

// Output
imagejpeg($thumb);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Output of example : Resizing an image</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagecopyresized.jpg"/>
     </imageobject>
    </mediaobject>
    <para>
     The image will be output at half size, though better
     quality could be obtained using <function>imagecopyresampled</function>.
    </para>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    There is a problem due to palette image limitations (255+1 colors).
    Resampling or filtering an image commonly needs more colors than 255, a
    kind of approximation is used to calculate the new resampled pixel and its
    color.  With a palette image we try to allocate a new color, if that
    failed, we choose the closest (in theory) computed color.  This is
    not always the closest visual color. That may produce a weird result, like
    blank (or visually blank) images.  To skip this problem, please use a
    truecolor image as a destination image, such as one created by
    <function>imagecreatetruecolor</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagecopyresampled</function></member>
   <member><function>imagescale</function></member>
   <member><function>imagecrop</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.oci-password-change" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_password_change</refname>
  <refpurpose>Changes password of Oracle's user</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>resource</type><type>bool</type></type><methodname>oci_password_change</methodname>
   <methodparam><type class="union"><type>resource</type><type>string</type></type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>old_password</parameter></methodparam>
   <methodparam><type>string</type><parameter>new_password</parameter></methodparam>
  </methodsynopsis>
   <methodsynopsis>
   <type class="union"><type>resource</type><type>bool</type></type><methodname>oci_password_change</methodname>
   <methodparam><type class="union"><type>resource</type><type>string</type></type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>old_password</parameter></methodparam>
   <methodparam><type>string</type><parameter>new_password</parameter></methodparam>
  </methodsynopsis>
  <para>
   Changes password for user with <parameter>username</parameter>.
  </para>
  <para>
   The <function>oci_password_change</function> function is most useful for PHP command-line scripts,
   or when non-persistent connections are used throughout the PHP application.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       An Oracle connection identifier, returned by 
       <function>oci_connect</function> or <function>oci_pconnect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       The Oracle user name.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>old_password</parameter></term>
     <listitem>
      <para>
       The old password.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>new_password</parameter></term>
     <listitem>
      <para>
       The new password to be set.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       The database name.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>oci_password_change</function> example changing the password of an already connected user</title>
    <programlisting role="php">
<![CDATA[
<?php

$dbase      = 'localhost/orcl';
$user       = 'cj';
$current_pw = 'welcome';
$new_pw     = 'geelong';

$c = oci_pconnect($user, $current_pw, $dbase);
oci_password_change($c, $user, $current_pw, $new_pw);
echo "New password is : " . $new_pw . "\n";

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>oci_password_change</function> example of connecting and changing the password in one step</title>
    <programlisting role="php">
<![CDATA[
<?php

$dbase      = 'localhost/orcl';
$user       = 'cj';
$current_pw = 'welcome';
$new_pw     = 'geelong';

$c = oci_pconnect($user, $current_pw, $dbase);
if (!$c) {
    $m = oci_error();
    if ($m['code'] == 28001) { // "ORA-28001: the password has expired"
        // Login and reset password at the same time
        $c = oci_password_change($dbase, $user, $current_pw, $new_pw);
        if ($c) {
            echo "New password is : " . $new_pw . "\n";
        }
    }
}

if (!$c) {  // The original error wasn't 28001, or the password change failed
    $m = oci_error();
    trigger_error('Could not connect to database: '. $m['message'], E_USER_ERROR);
}

// Use the connection $c
...

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Changing the password either with this function or directly in
    Oracle should be done carefully.  This is because PHP applications
    may continue to successfully reuse persistent connections by
    authenticating with the old password.  The best practice is to
    restart all web servers whenever the user password is changed.
   </para>
  </note>
  <note>
   <para>
    If upgrading the Oracle client libraries or the database from a release prior to 11.2.0.3
    to version 11.2.0.3 or higher, <function>oci_password_change</function> may give the
    error "ORA-1017: invalid username/password" unless both client and server versions are upgraded at
    the same time.
   </para>
  </note>
  <note>
   <para>
    The second <function>oci_password_change</function> syntax is available
    since OCI8 version 1.1.
   </para>
  </note>
  <note>
   <para>
    In PHP versions before 5.0.0 you must use <function>ocipasswordchange</function> instead.
    This name still can be used, it was left as alias of
    <function>oci_password_change</function> for downwards compatability.
    This, however, is deprecated and not recommended.
   </para>
  </note>

 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.oci-set-action" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_set_action</refname>
  <refpurpose>Sets the action name</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>oci_set_action</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>action</parameter></methodparam>
  </methodsynopsis>
  <para>
   Sets the action name for Oracle tracing.
  </para>
  <para>
   The action name is registered with the database when the next
   'round-trip' from PHP to the database occurs, typically when an SQL
   statement is executed.
  </para>
  <para>
   The action name can subsequently be queried from database administration
   views such as <literal>V$SESSION</literal>.  It can be used for
   tracing and monitoring such as with <literal>V$SQLAREA</literal>
   and <literal>DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE</literal>.
  </para>
  <para>
   The value may be retained across persistent connections.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &oci.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>action</parameter></term>
     <listitem>
      <para>
       User chosen string up to 32 bytes long.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Setting the action</title>
    <programlisting role="php">
<![CDATA[
<?php

$c = oci_connect('hr', 'welcome', 'localhost/XE');

// Record the action
oci_set_action($c, 'Friend Lookup');

// Code that causes a round-trip, for example a query:
$s = oci_parse($c, 'select * from dual');
oci_execute($s);
oci_fetch_all($s, $res);

sleep(30);

?>
]]>
    </programlisting>
    <screen>
<![CDATA[
// While the script is running, the administrator can see the actions
// being performed:

sqlplus system/welcome
SQL> select action from v$session;
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &oci.availability.note.10g;
  &oci.clientinfo.tip;
  &oci.roundtrip.caution;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_set_module_name</function></member>
    <member><function>oci_set_client_info</function></member>
    <member><function>oci_set_client_identifier</function></member>
    <member><function>oci_set_db_operation</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

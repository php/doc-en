<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<appendix xml:id="filesystem.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="constant.seek-set">
   <term>
    <constant>SEEK_SET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.seek-cur">
   <term>
    <constant>SEEK_CUR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.seek-end">
   <term>
    <constant>SEEK_END</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.lock-sh">
   <term>
    <constant>LOCK_SH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.lock-ex">
   <term>
    <constant>LOCK_EX</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.lock-un">
   <term>
    <constant>LOCK_UN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.lock-nb">
   <term>
    <constant>LOCK_NB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 <variablelist xml:id="constant.glob-constant-variablelist">
  <varlistentry>
   <term>
    <constant>GLOB_BRACE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Expands {a,b,c} to match 'a', 'b', or 'c'
    </simpara>
    <note>
     <simpara>
      <constant>GLOB_BRACE</constant> is not available on some non GNU systems,
      like Solaris or Alpine Linux.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>GLOB_ERR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Stop on read errors (like unreadable directories),
     by default errors are ignored.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>GLOB_ONLYDIR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Return only directory entries which match the pattern
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>GLOB_MARK</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Adds a slash (a backslash on Windows) to each directory returned
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>GLOB_NOSORT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Return files as they appear in the directory (no sorting).
     When this flag is not used, the pathnames are sorted alphabetically
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>GLOB_NOCHECK</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Return the search pattern if no files matching it were found
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>GLOB_NOESCAPE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Backslashes do not quote metacharacters
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>GLOB_AVAILABLE_FLAGS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     All <constant>GLOB_<replaceable>*</replaceable></constant> flags combined.
     Equivalent to <literal>0</literal> | <constant>GLOB_BRACE</constant> |
     <constant>GLOB_MARK</constant> | <constant>GLOB_NOSORT</constant> |
     <constant>GLOB_NOCHECK</constant> | <constant>GLOB_NOESCAPE</constant> |
     <constant>GLOB_ERR</constant> | <constant>GLOB_ONLYDIR</constant>
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 <variablelist role="constant_list">
  <varlistentry xml:id="constant.pathinfo-all">
   <term>
    <constant>PATHINFO_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     All parts of the pathinfo
     returned as an associative array.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.pathinfo-dirname">
   <term>
    <constant>PATHINFO_DIRNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The path of the directory or file.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.pathinfo-basename">
   <term>
    <constant>PATHINFO_BASENAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The name of the directory or
     the name and extension of the file.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.pathinfo-extension">
   <term>
    <constant>PATHINFO_EXTENSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The extension of the file.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.pathinfo-filename">
   <term>
    <constant>PATHINFO_FILENAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The name of the file (without the extension)
     or directory.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.file-use-include-path">
   <term>
    <constant>FILE_USE_INCLUDE_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Search for <parameter>filename</parameter> in
     <link linkend="ini.include-path">include_path</link>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.file-no-default-context">
   <term>
    <constant>FILE_NO_DEFAULT_CONTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.file-append">
   <term>
    <constant>FILE_APPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Append content to existing file.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.file-ignore-new-lines">
   <term>
    <constant>FILE_IGNORE_NEW_LINES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Strip EOL characters.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.file-skip-empty-lines">
   <term>
    <constant>FILE_SKIP_EMPTY_LINES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Skip empty lines.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.file-binary">
   <term>
    <constant>FILE_BINARY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Binary mode.
     <note>
      <para>
       This constant has no effect, and is only available for
       <literal>forward compatibility</literal>.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.file-text">
   <term>
    <constant>FILE_TEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Text mode.
     <note>
      <para>
       This constant has no effect, and is only available for
       <literal>forward compatibility</literal>.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.ini-scanner-normal">
   <term>
    <constant>INI_SCANNER_NORMAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Normal INI scanner mode.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.ini-scanner-raw">
   <term>
    <constant>INI_SCANNER_RAW</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Raw INI scanner mode.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.ini-scanner-typed">
   <term>
    <constant>INI_SCANNER_TYPED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Typed INI scanner mode.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.fnm-noescape">
   <term>
    <constant>FNM_NOESCAPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Disable backslash escaping.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.fnm-pathname">
   <term>
    <constant>FNM_PATHNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Slash in string only matches slash in the given pattern.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.fnm-period">
   <term>
    <constant>FNM_PERIOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Leading period in string must be exactly matched by period in the given pattern.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.fnm-casefold">
   <term>
    <constant>FNM_CASEFOLD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Caseless match. Part of the GNU extension.
    </simpara>
   </listitem>
  </varlistentry>

 </variablelist>
 <variablelist role="constant_list">
  <varlistentry xml:id="constant.upload-err-cant-write">
   <term><constant>UPLOAD_ERR_CANT_WRITE</constant></term>
   <listitem>
    <para>
     Failed to write file to disk.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.upload-err-extension">
   <term><constant>UPLOAD_ERR_EXTENSION</constant></term>
   <listitem>
    <para>
     A PHP extension stopped the file upload. PHP does not
     provide a way to ascertain which extension caused the file upload to
     stop; examining the list of loaded extensions with <function>phpinfo</function> may help.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.upload-err-form-size">
   <term><constant>UPLOAD_ERR_FORM_SIZE</constant></term>
   <listitem>
    <para>
     The uploaded file exceeds the <emphasis>MAX_FILE_SIZE</emphasis>
     directive that was specified in the HTML form.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.upload-err-ini-size">
   <term><constant>UPLOAD_ERR_INI_SIZE</constant></term>
   <listitem>
    <para>
     The uploaded file exceeds the
     <link linkend="ini.upload-max-filesize">upload_max_filesize</link>
     directive in &php.ini;.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.upload-err-no-file">
   <term><constant>UPLOAD_ERR_NO_FILE</constant></term>
   <listitem>
    <para>
     No file was uploaded.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.upload-err-no-tmp-dir">
   <term><constant>UPLOAD_ERR_NO_TMP_DIR</constant></term>
   <listitem>
    <para>
     Missing a temporary folder.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.upload-err-ok">
   <term><constant>UPLOAD_ERR_OK</constant></term>
   <listitem>
    <para>
     There is no error, the file uploaded with success.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.upload-err-partial">
   <term><constant>UPLOAD_ERR_PARTIAL</constant></term>
   <listitem>
    <para>
     The uploaded file was only partially uploaded.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

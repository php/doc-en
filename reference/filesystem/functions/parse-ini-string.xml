<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.parse-ini-string" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>parse_ini_string</refname>
  <refpurpose>Parse a configuration string</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>parse_ini_string</methodname>
   <methodparam><type>string</type><parameter>ini_string</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>process_sections</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>scanner_mode</parameter><initializer><constant>INI_SCANNER_NORMAL</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>parse_ini_string</function> returns the settings in string
   <parameter>ini_string</parameter> in an associative array.
  </para>
  <para>
   The structure of the ini string is the same as the &php.ini;'s.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ini_string</parameter></term>
     <listitem>
      <para>
       The contents of the ini file being parsed.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>process_sections</parameter></term>
     <listitem>
      <para>
       By setting the <parameter>process_sections</parameter>
       parameter to &true;, you get a multidimensional array, with
       the section names and settings included. The default
       for <parameter>process_sections</parameter> is &false;      
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>scanner_mode</parameter></term>
     <listitem>
      <para>
       Can either be <constant>INI_SCANNER_NORMAL</constant> (default) or 
       <constant>INI_SCANNER_RAW</constant>. If <constant>INI_SCANNER_RAW</constant> 
       is supplied, then option values will not be parsed.
      </para>
      &ini.scanner.typed;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The settings are returned as an associative <type>array</type> on success,
   and &false; on failure.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    There are reserved words which must not be used as keys for
    ini files.  These include: <literal>null</literal>, <literal>yes</literal>, 
    <literal>no</literal>, <literal>true</literal>, <literal>false</literal>,
    <literal>on</literal>, <literal>off</literal>, <literal>none</literal>.
    Values <literal>null</literal>, <literal>off</literal>, <literal>no</literal> and 
    <literal>false</literal> result in <literal>""</literal>, and values
    <literal>on</literal>, <literal>yes</literal> and <literal>true</literal> result
    in <literal>"1"</literal>, unless <constant>INI_SCANNER_TYPED</constant> mode is used.
    Characters <literal>?{}|&amp;~![()^"</literal> must not be used anywhere in
    the key and have a special meaning in the value.
   </simpara>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>parse_ini_file</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

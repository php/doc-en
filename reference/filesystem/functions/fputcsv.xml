<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.fputcsv" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fputcsv</refname>
  <refpurpose>Format line as CSV and write to file pointer</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>fputcsv</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>array</type><parameter>fields</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>separator</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>eol</parameter><initializer>"\n"</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>fputcsv</function> formats a line (passed as a
   <parameter>fields</parameter> array) as CSV and writes it (terminated by a
   newline) to the specified file <parameter>stream</parameter>. 
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      &fs.validfp.all;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fields</parameter></term>
     <listitem>
      <para>
       An array of <type>string</type>s.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       The optional <parameter>separator</parameter> parameter sets the field
       delimiter (one single-byte character only).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       The optional <parameter>enclosure</parameter> parameter sets the field
       enclosure (one single-byte character only).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       The optional <parameter>escape</parameter> parameter sets the
       escape character (at most one single-byte character).
       An empty string (<literal>""</literal>) disables the proprietary escape mechanism.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>eol</parameter></term>
     <listitem>
      <para>
       The optional <parameter>eol</parameter> parameter sets
       a custom End of Line sequence.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <note>
   <para>
    If an <parameter>enclosure</parameter> character is contained in a field,
    it will be escaped by doubling it, unless it is immediately preceded by an
    <parameter>escape</parameter>.
   </para>
  </note> 
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the length of the written string &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.1.0</entry>
       <entry>
        The optional <parameter>eol</parameter> parameter has been added.
       </entry>
      </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        The <parameter>escape</parameter> parameter now also accepts an empty
        string to disable the proprietary escape mechanism.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>fputcsv</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

$list = array (
    array('aaa', 'bbb', 'ccc', 'dddd'),
    array('123', '456', '789'),
    array('"aaa"', '"bbb"')
);

$fp = fopen('file.csv', 'w');

foreach ($list as $fields) {
    fputcsv($fp, $fields);
}

fclose($fp);
?>
]]>
    </programlisting>
    <para>The above example will write the following to <literal>file.csv</literal>:</para>
    <screen>
<![CDATA[
aaa,bbb,ccc,dddd
123,456,789
"""aaa""","""bbb"""

]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.line-endings;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fgetcsv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.fgetcsv">
 <refnamediv>
  <refname>fgetcsv</refname>
  <refpurpose>Gets line from file pointer and parse for CSV fields</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>fgetcsv</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>'"'</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Similar to <function>fgets</function> except that
   <function>fgetcsv</function> parses the line it reads for fields in
   <acronym>CSV</acronym> format and returns an array containing the fields
   read.
  </para>
  <note>
   <para>
    The locale settings are taken into account by this function. If
    <literal>LC_CTYPE</literal> is e.g. <literal>en_US.UTF-8</literal>, files in
    one-byte encodings may be read wrongly by this function.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      <para>
       A valid file pointer to a file successfully opened by
       <function>fopen</function>, <function>popen</function>, or
       <function>fsockopen</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Must be greater than the longest line (in characters) to be found in
       the CSV file (allowing for trailing line-end characters). Otherwise the
       line is split in chunks of <parameter>length</parameter> characters,
       unless the split would occur inside an enclosure.
      </para>
      <para>
       Omitting this parameter (or setting it to 0 in PHP
       5.1.0 and later) the maximum line length is not limited, which is
       slightly slower.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimiter</parameter></term>
     <listitem>
      <para>
       The optional <parameter>delimiter</parameter> parameter sets the field delimiter (one character only).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       The optional <parameter>enclosure</parameter> parameter sets the field enclosure character (one character only).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       The optional <parameter>escape</parameter> parameter sets the escape character (at most one character).
       An empty string (<literal>""</literal>) disables the proprietary escape mechanism.
      </para>
      <note>
       <simpara>
        Usually an <parameter>enclosure</parameter> character is escaped inside
        a field by doubling it; however, the <parameter>escape</parameter>
        character can be used as an alternative. So for the default parameter
        values <literal>""</literal> and <literal>\"</literal> have the same
        meaning. Other than allowing to escape the
        <parameter>enclosure</parameter> character the
        <parameter>escape</parameter> character has no special meaning; it isn't
        even meant to escape itself.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an indexed array containing the fields read.
  </para>
  <note>
   <para>
    A blank line in a CSV file will be returned as an array
    comprising a single <type>null</type> field, and will not be treated
    as an error.
   </para>
  </note>
  &note.line-endings;
  <para>
   <function>fgetcsv</function> returns &null; if an invalid
   <parameter>handle</parameter> is supplied or &false; on other errors,
   including end of file.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.4.0</entry>
       <entry>
        The <parameter>escape</parameter> parameter now also accepts an empty
        string to disable the proprietary escape mechanism.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Read and print the entire contents of a CSV file</title>
    <programlisting role="php">
<![CDATA[
<?php
$row = 1;
if (($handle = fopen("test.csv", "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $num = count($data);
        echo "<p> $num fields in line $row: <br /></p>\n";
        $row++;
        for ($c=0; $c < $num; $c++) {
            echo $data[$c] . "<br />\n";
        }
    }
    fclose($handle);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_getcsv</function></member>
    <member><function>explode</function></member>
    <member><function>file</function></member>
    <member><function>pack</function></member>
    <member><function>fputcsv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

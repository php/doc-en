<?xml version="1.0" encoding="utf-8"?>

<!-- $Revision$ -->
<refentry xml:id="mongocollection.save" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::save</refname>
  <refpurpose>Saves a document to this collection</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>MongoCollection::save</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter>document</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   If the object is from the database, update the existing database object, otherwise 
   insert this object.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>document</parameter>
     </term>
     <listitem>
      <para>
       Array or object to save. If an object is used, it may not have protected
       or private properties.
      </para>
      <note>
       <para>
        If the parameter does not have an <literal>_id</literal> key or
        property, a new <classname>MongoId</classname> instance will be created
        and assigned to it. See <function>MongoCollection::insert</function> for
        additional information on this behavior.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Options for the save.
       <itemizedlist>
        &mongo.writes.parameters.fsync;
        &mongo.writes.parameters.journal;
        &mongo.writes.parameters.sockettimeoutms;
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.writeconcerntimeout;
        &mongo.writes.parameters.writeconcerntimeoutms;
        &mongo.writes.parameters.safe;
        &mongo.writes.parameters.timeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   If <parameter>w</parameter> was set, returns an array containing the status of the save.
   Otherwise, returns a boolean representing if the array was not empty (an empty array will not 
   be inserted).
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Throws <classname>MongoException</classname> if the inserted document is
   empty or if it contains zero-length keys. Attempting to insert an object with
   protected and private properties will cause a zero-length key error.
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.5.0</entry>
       <entry>
        <para>
         Added <literal>"wTimeoutMS"</literal> option, which replaces
         <literal>"wtimeout"</literal>. Emits <constant>E_DEPRECATED</constant>
         when <literal>"wtimeout"</literal> is used.
        </para>
        <para>
         Added <literal>"socketTimeoutMS"</literal> option, which replaces
         <literal>"timeout"</literal>. Emits <constant>E_DEPRECATED</constant>
         when <literal>"timeout"</literal> is used.
        </para>
        <para>
         Emits <constant>E_DEPRECATED</constant> when <literal>"safe"</literal>
         is used.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.2.0</entry>
       <entry>Added <literal>"timeout"</literal> option.</entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.11</entry>
       <entry>
        Disconnects on "not master" errors if <literal>"safe"</literal> is set.
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.9</entry>
       <entry>
        <para>
         Added <literal>"fsync"</literal> option.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.5</entry>
       <entry>Added <parameter>options</parameter> parameter.</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCollection::save</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

$obj = array('x' => 1);

// insert $obj into the db
$collection->save($obj);
var_dump($obj);

// add another field
$obj['foo'] = 'bar';

// $obj cannot be inserted again, causes duplicate _id error
$collection->insert($obj);

// save updates $obj with the new field
$collection->save($obj);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(2) {
  ["x"]=>
  int(1)
  ["_id"]=>
  object(MongoId)#4 (1) {
    ["$id"]=>
    string(24) "50b6afe544415ed606000000"
  }
}
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 

<?xml version="1.0" encoding="utf-8"?>

<!-- $Revision$ -->
<refentry xml:id="mongocursor.tailable" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::tailable</refname>
  <refpurpose>Sets whether this cursor will be left open after fetching the last results</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::tailable</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>tail</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Mongo has a feature known as tailable cursors which are similar to the Unix
   "tail -f" command.
  </para>
  <para>
   Tailable means cursor is not closed when the last data is retrieved.  Rather,
   the cursor marks the final object's position.  you can resume using the
   cursor later, from where it was located, if more data were received.
  </para>
  <para>
   Like any "latent cursor", the cursor may become invalid at some point -- for
   example if that final object it references were deleted.  Thus, you should be
   prepared to requery if the cursor is <function>MongoCursor::dead</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>tail</parameter>
     </term>
     <listitem>
      <para>
       If the cursor should be tailable.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns this cursor.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Throws <classname>MongoCursorException</classname> if this cursor has started iterating.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCursor::tailable</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find()->tailable();

$results = array();

while (1) {
    if (!$cursor->hasNext()) {
        // we've read all the results, exit
        if ($cursor->dead()) {
            break;
        }
        // read all results so far, wait for more
        sleep(10);
    }
    else {
        $results[] = $cursor->getNext();
    }
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   MongoDB core docs on <link xlink:href="&url.mongodb.dochub.tailable;">tailable cursors</link>.
  </para>
  <para>
   <simplelist>
    <member><function>MongoCursor::awaitData</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

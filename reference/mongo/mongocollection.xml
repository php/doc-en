<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<phpdoc:classref xml:id="class.mongocollection" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The MongoCollection class</title>
 <titleabbrev>MongoCollection</titleabbrev>

 <partintro>

<!-- {{{ Mongocollection intro -->
  <section xml:id="mongocollection.intro">
   &reftitle.intro;
   <para>
    Represents a MongoDB collection.
   </para>
   <para>
    Collection names can use any character in the ASCII set.  Some valid 
    collection names are &quot;&quot;, &quot;...&quot;, 
    &quot;my collection&quot;, and &quot;&#42;&amp;&#35;&#64;&quot;.
   </para>
   <para>
    User-defined collection names cannot contain the $ symbol.  There are 
    certain system collections which use a $ in their names (e.g., 
    local.oplog.$main), but it is a reserved character.  If you attempt to 
    create and use a collection with a $ in the name, MongoDB will assert.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="mongocollection.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoCollection</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoCollection</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongocollection.constants.ascending">MongoCollection::ASCENDING</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongocollection.constants.descending">MongoCollection::DESCENDING</varname>
     <initializer>-1</initializer>
    </fieldsynopsis>
    
    <classsynopsisinfo role="comment">Fields</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>MongoDB</type>
     <varname linkend="mongocollection.props.db">db</varname>
     <initializer>&null;</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname linkend="mongocollection.props.w">w</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname linkend="mongocollection.props.wtimeout">wtimeout</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongocollection')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section>
   &reftitle.constants;
   <variablelist>
    <varlistentry xml:id="mongocollection.constants.ascending">
     <term><constant>MongoCollection::ASCENDING</constant></term>
     <listitem>
      <simpara>
       Ascending direction for sorts and index creation.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="mongocollection.constants.descending">
     <term><constant>MongoCollection::DESCENDING</constant></term>
     <listitem>
      <simpara>
       Descending direction for sorts and index creation.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>

  <section>
   <title>Fields</title>
   <variablelist>
    <varlistentry xml:id="mongocollection.props.db">
     <term><varname>db</varname></term>
     <listitem>
      <para>
       The "parent" database for this collection.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="mongocollection.props.w">
     <term><varname>w</varname></term>
     <listitem>
      <para>
       The number of servers to replicate a change to before returning success.
       Value is inherited from the parent database. The 
       <classname>MongoDB</classname> class has a more detailed description of
       how <literal>w</literal> works.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="mongocollection.props.wtimeout">
     <term><varname>wtimeout</varname></term>
     <listitem>
      <para>
       The number of milliseconds to wait for <literal>$this->w</literal> 
       replications to take place.  Value is inherited from the parent database.
       The <classname>MongoDB</classname> class has a more detailed description 
       of how <literal>wtimeout</literal> works.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>

  <section>
   &reftitle.seealso;
   <para>
    MongoDB core docs on <link xlink:href="&url.mongodb.glossary;#term-collection">collections</link>.
   </para>
  </section>

 </partintro>

 &reference.mongo.entities.mongocollection;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="datetime.modify" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DateTime::modify</refname>
  <refname>date_modify</refname>
  <refpurpose>Alters the timestamp</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="DateTime">
   <modifier>public</modifier> <type>DateTime</type><methodname>DateTime::modify</methodname>
   <methodparam><type>string</type><parameter>modifier</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>DateTime</type><type>false</type></type><methodname>date_modify</methodname>
   <methodparam><type>DateTime</type><parameter>object</parameter></methodparam>
   <methodparam><type>string</type><parameter>modifier</parameter></methodparam>
  </methodsynopsis>
  <para>
   Alter the timestamp of a DateTime object by incrementing or decrementing in a
   format accepted by <function>DateTimeImmutable::__construct</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   &date.datetime.description.modified;
   <varlistentry>
    <term><parameter>modifier</parameter></term>
    <listitem>
     <para>&date.formats.parameter;</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns <classname>DateTime</classname> on success.
   &return.falseforfailure.style.procedural;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
    Object Oriented API only: If an invalid Date/Time string is passed,
    <exceptionname>DateMalformedStringException</exceptionname> is thrown.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       <methodname>DateTime::modify</methodname> now throws
       <exceptionname>DateMalformedStringException</exceptionname> if an
       invalid string is passed.  Previously, it returned <literal>false</literal>,
       and a warning was emitted.
       <function>date_modify</function> has not been changed.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>DateTime::modify</function> example</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$date = new DateTime('2006-12-12');
$date->modify('+1 day');
echo $date->format('Y-m-d');
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$date = date_create('2006-12-12');
date_modify($date, '+1 day');
echo date_format($date, 'Y-m-d');
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
2006-12-13
]]>
   </screen>
  </example>
  <example>
   <title>Beware when adding or subtracting months</title>
   <programlisting role="php">
<![CDATA[
<?php
$date = new DateTime('2000-12-31');

$date->modify('+1 month');
echo $date->format('Y-m-d') . "\n";

$date->modify('+1 month');
echo $date->format('Y-m-d') . "\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
2001-01-31
2001-03-03
]]>
   </screen>
  </example>
  <example>
   <title>All formats of Date and Time are supported</title>
   <programlisting role="php">
<![CDATA[
<?php
$date = new DateTime('2020-12-31');

$date->modify('July 1st, 2023');
echo $date->format('Y-m-d H:i') . "\n";

$date->modify('Monday next week');
echo $date->format('Y-m-d H:i') . "\n";

$date->modify('17:30');
echo $date->format('Y-m-d H:i') . "\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
2023-07-01 00:00
2023-07-03 00:00
2023-07-03 17:30
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>strtotime</function></member>
   <member><function>DateTimeImmutable::modify</function></member>
   <member><function>DateTime::add</function></member>
   <member><function>DateTime::sub</function></member>
   <member><function>DateTime::setDate</function></member>
   <member><function>DateTime::setISODate</function></member>
   <member><function>DateTime::setTime</function></member>
   <member><function>DateTime::setTimestamp</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

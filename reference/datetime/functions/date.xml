<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.date" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>date</refname>
  <refpurpose>Format a local time/date</refpurpose>
 </refnamediv>
  
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>date</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timestamp</parameter><initializer>time()</initializer></methodparam>
  </methodsynopsis>
  <para>
   Returns a string formatted according to the given format string using the
   given integer <parameter>timestamp</parameter> or the current time
   if no timestamp is given.  In other words, <parameter>timestamp</parameter>
   is optional and defaults to the value of <function>time</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>format</parameter></term>
    <listitem>
     <para>
      Format accepted by <function>DateTimeInterface::format</function>.
     </para>
    </listitem>
   </varlistentry>
    
   &date.timestamp.description;
   
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a formatted date string. If a non-numeric value is used for 
   <parameter>timestamp</parameter>, &false; is returned and an 
   <constant>E_WARNING</constant> level error is emitted.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
   
   &date.timezone.errors.description;
 
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>date</function> examples</title>
    <programlisting role="php">
<![CDATA[
<?php
// set the default timezone to use. Available since PHP 5.1
date_default_timezone_set('UTC');


// Prints something like: Monday
echo date("l");

// Prints something like: Monday 8th of August 2005 03:12:46 PM
echo date('l jS \of F Y h:i:s A');

// Prints: July 1, 2000 is on a Saturday
echo "July 1, 2000 is on a " . date("l", mktime(0, 0, 0, 7, 1, 2000));

/* use the constants in the format parameter */
// prints something like: Wed, 25 Sep 2013 15:28:57 -0700
echo date(DATE_RFC2822);

// prints something like: 2000-07-01T00:00:00+00:00
echo date(DATE_ATOM, mktime(0, 0, 0, 7, 1, 2000));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   You can prevent a recognized character in the format string from being
   expanded by escaping it with a preceding backslash. If the character with
   a backslash is already a special sequence, you may need to also escape
   the backslash.
   <example>
    <title>Escaping characters in <function>date</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// prints something like: Wednesday the 15th
echo date('l \t\h\e jS');
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   It is possible to use <function>date</function> and
   <function>mktime</function> together to find dates in the future
   or the past.
   <example>
    <title><function>date</function> and <function>mktime</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$tomorrow  = mktime(0, 0, 0, date("m")  , date("d")+1, date("Y"));
$lastmonth = mktime(0, 0, 0, date("m")-1, date("d"),   date("Y"));
$nextyear  = mktime(0, 0, 0, date("m"),   date("d"),   date("Y")+1);
?>
]]>
    </programlisting>
   </example>
   <note>
    <para>
     This can be more reliable than simply adding or subtracting the number
     of seconds in a day or month to a timestamp because of daylight saving
     time.
    </para>
   </note>
  </para>
  <para>
   Some examples of <function>date</function> formatting. Note that
   you should escape any other characters, as any which currently
   have a special meaning will produce undesirable results, and
   other characters may be assigned meaning in future PHP versions.
   When escaping, be sure to use single quotes to prevent characters
   like \n from becoming newlines.
   <example>
    <title><function>date</function> Formatting</title>
    <programlisting role="php">
<![CDATA[
<?php
// Assuming today is March 10th, 2001, 5:16:18 pm, and that we are in the
// Mountain Standard Time (MST) Time Zone

$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day');     // 05-16-18, 10-03-01, 1631 1618 6 Satpm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // it is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 17:16:18 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:18 m is month
$today = date("H:i:s");                         // 17:16:18
$today = date("Y-m-d H:i:s");                   // 2001-03-10 17:16:18 (the MySQL DATETIME format)
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   To format dates in other languages, you should use the
   <function>setlocale</function> and <function>strftime</function>
   functions instead of <function>date</function>.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    To generate a timestamp from a string representation of the date, you
    may be able to use <function>strtotime</function>. Additionally, some
    databases have functions to convert their date formats into timestamps
    (such as MySQL's <link xlink:href="&url.mysql.docs.date;">UNIX_TIMESTAMP</link>
    function).
   </para>
  </note>
  <tip>
   <para>
    Timestamp of the start of the request is available in
    <varname>$_SERVER['REQUEST_TIME']</varname> since PHP 5.1.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>gmdate</function></member>
    <member><function>idate</function></member>
    <member><function>getdate</function></member>
    <member><function>getlastmod</function></member>
    <member><function>mktime</function></member>
    <member><function>strftime</function></member>
    <member><function>time</function></member>
    <member><function>DateTimeImmutable::__construct</function></member>
    <member><link linkend="datetime.constants.types">Predefined DateTime Constants</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

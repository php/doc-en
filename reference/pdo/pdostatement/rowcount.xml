<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="pdostatement.rowcount" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::rowCount</refname>
  <refpurpose>
   Returns the number of rows affected by the last SQL statement
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDOStatement">
   <modifier>public</modifier> <type>int</type><methodname>PDOStatement::rowCount</methodname>
   <void/>
  </methodsynopsis>

  <para>
   <methodname>PDOStatement::rowCount</methodname> returns the number of
   rows affected by the last DELETE, INSERT, or UPDATE statement
   executed by the corresponding <literal>PDOStatement</literal> object. 
  </para>
  <para>
   For statements that produce result sets, such as <literal>SELECT</literal>,
   the behavior is undefined and can be different for each driver.
   Some databases may return the number of rows produced by that statement
   (e.g. MySQL in buffered mode), but this
   behaviour is not guaranteed for all databases and should not be relied
   on for portable applications.
  </para>
    <note>
     <para>
      This method returns "0" (zero) with the SQLite driver at all times,
      and with the PostgreSQL driver only when setting the
      <constant>PDO::ATTR_CURSOR</constant> statement attribute to
      <constant>PDO::CURSOR_SCROLL</constant>.
     </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
  <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the number of rows.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Return the number of deleted rows</title>
    <para>
     <methodname>PDOStatement::rowCount</methodname> returns the number of
     rows affected by a DELETE, INSERT, or UPDATE statement.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Delete all rows from the FRUIT table */
$del = $dbh->prepare('DELETE FROM fruit');
$del->execute();

/* Return number of rows that were deleted */
print "Return number of rows that were deleted:\n";
$count = $del->rowCount();
print "Deleted $count rows.\n";
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Return number of rows that were deleted:
Deleted 9 rows.
]]>
    </screen>
   </example>
   <example>
    <title>Counting rows returned by a SELECT statement</title>
    <para>
     For most databases, <methodname>PDOStatement::rowCount</methodname> does not
     return the number of rows affected by a SELECT statement. Instead, use
     <methodname>PDO::query</methodname> to issue a SELECT COUNT(*) statement
     with the same predicates as your intended SELECT statement, then use
     <methodname>PDOStatement::fetchColumn</methodname> to retrieve the number
     of matching rows. 
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$sql = "SELECT COUNT(*) FROM fruit WHERE calories > 100";
$res = $conn->query($sql);
$count = $res->fetchColumn();

print "There are " .  $count . " matching records.";
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
There are 2 matching records.
]]>
    </screen>
   </example>

  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDOStatement::columnCount</methodname></member>
    <member><methodname>PDOStatement::fetchColumn</methodname></member>
    <member><methodname>PDO::query</methodname></member>
   </simplelist>
  </para>

 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

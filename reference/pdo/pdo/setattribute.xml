<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="pdo.setattribute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::setAttribute</refname>
  <refpurpose>
   Set an attribute
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>PDO::setAttribute</methodname>
   <methodparam><type>int</type><parameter>attribute</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>

  <para>
   Sets an attribute on the database handle. Some available generic
   attributes are listed below; some drivers may make use of
   additional driver specific attributes.
   Note that driver specific attributes <emphasis>must not</emphasis> be used
   with other drivers.
   <itemizedlist>
    <listitem>
     <para>
      <constant>PDO::ATTR_CASE</constant>: Force column names to a specific case.
      <itemizedlist>
       <listitem>
        <para>
         <constant>PDO::CASE_LOWER</constant>: Force column names to lower case.
        </para>
       </listitem>
       <listitem>
        <para>
         <constant>PDO::CASE_NATURAL</constant>: Leave column names as returned
         by the database driver.
        </para>
       </listitem>
       <listitem>
        <para>
         <constant>PDO::CASE_UPPER</constant>: Force column names to upper case.
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::ATTR_ERRMODE</constant>: Error reporting.
      <itemizedlist>
       <listitem>
        <para>
         <constant>PDO::ERRMODE_SILENT</constant>: Just set error codes.
        </para>
       </listitem>
       <listitem>
        <para>
         <constant>PDO::ERRMODE_WARNING</constant>:
         Raise <constant>E_WARNING</constant>.
        </para>
       </listitem>
       <listitem>
        <para>
         <constant>PDO::ERRMODE_EXCEPTION</constant>:
         Throw <classname>PDOException</classname>s.
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::ATTR_ORACLE_NULLS</constant>
      (available with all drivers, not just Oracle):
      Conversion of NULL and empty strings.
      <itemizedlist>
       <listitem>
        <para>
         <constant>PDO::NULL_NATURAL</constant>:
         No conversion.
        </para>
       </listitem>
       <listitem>
        <para>
         <constant>PDO::NULL_EMPTY_STRING</constant>:
         Empty string is converted to &null;.
        </para>
       </listitem>
       <listitem>
        <para>
         <constant>PDO::NULL_TO_STRING</constant>:
         &null; is converted to an empty string.
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>:
      Convert numeric values to strings when fetching.
      Requires <type>bool</type>.
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::ATTR_STATEMENT_CLASS</constant>:
      Set user-supplied statement class derived from PDOStatement.
      Cannot be used with persistent PDO instances.
      Requires <literal>array(string classname, array(mixed constructor_args))</literal>.
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::ATTR_TIMEOUT</constant>:
      Specifies the timeout duration in seconds.
      Not all drivers support this option, and its meaning may differ from driver to driver.
      For example, sqlite will wait for up to this time value before giving up
      on obtaining a writable lock, but other drivers may interpret this as a
      connect or a read timeout interval.
      Requires <type>int</type>.
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::ATTR_AUTOCOMMIT</constant>
      (available in OCI, Firebird and MySQL):
      Whether to autocommit every single statement.
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::ATTR_EMULATE_PREPARES</constant>
      Enables or disables emulation of prepared statements.  Some drivers do
      not support native prepared statements or have limited support for them.
      Use this setting to force PDO to either always emulate prepared
      statements (if &true; and emulated prepares are supported by the driver),
      or to try to use native prepared statements (if &false;).
      It will always fall back to emulating the prepared statement if the
      driver cannot successfully prepare the current query.
      Requires <type>bool</type>.
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::MYSQL_ATTR_USE_BUFFERED_QUERY</constant>
      (available in MySQL): Use buffered queries.
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>: Set default fetch mode.
      Description of the modes is available in the
      <methodname>PDOStatement::fetch</methodname> documentation.
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>attribute</parameter></term>
     <listitem>
      <para>
       The attribute to modify.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       The value to set the <parameter>attribute</parameter>,
       might require a specific type depending on the attribute.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::getAttribute</function></member>
    <member><function>PDOStatement::getAttribute</function></member>
    <member><function>PDOStatement::setAttribute</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

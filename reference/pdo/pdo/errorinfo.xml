<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="pdo.errorinfo" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::errorInfo</refname>
  <refpurpose>
   Fetch extended error information associated with the last operation on the database handle
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>PDO::errorInfo</methodname>
   <void/>
  </methodsynopsis>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>PDO::errorInfo</function> returns an array of error information
   about the last operation performed by this database handle. The array
   consists of at least the following fields:
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Element</entry>
       <entry>Information</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>0</entry>
       <entry>SQLSTATE error code (a five characters alphanumeric identifier defined
               in the ANSI SQL standard).</entry>
      </row>
      <row>
       <entry>1</entry>
       <entry>Driver-specific error code.</entry>
      </row>
      <row>
       <entry>2</entry>
       <entry>Driver-specific error message.</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>

  <note>
   <para>
    If the SQLSTATE error code is not set or there is no driver-specific
    error, the elements following element 0 will be set to &null;.
    </para>
  </note>

  <para>
   <function>PDO::errorInfo</function> only retrieves error information for
   operations performed directly on the database handle. If you create a
   PDOStatement object through <function>PDO::prepare</function> or
   <function>PDO::query</function> and invoke an error on the statement
   handle, <function>PDO::errorInfo</function> will not reflect the error
   from the statement handle. You must call
   <function>PDOStatement::errorInfo</function> to return the error
   information for an operation performed on a particular statement handle.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Displaying errorInfo() fields for a PDO_ODBC connection to a DB2 database</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Provoke an error -- bogus SQL syntax */
$stmt = $dbh->prepare('bogus sql');
if (!$stmt) {
    echo "\nPDO::errorInfo():\n";
    print_r($dbh->errorInfo());
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
PDO::errorInfo():
Array
(
    [0] => HY000
    [1] => 1
    [2] => near "bogus": syntax error
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::errorCode</function></member>
    <member><function>PDOStatement::errorCode</function></member>
    <member><function>PDOStatement::errorInfo</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.yaz-ccl-parse" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>yaz_ccl_parse</refname>
  <refpurpose>Invoke CCL Parser</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>yaz_ccl_parse</methodname>
   <methodparam><type>resource</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">result</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function invokes a CCL parser. It converts a given CCL FIND query to
   an RPN query which may be passed to the <function>yaz_search</function> 
   function to perform a search.
  </para>
  <para>
   To define a set of valid CCL fields call <function>yaz_ccl_conf</function> 
   prior to this function.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>id</parameter></term>
     <listitem>
      <para>
       The connection resource returned by <function>yaz_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       The CCL FIND query.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       If the function was executed successfully, this will be an array 
       containing the valid RPN query under the key <literal>rpn</literal>.
      </para>
      <para>
       Upon failure, three indexes are set in this array to indicate the cause
       of failure: 
       <itemizedlist>
        <listitem>
         <para>
          <literal>errorcode</literal> - the CCL error code (integer)
         </para>
        </listitem> 
        <listitem>
         <para>
          <literal>errorstring</literal> - the CCL error string
         </para>
        </listitem> 
        <listitem>
         <para>
          <literal>errorpos</literal> - approximate position in query of failure
          (integer is character position)
         </para>
        </listitem> 
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>CCL Parsing</title>
   <para>
    We will try to search using CCL. In the example below,  
    <literal>$ccl</literal> is a CCL query. 
   </para>
   <programlisting role="php">
<![CDATA[
<?php

yaz_ccl_conf($id, $fields);  // see example for yaz_ccl_conf
if (!yaz_ccl_parse($id, $ccl, $cclresult)) {
    echo 'Error: ' . $cclresult["errorstring"];
} else {
    $rpn = $cclresult["rpn"];
    yaz_search($id, "rpn", $rpn);
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

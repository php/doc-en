<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1.2.2 $ -->
<!-- Purpose: remote.other -->
<!-- Membership: pecl, external -->
 
<book xml:id="book.yaz" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>YAZ</title>
 
 <!-- {{{ preface -->
 <preface xml:id="intro.yaz">
  &reftitle.intro;
  <para>
   This extension offers a PHP interface to the
   <productname>YAZ</productname> toolkit that implements the 
   <link xlink:href="&url.yaz-loc;">Z39.50
   Protocol for Information Retrieval</link>.
   With this extension you can easily implement a Z39.50 origin (client)
   that searches or scans Z39.50 targets (servers) in parallel.
  </para>
  <para>
   The module hides most of the complexity of Z39.50 so it should be
   fairly easy to use. It supports persistent stateless connections very
   similar to those offered by the various RDB APIs that are available
   for PHP. This means that sessions are stateless but shared among
   users, thus saving the connect and initialize phase steps in most
   cases.
  </para>
  <para>
   <productname>YAZ</productname> is available at <link
   xlink:href="&url.yaz;">&url.yaz;</link>. You can find news information,
   example scripts, etc. for this extension at <link
   xlink:href="&url.yaz-phpyaz;">&url.yaz-phpyaz;</link>.
  </para>
  <note>
   <para>
    &pecl.moved-ver;5.0.0.
   </para>
  </note>
 </preface>
 <!-- }}} -->
 
 &reference.yaz.setup;
 &reference.yaz.constants;
 &reference.yaz.examples;
 &reference.yaz.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


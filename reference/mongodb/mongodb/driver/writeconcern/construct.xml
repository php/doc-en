<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="mongodb-driver-writeconcern.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB\Driver\WriteConcern::__construct</refname>
  <refpurpose>Create a new WriteConcern</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <methodname>MongoDB\Driver\WriteConcern::__construct</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>w</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>wtimeout</parameter><initializer>&null;</initializer></methodparam>
  <methodparam choice="opt"><type class="union"><type>bool</type><type>null</type></type><parameter>journal</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Constructs a new <classname>MongoDB\Driver\WriteConcern</classname>, which is
   an immutable value object.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>w</parameter></term>
    <listitem>
     <para>
      <table>
       <title>Write concern</title>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>Value</entry>
          <entry>Description</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>1</entry>
          <entry>
            Requests acknowledgement that the write operation has propagated to
            the standalone <literal>mongod</literal> or the primary in a replica
            set. This is the default write concern for MongoDB.
          </entry>
         </row>
         <row>
          <entry>0</entry>
          <entry>
           Requests no acknowledgment of the write operation. However, this may
           return information about socket exceptions and networking errors to
           the application.
          </entry>
         </row>
         <row>
          <entry>&lt;integer greater than 1&gt;</entry>
          <entry>
           Numbers greater than 1 are valid only for replica sets to request
           acknowledgement from specified number of members, including the
           primary.
          </entry>
         </row>
         <row>
          <entry><constant>MongoDB\Driver\WriteConcern::MAJORITY</constant></entry>
          <entry>
           <para>
            Requests acknowledgment that write operations have propagated to the
            majority of voting nodes, including the primary, and have been
            written to the on-disk journal for these nodes.
           </para>
           <para>
            Prior to MongoDB 3.0, this refers to the majority of replica set
            members (not just voting nodes).
           </para>
          </entry>
         </row>
         <row>
          <entry>string</entry>
          <entry>
           A string value is interpereted as a tag set. Requests acknowledgement
           that the write operations have propagated to a replica set member
           with the specified tag.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>wtimeout</parameter></term>
    <listitem>
     <para>
      How long to wait (in milliseconds) for secondaries before failing.
     </para>
     <para>
      <literal>wtimeout</literal> causes write operations to return with an
      error (<classname>WriteConcernError</classname>) after the specified
      limit, even if the required write concern will eventually succeed. When
      these write operations return, MongoDB does not undo successful data
      modifications performed before the write concern exceeded the
      <literal>wtimeout</literal> time limit.
     </para>
     <para>
      If specified, <literal>wtimeout</literal> must be a signed 64-bit integer
      greater than or equal to zero.
     </para>
     <para>
      <table>
       <title>Write concern timeout</title>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>Value</entry>
          <entry>Description</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>0</entry>
          <entry>Block indefinitely. This is the default.</entry>
         </row>
         <row>
          <entry>&lt;integer greater than 0&gt;</entry>
          <entry>
           Milliseconds to wait until returning.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>journal</parameter></term>
    <listitem>
     <para>
      Wait until mongod has applied the write to the journal.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simplelist>
   &mongodb.throws.argumentparsing;
   <member>Throws <classname>MongoDB\Driver\Exception\InvalidArgumentException</classname> if <parameter>w</parameter> is invalid or <parameter>wtimeout</parameter> is either negative or greater than the bounds of a signed 32-bit integer.</member>
  </simplelist>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongodb 1.7.0</entry>
       <entry>
        The <parameter>wTimeout</parameter> parameter now accepts 64-bit values.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>


 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoDB\Driver\WriteConcern::__construct</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

/* Request write acknowledgement from the majority of the replica set nodes */
$wc = new MongoDB\Driver\WriteConcern(MongoDB\Driver\WriteConcern::MAJORITY, 500);

/* Request write acknowledgement from a node configured with the "MultipleDC" tag */
$wc = new MongoDB\Driver\WriteConcern("MultipleDC", 500);

?>
]]>
   </programlisting>
  </example>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><link xlink:href="&url.mongodb.docs.writeconcern;">Write Concern reference</link></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

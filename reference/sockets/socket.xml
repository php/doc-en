<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<reference xml:id="class.socket" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The Socket class</title>
 <titleabbrev>Socket</titleabbrev>

 <partintro>

<!-- {{{ Socket intro -->
  <section xml:id="socket.intro">
   &reftitle.intro;
   <para>
    A fully opaque class which replaces <literal>Socket</literal> resources as of PHP 8.0.0.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="socket.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <modifier>final</modifier>
     <classname>Socket</classname>
    </ooclass>
   </classsynopsis>
<!-- }}} -->

  </section>

 </partintro>

 <!-- {{{ Example Section -->
  <section xml:id="socket.examples">
    <title>Examples</title>
    <example purpose="Creating and working with sockets in PHP 8">
      <title>Basic Usage of the Socket Class</title>
      <para>
        The following example demonstrates how to create and interact with a 
        <classname>Socket</classname> instance using the <literal>Socket</literal> class introduced in PHP 8.0.0.
      </para>
      <programlisting language="PHP">
        &lt;?php
        // Creating a socket with the AF_INET address family, SOCK_STREAM type, and TCP protocol
        $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);

        // Check if socket creation was successful
        if (!$socket) {
            echo "Socket creation failed: " . socket_strerror(socket_last_error()) . PHP_EOL;
            exit;
        }

        // Verifying that the created socket is an object, as expected in PHP 8
        if (!is_object($socket)) {
            throw new Exception("Socket could not be created.");
        }

        // Confirm that the socket was successfully created
        echo "Socket created successfully." . PHP_EOL;

        // Close the socket to release resources
        socket_close($socket);
        ?&gt;
      </programlisting>
      <para>
        This example shows the use of the <classname>Socket</classname> class instead of 
        the traditional resource-based sockets. The <literal>socket_create</literal> function 
        is used to create a socket, and the resulting object is handled appropriately.
      </para>
    </example>
  </section>
 <!-- }}} -->

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

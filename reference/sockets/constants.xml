<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<appendix xml:id="sockets.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="constant.af-unix">
   <term>
    <constant>AF_UNIX</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.af-inet">
   <term>
    <constant>AF_INET</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.af-inet6">
   <term>
    <constant>AF_INET6</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Only available if compiled with IPv6 support.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sock-stream">
   <term>
    <constant>SOCK_STREAM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sock-dgram">
   <term>
    <constant>SOCK_DGRAM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sock-raw">
   <term>
    <constant>SOCK_RAW</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sock-seqpacket">
   <term>
    <constant>SOCK_SEQPACKET</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sock-rdm">
   <term>
    <constant>SOCK_RDM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.msg-oob">
   <term>
    <constant>MSG_OOB</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.msg-waitall">
   <term>
    <constant>MSG_WAITALL</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.msg-peek">
   <term>
    <constant>MSG_PEEK</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.msg-dontroute">
   <term>
    <constant>MSG_DONTROUTE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.msg-eor">
   <term>
    <constant>MSG_EOR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Not available on Windows platforms.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.msg-eof">
   <term>
    <constant>MSG_EOF</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Not available on Windows platforms.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-debug">
   <term>
    <constant>SO_DEBUG</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-reuseaddr">
   <term>
    <constant>SO_REUSEADDR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-reuseport">
   <term>
    <constant>SO_REUSEPORT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     This constant is only available on platforms that
     support the <constant>SO_REUSEPORT</constant> socket option: this
     includes Linux, macOS and *BSD, but does not include Windows.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-keepalive">
   <term>
    <constant>SO_KEEPALIVE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-dontroute">
   <term>
    <constant>SO_DONTROUTE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-linger">
   <term>
    <constant>SO_LINGER</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-broadcast">
   <term>
    <constant>SO_BROADCAST</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-oobinline">
   <term>
    <constant>SO_OOBINLINE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-sndbuf">
   <term>
    <constant>SO_SNDBUF</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-rcvbuf">
   <term>
    <constant>SO_RCVBUF</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-sndlowat">
   <term>
    <constant>SO_SNDLOWAT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-rcvlowat">
   <term>
    <constant>SO_RCVLOWAT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-sndtimeo">
   <term>
    <constant>SO_SNDTIMEO</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-rcvtimeo">
   <term>
    <constant>SO_RCVTIMEO</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-type">
   <term>
    <constant>SO_TYPE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-error">
   <term>
    <constant>SO_ERROR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.tcp-nodelay">
   <term>
    <constant>TCP_NODELAY</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Used to disable Nagle TCP algorithm.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-mark">
   <term>
    <constant>SO_MARK</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Available as of PHP 8.1.0 
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-user-cookie">
   <term>
    <constant>SO_USER_COOKIE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Available as of PHP 8.1.0 
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-acceptfilter">
   <term>
    <constant>SO_ACCEPTFILTER</constant> 
    (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     Available as of PHP 8.1.0 
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-donttrunc">
   <term>
    <constant>SO_DONTTRUNC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Available as of PHP 8.1.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.so-wantmore">
   <term>
    <constant>SO_WANTMORE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Available as of PHP 8.1.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.tcp-defer-accept">
   <term>
    <constant>TCP_DEFER_ACCEPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Available as of PHP 8.1.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sol-socket">
   <term>
    <constant>SOL_SOCKET</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.php-normal-read">
   <term>
    <constant>PHP_NORMAL_READ</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.php-binary-read">
   <term>
    <constant>PHP_BINARY_READ</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sol-tcp">
   <term>
    <constant>SOL_TCP</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sol-udp">
   <term>
    <constant>SOL_UDP</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <simpara>
  The following constants are defined under Windows and UNIX-like platforms.
  Each constant is only defined if their equal is available on the platform.
 </simpara>

 <variablelist>
  <varlistentry xml:id="constant.socket-eintr">
   <term>
    <constant>SOCKET_EINTR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Interrupted system call.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ebadf">
   <term>
    <constant>SOCKET_EBADF</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bad file descriptor number.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eacces">
   <term>
    <constant>SOCKET_EACCES</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Permission denied.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-efault">
   <term>
    <constant>SOCKET_EFAULT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Bad address.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-einval">
   <term>
    <constant>SOCKET_EINVAL</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Invalid argument.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-emfile">
   <term>
    <constant>SOCKET_EMFILE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Too many open files.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enametoolong">
   <term>
    <constant>SOCKET_ENAMETOOLONG</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     File name too long.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enotempty">
   <term>
    <constant>SOCKET_ENOTEMPTY</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Directory not empty.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eloop">
   <term>
    <constant>SOCKET_ELOOP</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Too many symbolic links encountered.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ewouldblock">
   <term>
    <constant>SOCKET_EWOULDBLOCK</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Operation would block.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eremote">
   <term>
    <constant>SOCKET_EREMOTE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Object is remote.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eusers">
   <term>
    <constant>SOCKET_EUSERS</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Too many users.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enotsock">
   <term>
    <constant>SOCKET_ENOTSOCK</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Socket operation on non-socket.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-edestaddrreq">
   <term>
    <constant>SOCKET_EDESTADDRREQ</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Destination address required.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-emsgsize">
   <term>
    <constant>SOCKET_EMSGSIZE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Message too long.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eprototype">
   <term>
    <constant>SOCKET_EPROTOTYPE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Protocol wrong type for socket.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eprotonosupport">
   <term>
    <constant>SOCKET_EPROTONOSUPPORT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Protocol not supported.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-esocktnosupport">
   <term>
    <constant>SOCKET_ESOCKTNOSUPPORT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Socket type not supported.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eopnotsupp">
   <term>
    <constant>SOCKET_EOPNOTSUPP</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Operation not supported on transport endpoint.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-epfnosupport">
   <term>
    <constant>SOCKET_EPFNOSUPPORT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Protocol family not supported.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eafnosupport">
   <term>
    <constant>SOCKET_EAFNOSUPPORT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Address family not supported by protocol.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eaddrnotavail">
   <term>
    <constant>SOCKET_EADDRNOTAVAIL</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Cannot assign requested address.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enetdown">
   <term>
    <constant>SOCKET_ENETDOWN</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Network is down.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enetunreach">
   <term>
    <constant>SOCKET_ENETUNREACH</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Network is unreachable.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enetreset">
   <term>
    <constant>SOCKET_ENETRESET</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Network dropped connection because of reset.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-econnaborted">
   <term>
    <constant>SOCKET_ECONNABORTED</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Software caused connection abort.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-econnreset">
   <term>
    <constant>SOCKET_ECONNRESET</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Connection reset by peer.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enobufs">
   <term>
    <constant>SOCKET_ENOBUFS</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No buffer space available.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eisconn">
   <term>
    <constant>SOCKET_EISCONN</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Transport endpoint is already connected.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enotconn">
   <term>
    <constant>SOCKET_ENOTCONN</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Transport endpoint is not connected.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eshutdown">
   <term>
    <constant>SOCKET_ESHUTDOWN</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Cannot send after transport endpoint shutdown.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-etimedout">
   <term>
    <constant>SOCKET_ETIMEDOUT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Connection timed out.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-econnrefused">
   <term>
    <constant>SOCKET_ECONNREFUSED</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Connection refused.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ehostdown">
   <term>
    <constant>SOCKET_EHOSTDOWN</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Host is down.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ehostunreach">
   <term>
    <constant>SOCKET_EHOSTUNREACH</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No route to host.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ealready">
   <term>
    <constant>SOCKET_EALREADY</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Operation already in progress.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-einprogress">
   <term>
    <constant>SOCKET_EINPROGRESS</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Operation now in progress.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 
 <simpara>
  The following constants are only defined under Windows.
 </simpara>

 <variablelist>
  
  
  
  
  
  
  
  <varlistentry xml:id="constant.socket-enoprotoopt">
   <term>
    <constant>SOCKET_ENOPROTOOPT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  
  
  
  
  
  <varlistentry xml:id="constant.socket-eaddrinuse">
   <term>
    <constant>SOCKET_EADDRINUSE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  
  
  
  
  
  
  
  
  
  
  <varlistentry xml:id="constant.socket-etoomyrefs">
   <term>
    <constant>SOCKET_ETOOMYREFS</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  
  
  
  
  
  
  
  <varlistentry xml:id="constant.socket-eproclim">
   <term>
    <constant>SOCKET_EPROCLIM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="constant.socket-eduot">
   <term>
    <constant>SOCKET_EDUOT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-estale">
   <term>
    <constant>SOCKET_ESTALE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="constant.socket-ediscon">
   <term>
    <constant>SOCKET_EDISCON</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-sysnotready">
   <term>
    <constant>SOCKET_SYSNOTREADY</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-vernotsupported">
   <term>
    <constant>SOCKET_VERNOTSUPPORTED</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-notinitialised">
   <term>
    <constant>SOCKET_NOTINITIALISED</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-host-not-found">
   <term>
    <constant>SOCKET_HOST_NOT_FOUND</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-try-again">
   <term>
    <constant>SOCKET_TRY_AGAIN</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-no-recovery">
   <term>
    <constant>SOCKET_NO_RECOVERY</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-no-data">
   <term>
    <constant>SOCKET_NO_DATA</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-no-address">
   <term>
    <constant>SOCKET_NO_ADDRESS</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <simpara>
  The following constants are only available on UNIX-like 
  platforms. Each constant is only defined if their equal is 
  available on the platform.
 </simpara>

 <variablelist>
  <varlistentry xml:id="constant.socket-eperm">
   <term>
    <constant>SOCKET_EPERM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Operation not permitted.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enoent">
   <term>
    <constant>SOCKET_ENOENT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No such file or directory.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eio">
   <term>
    <constant>SOCKET_EIO</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     I/O error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enxio">
   <term>
    <constant>SOCKET_ENXIO</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No such device or address.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-e2big">
   <term>
    <constant>SOCKET_E2BIG</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Arg list too long.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eagain">
   <term>
    <constant>SOCKET_EAGAIN</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Try again.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enomem">
   <term>
    <constant>SOCKET_ENOMEM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Out of memory.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enotblk">
   <term>
    <constant>SOCKET_ENOTBLK</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Block device required.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ebusy">
   <term>
    <constant>SOCKET_EBUSY</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Device or resource busy.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eexist">
   <term>
    <constant>SOCKET_EEXIST</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     File exists.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-exdev">
   <term>
    <constant>SOCKET_EXDEV</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Cross-device link.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enodev">
   <term>
    <constant>SOCKET_ENODEV</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No such device.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enotdir">
   <term>
    <constant>SOCKET_ENOTDIR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Not a directory.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eisdir">
   <term>
    <constant>SOCKET_EISDIR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Is a directory.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enfile">
   <term>
    <constant>SOCKET_ENFILE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     File table overflow.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enotty">
   <term>
    <constant>SOCKET_ENOTTY</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Not a typewriter.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enospc">
   <term>
    <constant>SOCKET_ENOSPC</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No space left on device.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-espipe">
   <term>
    <constant>SOCKET_ESPIPE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Illegal seek.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-erofs">
   <term>
    <constant>SOCKET_EROFS</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Read-only file system.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-emlink">
   <term>
    <constant>SOCKET_EMLINK</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Too many links.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-epipe">
   <term>
    <constant>SOCKET_EPIPE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Broken pipe.
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="constant.socket-enolck">
   <term>
    <constant>SOCKET_ENOLCK</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No record locks available.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enosys">
   <term>
    <constant>SOCKET_ENOSYS</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Function not implemented.
    </simpara>
   </listitem>
  </varlistentry>
  
  
  
  <varlistentry xml:id="constant.socket-enomsg">
   <term>
    <constant>SOCKET_ENOMSG</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No message of desired type.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eidrm">
   <term>
    <constant>SOCKET_EIDRM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Identifier removed.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-echrng">
   <term>
    <constant>SOCKET_ECHRNG</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Channel number out of range.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-el2nsync">
   <term>
    <constant>SOCKET_EL2NSYNC</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Level 2 not synchronized.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-el3hlt">
   <term>
    <constant>SOCKET_EL3HLT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Level 3 halted.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-el3rst">
   <term>
    <constant>SOCKET_EL3RST</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Level 3 reset.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-elnrng">
   <term>
    <constant>SOCKET_ELNRNG</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Link number out of range.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eunatch">
   <term>
    <constant>SOCKET_EUNATCH</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Protocol driver not attached.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enocsi">
   <term>
    <constant>SOCKET_ENOCSI</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No CSI structure available.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-el2hlt">
   <term>
    <constant>SOCKET_EL2HLT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Level 2 halted.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ebade">
   <term>
    <constant>SOCKET_EBADE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Invalid exchange.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ebadr">
   <term>
    <constant>SOCKET_EBADR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Invalid request descriptor.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-exfull">
   <term>
    <constant>SOCKET_EXFULL</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Exchange full.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enoano">
   <term>
    <constant>SOCKET_ENOANO</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No anode.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ebadrqc">
   <term>
    <constant>SOCKET_EBADRQC</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Invalid request code.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ebadslt">
   <term>
    <constant>SOCKET_EBADSLT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Invalid slot.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enostr">
   <term>
    <constant>SOCKET_ENOSTR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Device not a stream.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enodata">
   <term>
    <constant>SOCKET_ENODATA</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No data available.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-etime">
   <term>
    <constant>SOCKET_ETIME</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Timer expired.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enosr">
   <term>
    <constant>SOCKET_ENOSR</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Out of streams resources.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enonet">
   <term>
    <constant>SOCKET_ENONET</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Machine is not on the network.
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="constant.socket-enolink">
   <term>
    <constant>SOCKET_ENOLINK</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Link has been severed.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eadv">
   <term>
    <constant>SOCKET_EADV</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Advertise error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-esrmnt">
   <term>
    <constant>SOCKET_ESRMNT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Srmount error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ecomm">
   <term>
    <constant>SOCKET_ECOMM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Communication error on send.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eproto">
   <term>
    <constant>SOCKET_EPROTO</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Protocol error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-emultihop">
   <term>
    <constant>SOCKET_EMULTIHOP</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Multihop attempted.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ebadmsg">
   <term>
    <constant>SOCKET_EBADMSG</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Not a data message.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enotuniq">
   <term>
    <constant>SOCKET_ENOTUNIQ</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Name not unique on network.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-ebadfd">
   <term>
    <constant>SOCKET_EBADFD</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     File descriptor in bad state.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eremchg">
   <term>
    <constant>SOCKET_EREMCHG</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Remote address changed.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-erestart">
   <term>
    <constant>SOCKET_ERESTART</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Interrupted system call should be restarted.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-estrpipe">
   <term>
    <constant>SOCKET_ESTRPIPE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Streams pipe error.
    </simpara>
   </listitem>
  </varlistentry>
  
  
  
  
  
  <varlistentry xml:id="constant.socket-eprotoopt">
   <term>
    <constant>SOCKET_EPROTOOPT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Protocol not available.
    </simpara>
   </listitem>
  </varlistentry>
  
  
  
  
  
  <varlistentry xml:id="constant.socket-addrinuse">
   <term>
    <constant>SOCKET_ADDRINUSE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Address already in use.
    </simpara>
   </listitem>
  </varlistentry>
  
  
  
  
  
  
  
  
  
  
  <varlistentry xml:id="constant.socket-etoomanyrefs">
   <term>
    <constant>SOCKET_ETOOMANYREFS</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Too many references: cannot splice.
    </simpara>
   </listitem>
  </varlistentry>
  
  
  
  
  
  
  <varlistentry xml:id="constant.socket-eisnam">
   <term>
    <constant>SOCKET_EISNAM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Is a named type file.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-eremoteio">
   <term>
    <constant>SOCKET_EREMOTEIO</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Remote I/O error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-edquot">
   <term>
    <constant>SOCKET_EDQUOT</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Quota exceeded.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-enomedium">
   <term>
    <constant>SOCKET_ENOMEDIUM</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No medium found.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-emediumtype">
   <term>
    <constant>SOCKET_EMEDIUMTYPE</constant> 
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Wrong medium type.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-scmrights">
   <term>
    <constant>SCM_RIGHTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      Send or receive a set of  open  file  descriptors  from  another process.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.socket-credentials">
   <term>
    <constant>SCM_CREDENTIALS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.socket-atmark" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_atmark</refname>
  <refpurpose>Determines whether socket is at out-of-band mark</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>socket_atmark</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
  </methodsynopsis>
  <para>
   Determines whether <parameter>socket</parameter> is at out-of-band mark.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       A <classname>Socket</classname> instance created with <function>socket_create</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Using <function>socket_atmark</function> to check if the socket is ready to read out-of-band data.</title>
    <programlisting role="php">
<![CDATA[
<?php
$socketServer = socket_create( AF_INET, SOCK_STREAM, SOL_TCP );
socket_set_option( $socketServer, SOL_SOCKET, SO_REUSEADDR, 1 );
socket_bind( $socketServer, '127.0.0.1' );
socket_listen( $socketServer );

$socketClient = socket_create( AF_INET, SOCK_STREAM, SOL_TCP );
socket_getsockname( $socketServer, $stAddr, $uPort );
socket_connect( $socketClient, $stAddr, $uPort );

$socket = socket_accept( $socketServer );
socket_shutdown( $socket, 1 );

$st = 'This is normal data.';
socket_send( $socketClient, $st, strlen( $st ), 0 );
$st = '!'; # TCP only allows one byte of urgent data.
socket_send( $socketClient, $st, strlen( $st ), MSG_OOB );
$st = 'Not so urgent.';
socket_send( $socketClient, $st, strlen( $st ), 0 );
socket_shutdown( $socketClient );

do {
    if ( socket_atmark( $socket ) ) {
        $rc = socket_recv( $socket, $st, 65536, MSG_OOB );
        echo "Received urgent data: ({$rc}) {$st}\n";
    } else {
        $rc = socket_recv( $socket, $st, 1024, 0 );
        echo "Received normal data: ({$rc}) {$st}\n";
    }
} while ( $rc > 0 );
socket_close( $socketServer );
socket_close( $socketClient );
socket_close( $socket );
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Received normal data: (20) This is normal data.
Received urgent data: (1) !
Received normal data: (14) Not so urgent.
Received normal data: (0)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_connect</function></member>
    <member><function>socket_create</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

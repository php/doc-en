<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.socket-getsockname" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_getsockname</refname>
  <refpurpose>Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>socket_getsockname</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">address</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">port</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <note>
   <simpara>
    <function>socket_getsockname</function> should not be used with
    <constant>AF_UNIX</constant> sockets created with <function>socket_connect</function>.
    Only sockets created with <function>socket_accept</function> or a primary
    server socket following a call to <function>socket_bind</function> will return
    meaningful values.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       A <classname>Socket</classname> instance created with <function>socket_create</function>
       or <function>socket_accept</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>address</parameter></term>
     <listitem>
      <para>
       If the given socket is of type <constant>AF_INET</constant>
       or <constant>AF_INET6</constant>, <function>socket_getsockname</function>
       will return the local <emphasis>IP address</emphasis> in appropriate notation (e.g.
       <literal>127.0.0.1</literal> or <literal>fe80::1</literal>) in the
       <parameter>address</parameter> parameter and, if the optional
       <parameter>port</parameter> parameter is present, also the associated port.
      </para>
      <para>
       If the given socket is of type <constant>AF_UNIX</constant>,
       <function>socket_getsockname</function> will return the Unix filesystem
       path (e.g. <literal>/var/run/daemon.sock</literal>) in the
       <parameter>address</parameter> parameter.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       If provided, this will hold the associated port.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success; <function>socket_getsockname</function> may also return
   &false; if the socket type is not any of <constant>AF_INET</constant>,
   <constant>AF_INET6</constant>, or <constant>AF_UNIX</constant>, in which
   case the last socket error code is <emphasis>not</emphasis> updated.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_getpeername</function></member>
    <member><function>socket_last_error</function></member>
    <member><function>socket_strerror</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.6.2.1 $ -->
<refentry xml:id="function.SDO-DAS-Relational-construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_Relational::__construct</refname>
  <refpurpose>
   Creates an instance of a Relational Data Access Service
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SDO_DAS_Relational</type>
   <methodname>SDO_DAS_Relational::__construct</methodname>
   <methodparam>
    <type>array</type>
    <parameter>database_metadata</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>string</type>
    <parameter>application_root_type</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>array</type>
    <parameter>SDO_containment_references_metadata</parameter>
   </methodparam>
  </methodsynopsis>

  &warn.experimental.func;

  <para>
   Constructs an instance of a Relational Data Access Service 
   from the passed metadata.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>database_metadata</term>
     <listitem>
      <para>
       An array containing one or more table definitions, 
       each of which is an associative array containing the keys
       <varname>name</varname>,
       <varname>columns</varname>,
       <varname>PK</varname>, and optionally,
       <varname>FK</varname>.
       For a full discussion of the metadata, see the
       <link linkend='sdo.das.rel.metadata'>metadata</link>
       section in the general information about the Relational DAS.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>application_root_type</term>
     <listitem>
      <para>
       The root of each data graph is an object of a special root type and 
       the application data objects come below that.
       Of the various application types in the SDO model, 
       one has to be the the application type immediately 
       below the root of the data graph.
       If there is only one table in the database metadata, 
       so the application root type can be inferred, this argument can be omitted.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>SDO_containment_references_metadata</term>
     <listitem>
      <para>
       An array containing one or more definitions of a containment relation, 
       each of which is an associative array containing the keys
       <varname>parent</varname>
       and
       <varname>child</varname>.
       The containment relations describe how the types in the model 
       are connected to form a tree.
       The type specified as the application root type must be present 
       as one of the parent types in the containment references.
       If the application only needs to work with one table at a time, 
       and there are no containment relations in the model, 
       this argument can be omitted.
       For a full discussion of the metadata, see the
       <link linkend='sdo.das.rel.metadata'>metadata</link>
       section in the general information about the Relational DAS.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an SDO_DAS_Relational object on success.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>SDO_DAS_Relational::__construct</function>
   throws a SDO_DAS_Relational_Exception if 
   any problems are found in the metadata.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   For a full discussion of the metadata, see the
   <link linkend='sdo.das.rel.metadata'>metadata</link>
   section in the general information about the Relational DAS.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.6.2.1 $ -->
<refentry xml:id="function.SDO-DAS-Relational-createRootDataObject" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_Relational::createRootDataObject</refname>
  <refpurpose>
   Returns the special root object in an otherwise 
   empty data graph. Used when creating a data graph from scratch.
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SDODataObject</type>
   <methodname>SDO_DAS_Relational::createRootDataObject</methodname>
   <void/>
  </methodsynopsis>
   &warn.experimental.func;
  <para>
   Returns the special root object at the top of an otherwise 
   empty data graph.
   This call is used when the application wants to create a 
   data graph from scratch, without having called
   <function>executeQuery</function>
   to create a data graph.
  </para>
  <para>
   The special root object has one multi-valued containment property, 
   with a name of the application root type that was passed when 
   the Relational DAS was constructed.
   The property can take values of only that type.
   The only thing that the application can usefully do with the root 
   type is to call
   <function>createDataObject</function>
   on it, passing the name of the application root type,
   in order to create a data object of their own application type.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   None.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The root object.
  </para>
 </refsect1>



 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   None.
  </para>
 </refsect1>



 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Please see the
   <link linkend='sdo.das.rel.examples'>Examples</link>
   section in the general information about the Relational DAS
   for many examples of calling this method.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

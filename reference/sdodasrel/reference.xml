<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.21.2.4 $ -->

<reference xml:id="ref.sdo.das.rel" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>SDO Relational Data Access Service Functions</title>
 <titleabbrev>SDO-DAS-Relational</titleabbrev>

 <partintro>

  <!-- FIXME: The rest should be reworked to follow our OOskeletons -->
  <!-- class definition section -->
  <section xml:id='sdo.das.rel.classes'>
    &reftitle.classes;
   <para>
    The Relational DAS provides two classes: the Relational DAS itself and 
    the subclass of Exception that can be thrown. The Relational DAS has 
    four publicly useful calls: the constructor,
    the
    <function>createRootDataObject</function>
    call to obtain the root object of an empty data graph,
    the
    <function>executeQuery</function>
    call to obtain a data graph containing data from a relational database,
    and the
    <function>applyChanges</function>
    call to write changes made to a data graph back to the relational 
    database.
   </para>
      

   <section xml:id='sdo.das.rel.sdo-das-relational'>
    <title>
     <classname>SDO_DAS_Relational</classname>
    </title>
    <para>
     The only object other than an SDO_DAS_Relational_Exception with which 
     the application is expected to interact.
    </para>
    <section xml:id='sdo.das.rel.sdo-das-relational.methods'>
     &reftitle.methods;
     <itemizedlist>
      <listitem>
       <para>
        <link linkend='function.SDO-DAS-Relational-construct'>
         __construct
        </link> 
        - construct the Relational DAS with a model derived from the 
        passed metadata
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend='function.SDO-DAS-Relational-createRootDataObject'>
         createRootDataObject
        </link> 
        - obtain an otherwise empty data graph containing just the special 
        root object
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend='function.SDO-DAS-Relational-executeQuery'>
         executeQuery
        </link>
        - execute an SQL query passed as a literal string and return  
        the results as a normalised data graph
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend='function.SDO-DAS-Relational-executePreparedQuery'>
         executePreparedQuery
        </link>
        - execute an SQL query passed as a prepared statement, with a 
        list of values to substitute for placeholders, and return the 
        results as a normalised data graph
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend='function.SDO-DAS-Relational-applyChanges'>
         applyChanges
        </link>
        - examine the change summary in the data graph and apply those 
        changes back to the database, subject to an assumption 
        of optimistic concurrency
       </para>
      </listitem>
     </itemizedlist>
    </section>
   </section>

   <section xml:id='sdo.das.rel.sdo-das-relational-exception'>
    <title>
     <classname>SDO_DAS_Relational_Exception</classname>
    </title>
    <para>
     Is a subclass of PHP's
     <classname>Exception</classname>.
     It adds no behaviour to
     <classname>Exception</classname>.
     Thrown, with useful descriptive text, to signal errors in the 
     metadata or unexpected failures to perform SQL operations.
    </para>
   </section>
  </section>


 </partintro>

 <!-- This seems to create the table of contents -->
 &reference.sdodasrel.entities.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


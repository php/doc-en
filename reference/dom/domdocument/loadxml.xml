<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1.2.1 $ -->
<refentry xml:id="domdocument.loadxml" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument::loadXML</refname>
  <refpurpose>
   Load XML from a string
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>DOMDocument::loadXML</methodname>
   <methodparam><type>string</type><parameter>source</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  <para>
   Loads an XML document from a string. 
  </para>
  <para>
   This method may also be called statically to load and create a 
   <classname>DOMDocument</classname> object. The static invocation may be 
   used when no <classname>DOMDocument</classname> properties need to be set 
   prior to loading.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>source</parameter></term>
     <listitem>
      <para>
       The string containing the XML.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success; If called statically, returns a DOMDocument.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   If an empty string is passed as the <parameter>source</parameter>,
   a warning will be generated. This warning is not generated by libxml
   and cannot be handled using libxml's error handling functions.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Creating a Document</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = new DOMDocument();
$doc->loadXML('<root><node/></root>');
echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Static invocation of <literal>loadXML</literal></title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = DOMDocument::loadXML('<root><node/></root>');
echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="domdocument.load" /></member>
    <member><xref linkend="domdocument.save" /></member>
    <member><xref linkend="domdocument.savexml" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

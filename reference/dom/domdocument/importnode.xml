<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1.2.1 $ -->
<refentry xml:id="domdocument.importnode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument::importNode</refname>
  <refpurpose>Import node into current document</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>DOMNode</type><methodname>DOMDocument::importNode</methodname>
   <methodparam><type>DOMNode</type><parameter>importedNode</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>deep</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function returns a copy of the node to import and associates it with 
   the current document.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>importedNode</parameter></term>
     <listitem>
      <para>
       The node to import.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>deep</parameter></term>
     <listitem>
      <para>
       If set to &true;, this method will recursively import the subtree under
       the <parameter>importedNode</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The copied node.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <classname>DOMException</classname> is thrown if node cannot be imported.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

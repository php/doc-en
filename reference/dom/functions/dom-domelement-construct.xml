<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3.2.1 $ -->
<refentry xml:id='function.dom-domelement-construct' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMElement->__construct()</refname>
  <refpurpose>
   Creates a new DOMElement object
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>DOMElement</classname></ooclass>
   <constructorsynopsis>
    <methodname>__construct</methodname>
    <methodparam><type>string</type><parameter>name</parameter></methodparam>
    <methodparam choice='opt'><type>string</type><parameter>value</parameter></methodparam>
    <methodparam choice='opt'><type>string</type><parameter>namespaceURI</parameter></methodparam>
   </constructorsynopsis> 
  </classsynopsis>
  <para>
   Creates a new <classname>DOMElement</classname> object. This object is read only. 
   It may be appended to a document, but additional nodes may not be appended to this node until 
   the node is associated with a document. To create a writeable node, use 
   <xref linkend="function.dom-domdocument-createelement" /> or 
   <xref linkend="function.dom-domdocument-createelementns" />.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       The tag name of the element. When also passing in namespaceURI, the element name 
       may take a prefix to be associated with the URI.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       The value of the element.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>namespaceURI</parameter></term>
     <listitem>
      <para>
       A namespace URI to create the element within a specific namespace.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Creating a new DOMElement</title>
    <programlisting role="php">
<![CDATA[
<?php

$dom = new DOMDocument('1.0', 'iso-8859-1');
$element = $dom->appendChild(new DOMElement('root'));
$element_ns = new DOMElement('pr:node1', 'thisvalue', 'http://xyz');
$element->appendChild($element_ns);
echo $dom->saveXML(); /* <?xml version="1.0" encoding="iso-8859-1"?>
<root><pr:node1 xmlns:pr="http://xyz">thisvalue</pr:node1></root> */

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.dom-domdocument-createelement" /></member>
    <member><xref linkend="function.dom-domdocument-createelementns" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

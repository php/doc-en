<?xml version="1.0" encoding="utf-8"?>
<refentry xml:id="dom-htmldocument.createfromstring" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Dom\HTMLDocument::createFromString</refname>
  <refpurpose>Parses an <acronym>HTML</acronym> document from a string</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Dom\\HTMLDocument">
   <modifier>public</modifier> <modifier>static</modifier> <type>Dom\HTMLDocument</type><methodname>Dom\HTMLDocument::createFromString</methodname>
   <methodparam><type>string</type><parameter>source</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>overrideEncoding</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Parses an <acronym>HTML</acronym> document from a string,
   according to the living standard.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>source</parameter></term>
    <listitem>
     <simpara>
      The string containing the <acronym>HTML</acronym> to parse.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>options</parameter></term>
    <listitem>
     &dom.parameter.compliant.options;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>overrideEncoding</parameter></term>
    <listitem>
     &dom.parameter.compliant.encoding;
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   The parsed document as an <classname>Dom\HTMLDocument</classname> instance.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   &dom.errors.compliant.common;
  </itemizedlist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="dom-htmldocument.createfromstring.example.basic">
   <title><methodname>Dom\HTMLDocument::createFromString</methodname> example</title>
   <simpara>
    Parses a sample document.
   </simpara>
   <programlisting role="php">
<![CDATA[
<?php
$dom = Dom\HTMLDocument::createFromString(<<<'HTML'
<!DOCTYPE html>
<html>
<body>
   <p>Hello, world!</p>
</body>
</html>
HTML);
echo $dom->saveHtml();
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
<!DOCTYPE html><html><head></head><body>
    <p>Hello, world!</p>

</body></html>
]]>
   </screen>
  </example>
 </refsect1>

 &dom.parser.compliant.note.whitespace;

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Dom\HTMLDocument::createEmpty</methodname></member>
   <member><methodname>Dom\HTMLDocument::createFromFile</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

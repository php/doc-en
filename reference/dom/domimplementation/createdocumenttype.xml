<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1.2.1 $ -->
<refentry xml:id='domimplementation.createdocumenttype' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMImplementation::createDocumentType</refname>
  <refpurpose>
   Creates an empty DOMDocumentType object
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>DOMDocumentType</type><methodname>DOMImplementation::createDocumentType</methodname>
   <methodparam choice="opt"><type>string</type><parameter>qualifiedName</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>publicId</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>systemId</parameter></methodparam>
  </methodsynopsis>
  <para>
   Creates an empty <classname>DOMDocumentType</classname> object. Entity 
   declarations and notations are not made available. Entity reference 
   expansions and default attribute additions do not occur.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>qualifiedName</parameter></term>
     <listitem>
      <para>
       The qualified name of the document type to create.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>publicId</parameter></term>
     <listitem>
      <para>
       The external subset public identifier.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>systemId</parameter></term>
     <listitem>
      <para>
       The external subset system identifier.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A new <classname>DOMDocumentType</classname> node with its 
   <literal>ownerDocument</literal> set to &null;.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Creating a document with an attached DTD</title>
    <programlisting role="php">
 <![CDATA[
<?php

// Creates an instance of the DOMImplementation class
$imp = new DOMImplementation;

// Creates a DOMDocumentType instance
$dtd = $imp->createDocumentType('graph', '', 'graph.dtd');

// Creates a DOMDocument instance
$dom = $imp->createDocument("", "", $dtd);

// Set other properties
$dom->encoding = 'UTF-8';
$dom->standalone = false;

// Create an empty element
$element = $dom->createElement('graph');

// Append the element
$dom->appendChild($element);

// Retrieve and print the document
echo $dom->saveXML();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="xml">
<![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE graph SYSTEM "graph.dtd">
<graph/>
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NAMESPACE_ERR</constant></term>
     <listitem>
      <para>
       Raised if there is an error with the namespace, as determined by 
       <parameter>qualifiedName</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="domimplementation.createdocument" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

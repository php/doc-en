<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.ingres-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ingres_query</refname>
  <refpurpose>Send an SQL query to Ingres</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>ingres_query</methodname>
   <methodparam><type>resource</type><parameter>link</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>params</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>types</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>ingres_query</function> sends the given
   <parameter>query</parameter> to the Ingres server. 
  </para>
  <para>
   The query becomes part of the currently open transaction.  If
   there is no open transaction, <function>ingres_query</function>
   opens a new transaction. To close the transaction, you can 
   call either <function>ingres_commit</function> to commit the changes
   made to the database or <function>ingres_rollback</function> to
   cancel these changes. When the script ends, any open transaction
   is rolled back (by calling
   <function>ingres_rollback</function>). You can also use
   <function>ingres_autocommit</function> before opening a new
   transaction to have every SQL query immediately committed.
  </para>
  <note>
   <title>Related Configurations</title>
   <para>
    See also the <link linkend="ini.ingres.describe">ingres.describe</link>,
    <link linkend="ini.ingres.scrollable">ingres.scrollable</link> and
    <link linkend="ini.ingres.utf8">ingres.utf8</link> directives in 
    <link linkend="ingres.configuration">Runtime Configuration</link>
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>link</parameter></term>
     <listitem>
      <para>
       The connection link identifier.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="function.ingres-query.query">
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       A valid SQL query (see the Ingres <literal>SQL reference
       guide</literal>) in the Ingres documentation.
      </para>
      <para>
       Data inside the query should be <link
       linkend="function.ingres-escape-string">properly escaped</link>.
      </para>
      <para>
       The following types of SQL queries cannot be sent with this function:
       <itemizedlist>
        <listitem>
         <simpara>
          <literal>close</literal> (see <function>ingres_close</function>)
         </simpara>
        </listitem>
       <listitem>
         <simpara>
          <literal>commit</literal> (see <function>ingres_commit</function>)
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>connect</literal> (see <function>ingres_connect</function>)
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>disconnect</literal> (see <function>ingres_close</function>)
         </simpara>
        </listitem>
        <listitem>
         <simpara><literal>get dbevent</literal></simpara>
        </listitem>
        <listitem>
         <simpara><literal>prepare to commit</literal></simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>rollback</literal> (see <function>ingres_rollback</function>)
         </simpara>
        </listitem>
        <listitem><simpara><literal>savepoint</literal></simpara></listitem>
        <listitem>
         <simpara>
          <literal>set autocommit</literal> (see <function>ingres_autocommit</function>)
         </simpara>
        </listitem>
        <listitem>
         <simpara>all cursor-related queries are unsupported</simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       An array of parameter values to be used with the query
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="function.ingres-query.types">
     <term><parameter>types</parameter></term>
     <listitem>
      <para>
       A string containing a sequence of types for the parameter values
       passed. When <link linkend="ini.ingres.describe">ingres.describe</link>
       is enabled, this parameter can be ignored as the driver automatically
       fetches the expected parameter types from the server.
      </para>
      <informaltable>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>Type code</entry>
          <entry>Ingres type</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>a</entry>
          <entry><type>bool</type></entry>
         </row>
         <row>
          <entry>b</entry>
          <entry><type>BYTE</type></entry>
         </row>
         <row>
          <entry>B</entry>
          <entry><type>LONG BYTE/BLOB</type></entry>
         </row>
         <row>
          <entry>c</entry>
          <entry><type>CHAR</type></entry>
         </row>
         <row>
          <entry>d</entry>
          <entry><type>DATE/ANSIDATE/TIMESTAMP/TIME</type></entry>
         </row>
         <row>
          <entry>f</entry>
          <entry><type>FLOAT</type></entry>
         </row>
         <row>
          <entry>i</entry>
          <entry><type>int</type></entry>
         </row>
         <row>
          <entry>L</entry>
          <entry><type>LONG TEXT</type></entry>
         </row>
         <row>
          <entry>m</entry>
          <entry><type>MONEY</type></entry>
         </row>
         <row>
          <entry>M</entry>
          <entry><type>LONG NVARCHAR</type></entry>
         </row>
         <row>
          <entry>n</entry>
          <entry><type>NCHAR</type></entry>
         </row>
         <row>
          <entry>N</entry>
          <entry><type>NVARCHAR</type></entry>
         </row>
         <row>
          <entry>t</entry>
          <entry><type>TEXT</type></entry>
         </row>
         <row>
          <entry>v</entry>
          <entry><type>VARCHAR</type></entry>
         </row>
         <row>
          <entry>V</entry>
          <entry><type>LONG VARCHAR</type></entry>
         </row>
        </tbody>
       </tgroup>
      </informaltable>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>ingres_query</function> returns a query result identifier on
   success else it returns &false;. To see if an error
   occurred use <function>ingres_errno</function>, 
   <function>ingres_error</function> or 
   <function>ingres_errsqlstate</function>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Send a simple select</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = ingres_connect("demodb");

$result = ingres_query($link, "select * from user_profile");
while ($row = ingres_fetch_row($result)) {
    echo $row[1];
    echo $row[2];
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Passing query parameters to <function>ingres_query</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$link = ingres_connect("demodb");

$params[] = "Emma";
$query = "select * from user_profile where up_first = ?";
$result = ingres_query($link, $query, $params);
while ($row = ingres_fetch_row($result)) {
    echo $row[1];
    echo $row[2];
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Inserting a BLOB with parameter types</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = ingres_connect("demodb");

//Open a photo
$fh = fopen("photo.jpg","r");
$blob_data = stream_get_contents($fh);
fclose($fh);

//Prepare parameters
$params[] = $blob_data;
$params[] = 1201;

//Define parameter types
$param_types = "Bi";

$query = "update user_profile set up_image = ? where up_id = ?";
$result = ingres_query($link, $query , $params, $param_types);

if (ingres_errno())
{
    echo ingres_errno() . "-" . ingres_error() . "\n";
}

ingres_commit($link);

ingres_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ingres_unbuffered_query</function></member>
    <member><function>ingres_fetch_array</function></member>
    <member><function>ingres_fetch_assoc</function></member>
    <member><function>ingres_fetch_object</function></member>
    <member><function>ingres_fetch_row</function></member>
    <member><function>ingres_commit</function></member>
    <member><function>ingres_rollback</function></member>
    <member><function>ingres_autocommit</function></member>
    <member><function>ingres_set_environment</function></member>
    <member><function>ingres_errno</function></member>
    <member><function>ingres_error</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

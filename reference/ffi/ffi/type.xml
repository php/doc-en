<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="ffi.type" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>FFI::type</refname>
  <refpurpose>Creates an FFI\CType object from a C declaration</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>FFI\CType</type><type>null</type></type><methodname>FFI::type</methodname>
   <methodparam><type>string</type><parameter>type</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>FFI\CType</type><type>null</type></type><methodname>FFI::type</methodname>
   <methodparam><type>string</type><parameter>type</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function creates and returns a <classname>FFI\CType</classname> object for the
   given <type>string</type> containing a C type declaration.
   If this method is called statically, it must only use predefined C type names (e.g.
   <literal>int</literal>, <literal>char</literal>, etc.); if the method is called as
   instance method, any type declared for the instance is allowed.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     <para>
      A valid C declaration as <type>string</type>, or an instance of <classname>FFI\CType</classname>
      which has already been created.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the freshly created <classname>FFI\CType</classname> object,
   or &null; on failure.
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

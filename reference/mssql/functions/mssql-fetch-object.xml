<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.mssql-fetch-object" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mssql_fetch_object</refname>
  <refpurpose>Fetch row as object</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &warn.removed.function.7-0-0.alternatives;
   <simplelist role="alternatives">
    <member><function>PDOStatement::fetchObject</function></member>
    <member><function>sqlsrv_fetch_object</function></member>
    <member><function>odbc_fetch_object</function></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>mssql_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mssql_fetch_object</function> is similar to
   <function>mssql_fetch_array</function>, with one difference - an
   object is returned, instead of an array.  Indirectly, that means
   that you can only access the data by the field names, and not by
   their offsets (numbers are illegal property names).
  </para>
  <para>
   Speed-wise, the function is identical to
   <function>mssql_fetch_array</function>, and almost as quick as
   <function>mssql_fetch_row</function> (the difference is
   insignificant).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       The result resource that is being evaluated. This result comes from a
       call to <function>mssql_query</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an object with properties that correspond to the fetched row, or
   &false; if there are no more rows.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mssql_fetch_object</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
// Send a select query to MSSQL
$query = mssql_query('SELECT [username], [name] FROM [php].[dbo].[userlist]');

// Check if there were any records
if (!mssql_num_rows($query)) {
    echo 'No records found';
} else {
    // Print a nice list of users in the format of:
    // * name (username)

    echo '<ul>';

    while ($row = mssql_fetch_object($query)) {
        echo '<li>' . $row->name . ' (' . $row->username . ')</li>';
    }

    echo '</ul>';
}

// Free the query result
mssql_free_result($query);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mssql_fetch_array</function></member>
    <member><function>mssql_fetch_row</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

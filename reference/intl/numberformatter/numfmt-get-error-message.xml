<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1.2.2 $ -->
<refentry xml:id="numberformatter.geterrormessage"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>NumberFormatter::getErrorMessage</refname>
  <refname>numfmt_get_error_message</refname>
  <refpurpose>Get formatter's last error message.</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <para>Object oriented style</para>
  <classsynopsis>
   <ooclass>
    <classname>NumberFormatter</classname>
   </ooclass>
   <methodsynopsis>
    <type>string</type>
    <methodname>getErrorMessage</methodname>
    <void />
   </methodsynopsis>
  </classsynopsis>
  <para>Procedural style</para>
  <methodsynopsis>
   <type>string</type>
   <methodname>numfmt_get_error_message</methodname>
   <methodparam><type>NumberFormatter</type><parameter>fmt</parameter></methodparam>
  </methodsynopsis>
  <para>
   Get error message from the last function performed by the formatter.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>fmt</parameter></term>
     <listitem>
      <para>
       <classname>NumberFormatter</classname> object.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>Returns error message from last formatter call.</para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>
    <function>numfmt_get_error_message</function> example
   </title>
   <programlisting role="php">
    <![CDATA[
<?php
$fmt = numfmt_create( 'de_DE', NumberFormatter::DECIMAL );
$data = numfmt_format($fmt, 1234567.891234567890000);
if(intl_is_failure(numfmt_get_error_code($fmt))) {
  report_error("Formatter error");
}
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>OO example</title>
   <programlisting role="php">
    <![CDATA[
<?php
$fmt = new NumberFormatter( 'de_DE', NumberFormatter::DECIMAL );
$fmt->format(1234567.891234567890000);
if(intl_is_failure($fmt->getErrorCode()) {
  report_error("Formatter error");
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>numfmt_get_error_message</function></member>
    <member><function>intl_get_error_code</function></member>
    <member><function>intl_is_failure</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
-->

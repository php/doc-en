<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="resourcebundle.get" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ResourceBundle::get</refname>
  <refname>resourcebundle_get</refname>
  <refpurpose>Get data from the bundle</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>mixed</type><methodname>ResourceBundle::get</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>index</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>fallback</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis role="procedural">
   <type>mixed</type><methodname>resourcebundle_get</methodname>
   <methodparam><type>ResourceBundle</type><parameter>bundle</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>index</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>fallback</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Get the data from the bundle by index or string key.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>bundle</parameter></term>
     <listitem>
      <para>
       <classname>ResourceBundle</classname> object.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>index</parameter></term>
     <listitem>
      <para>
       Data index, must be string or integer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fallback</parameter></term>
     <listitem>
      <para>
       Whether locale should match exactly or fallback to parent locale is allowed.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the data located at the index or &null; on error. Strings, integers and binary data strings
   are returned as corresponding PHP types, integer array is returned as PHP array. Complex types are
   returned as <classname>ResourceBundle</classname> object.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>resourcebundle_get</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
$r = resourcebundle_create( 'es', "/usr/share/data/myapp");
echo resourcebundle_get($r, 'somestring');
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>OO example</title>
   <programlisting role="php">
<![CDATA[
<?php
$r = new ResourceBundle( 'es', "/usr/share/data/myapp");
echo $r->get('somestring');
?>
]]>
   </programlisting>
  &example.outputs;
  <screen>
<![CDATA[
?Hola, mundo!
]]>
  </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>resourcebundle_count</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
-->

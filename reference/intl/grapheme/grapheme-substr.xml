<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.grapheme-substr" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>grapheme_substr</refname>
  <refpurpose>Return part of a string</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>grapheme_substr</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Return part of a string
  </para> 
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       The input string. Must be valid UTF-8. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Start position in default grapheme units.
       If <parameter>offset</parameter> is non-negative, the returned string will start at the
       <parameter>offset</parameter>'th position in <parameter>string</parameter>, counting from zero. If <parameter>offset</parameter> is negative,
       the returned string will start at the <parameter>offset</parameter>'th grapheme unit from the 
       end of string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Length in grapheme units.
       If <parameter>length</parameter> is given and is positive, the string returned will contain
       at most <parameter>length</parameter> grapheme units beginning from <parameter>offset</parameter> (depending on the 
       length of string). If <parameter>length</parameter> is given and is negative, then
       that many grapheme units will be omitted from the end of string (after the
       start position has been calculated when <parameter>offset</parameter> is negative). If <parameter>offset</parameter>
       denotes a position beyond this truncation, an empty string will be returned.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
   
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the extracted part of <parameter>string</parameter>, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       The function now consistently clamps out-of-bounds offsets to the string boundary.
       Previously, &false; was returned instead of the empty string in some cases.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>grapheme_substr</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"

print urlencode(grapheme_substr( "ao" . $char_a_ring_nfd . "bc" . $char_o_diaeresis_nfd . "O", 2, -1 ));
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
a%CC%8Abco%CC%88
]]>
  </screen>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>grapheme_extract</function></member>
    <member>
     <link xlink:href="&uri.unicode.graphemes;">
      Unicode Text Segmentation: Grapheme Cluster Boundaries
     </link>
    </member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

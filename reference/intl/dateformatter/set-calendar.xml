<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="intldateformatter.setcalendar" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlDateFormatter::setCalendar</refname>
  <refname>datefmt_set_calendar</refname>
  <refpurpose>Sets the calendar type used by the formatter</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
   <methodsynopsis role="oop">
   <modifier>public</modifier> <type>bool</type><methodname>IntlDateFormatter::setCalendar</methodname>
   <methodparam><type class="union"><type>IntlCalendar</type><type>int</type><type>null</type></type><parameter>calendar</parameter></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis role="procedural">
   <type>bool</type><methodname>datefmt_set_calendar</methodname>
   <methodparam><type>IntlDateFormatter</type><parameter>formatter</parameter></methodparam>
   <methodparam><type class="union"><type>IntlCalendar</type><type>int</type><type>null</type></type><parameter>calendar</parameter></methodparam>
  </methodsynopsis>
  <para>
   Sets the calendar or calendar type used by the formatter.
  </para> 
  </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>formatter</parameter></term>
     <listitem>
      <para>
       The formatter resource.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>calendar</parameter></term>
     <listitem>
      <para>
       This can either be: the <link
       linkend="intl.intldateformatter-constants.calendartypes">calendar
       type</link> to use (default is
       <constant>IntlDateFormatter::GREGORIAN</constant>, which is also used if
       &null; is specified) or an
       <classname>IntlCalendar</classname> object.
     </para>
     <para>
      Any <classname>IntlCalendar</classname> object passed in will be cloned;
      no modifications will be made to the argument object.
     </para>
     <para>
      The timezone of the formatter will only be kept if an
      <classname>IntlCalendar</classname> object is not passed, otherwise the
      new timezone will be that of the passed object.
     </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
   
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.5.0/PECL 3.0.0</entry>
       <entry>
        It became possible to pass an <classname>IntlCalendar</classname>
        object.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
   <example>
    <title><function>datefmt_set_calendar</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$fmt = datefmt_create(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
echo 'calendar of the formatter is : ' . datefmt_get_calendar($fmt);
datefmt_set_calendar($fmt, IntlDateFormatter::TRADITIONAL);
echo 'Now calendar of the formatter is : ' . datefmt_get_calendar($fmt);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>OO example</title>
    <programlisting role="php">
<![CDATA[
<?php
$fmt = new IntlDateFormatter(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN  
);
echo 'calendar of the formatter is : ' . $fmt->getCalendar();
$fmt->setCalendar(IntlDateFormatter::TRADITIONAL);
echo 'Now calendar of the formatter is : ' . $fmt->getCalendar();
?>
]]>
    </programlisting>
   </example>
   &example.outputs;
   <screen>
    <![CDATA[
calendar of the formatter is : 1
Now calendar of the formatter is : 0
]]>
   </screen>

  <example>
  <title>Example with <classname>IntlCalendar</classname> argument</title>
   <programlisting role="php">
<![CDATA[
<?php
$time = strtotime("2013-03-03 00:00:00 UTC");
$formatter = IntlDateFormatter::create("en_US", NULL, NULL, "Europe/Amsterdam");

echo "before: ", $formatter->format($time), "\n";

/* note that the calendar's locale is not used! */
$formatter->setCalendar(IntlCalendar::createInstance(
               "America/New_York", "pt_PT@calendar=islamic"));

echo "after:  ", $formatter->format($time), "\n";

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
before: Sunday, March 3, 2013 at 1:00:00 AM Central European Standard Time
after:  Saturday, RabiÊ» II 20, 1434 at 7:00:00 PM Eastern Standard Time

]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
    <simplelist>
    <member><function>datefmt_get_calendar</function></member>
    <member><function>datefmt_get_calendar_object</function></member>
    <member><function>datefmt_create</function></member>
    </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="intldateformatter.parse" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlDateFormatter::parse</refname>
  <refname>datefmt_parse</refname>
  <refpurpose>Parse string to a timestamp value</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
   <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>int</type><type>float</type><type>false</type></type><methodname>IntlDateFormatter::parse</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">offset</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis role="procedural">
   <type class="union"><type>int</type><type>float</type><type>false</type></type><methodname>datefmt_parse</methodname>
   <methodparam><type>IntlDateFormatter</type><parameter>formatter</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">offset</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Converts <parameter>string</parameter> to an incremental time value, starting at 
   <parameter>offset</parameter> and consuming as much of the input value as possible.
  </para> 
  </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>formatter</parameter></term>
     <listitem>
      <para>
       The formatter resource      
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       string to convert to a time 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Position at which to start the parsing in <parameter>string</parameter> (zero-based).
       If no error occurs before <parameter>string</parameter> is consumed, <parameter>offset</parameter> will contain -1
       otherwise it will contain the position at which parsing ended (and the error occurred).
       This variable will contain the end position if the parse fails.
       If <parameter>offset</parameter> &gt; <code>strlen($string)</code>, the parse fails immediately.
     </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
   
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Timestamp of parsed value, or &false; if value cannot be parsed.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
   <example>
    <title>OO example</title>
    <programlisting role="php">
<![CDATA[
<?php
$fmt = new IntlDateFormatter(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
echo 'First parsed output is ' . $fmt->parse('Wednesday, December 20, 1989 4:00:00 PM PT');
$fmt = new IntlDateFormatter(
    'de-DE',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title><function>datefmt_parse</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$fmt = datefmt_create(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
echo 'First parsed output is ' . datefmt_parse($fmt, 'Wednesday, December 20, 1989 4:00:00 PM PT');
$fmt = datefmt_create(
    'de-DE',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
echo 'Second parsed output is ' . datefmt_parse($fmt, 'Mittwoch, 20. Dezember 1989 16:00 Uhr GMT-08:00');
?>
]]>
    </programlisting>
   </example>
     &example.outputs;
     <screen>
<![CDATA[
First parsed output is 630201600
Second parsed output is 630201600
]]>
     </screen>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>datefmt_create</function></member>
    <member><function>datefmt_format</function></member>
    <member><function>datefmt_localtime</function></member>
    <member><function>datefmt_get_error_code</function></member>
    <member><function>datefmt_get_error_message</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

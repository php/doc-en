<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="intlchar.chartype" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlChar::charType</refname>
  <refpurpose>Get the general category value for a code point</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>int</type><type>null</type></type><methodname>IntlChar::charType</methodname>
   <methodparam><type class="union"><type>int</type><type>string</type></type><parameter>codepoint</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns the general category value for the code point.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>codepoint</parameter></term>
    <listitem>
     &intl.codepoint.parameter;
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the general category type, which may be one of the following constants:
   <simplelist>
    <member><constant>IntlChar::CHAR_CATEGORY_UNASSIGNED</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_GENERAL_OTHER_TYPES</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_UPPERCASE_LETTER</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_LOWERCASE_LETTER</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_TITLECASE_LETTER</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_MODIFIER_LETTER</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_OTHER_LETTER</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_NON_SPACING_MARK</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_ENCLOSING_MARK</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_COMBINING_SPACING_MARK</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_LETTER_NUMBER</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_OTHER_NUMBER</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_SPACE_SEPARATOR</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_LINE_SEPARATOR</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_CONTROL_CHAR</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_FORMAT_CHAR</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_PRIVATE_USE_CHAR</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_SURROGATE</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_DASH_PUNCTUATION</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_START_PUNCTUATION</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_END_PUNCTUATION</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_CONNECTOR_PUNCTUATION</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_OTHER_PUNCTUATION</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_MATH_SYMBOL</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_CURRENCY_SYMBOL</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_MODIFIER_SYMBOL</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_OTHER_SYMBOL</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_INITIAL_PUNCTUATION</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_FINAL_PUNCTUATION</constant></member>
    <member><constant>IntlChar::CHAR_CATEGORY_CHAR_CATEGORY_COUNT</constant></member>
   </simplelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&intl.codepoint.example;</title>
   <programlisting role="php">
    <![CDATA[
<?php
var_dump(IntlChar::charType("A") === IntlChar::CHAR_CATEGORY_UPPERCASE_LETTER);
var_dump(IntlChar::charType(".") === IntlChar::CHAR_CATEGORY_OTHER_PUNCTUATION);
var_dump(IntlChar::charType("\t") === IntlChar::CHAR_CATEGORY_CONTROL_CHAR);
var_dump(IntlChar::charType("\u{2603}") === IntlChar::CHAR_CATEGORY_OTHER_SYMBOL);
var_dump(IntlChar::charType("multiple chars") === null);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
    <![CDATA[
bool(true)
bool(true)
bool(true)
bool(true)
bool(true)
]]>
   </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

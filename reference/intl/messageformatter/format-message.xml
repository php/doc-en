<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="messageformatter.formatmessage" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MessageFormatter::formatMessage</refname>
  <refname>msgfmt_format_message</refname>
  <refpurpose>Quick format message</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis role="MessageFormatter">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>MessageFormatter::formatMessage</methodname>
   <methodparam><type>string</type><parameter>locale</parameter></methodparam>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>msgfmt_format_message</methodname>
   <methodparam><type>string</type><parameter>locale</parameter></methodparam>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
  </methodsynopsis>
  <para>
   Quick formatting function that formats the string without having to
   explicitly create the formatter object. Use this function when the format
   operation is done only once and does not need any parameters or state to be
   kept or when wanting to customize the output by providing additional context to ICU directly.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>locale</parameter></term>
     <listitem>
      <para>
       The locale to use for formatting locale-dependent parts
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       The pattern <type>string</type> to insert things into.
       The pattern uses an 'apostrophe-friendly' syntax;
       see <link xlink:href="&url.icu.quoting;">Quoting/Escaping</link> for details.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       The <type>array</type> of values to insert into the format <type>string</type>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The formatted pattern string or &false; if an error occurred
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>msgfmt_format_message</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
echo msgfmt_format_message("en_US", "{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree\n", array(4560, 123, 4560/123));
echo msgfmt_format_message("de", "{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum\n", array(4560, 123, 4560/123));
echo msgfmt_format_message("en", 'You finished {place, selectordinal, one {#st} two {#nd} few {#rd} other {#th}}!', ['place' => 3]), "\n";
echo msgfmt_format_message("en",
        "There {apple, plural,
            =0 {are no apples}
            =1 {is one apple...}
            other {are # apples!}
        }",
    ['apple' => 0]
), "\n";
]]>
   </programlisting>
  </example>
  <example>
   <title>OO example</title>
   <programlisting role="php">
<![CDATA[
<?php
echo MessageFormatter::formatMessage("en_US", "{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree\n", array(4560, 123, 4560/123));
echo MessageFormatter::formatMessage("de", "{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum\n", array(4560, 123, 4560/123));
echo MessageFormatter::formatMessage("en", 'You finished {place, selectordinal, one {#st} two {#nd} few {#rd} other {#th}}!', ['place' => 3]), "\n";
echo MessageFormatter::formatMessage("en",
        "There {apple, plural,
            =0 {are no apples}
            =1 {is one apple...}
            other {are # apples!}
        }",
    ['apple' => 0]
), "\n";
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
4,560 monkeys on 123 trees make 37.073 monkeys per tree
4.560 Affen auf 123 Bäumen sind 37,073 Affen pro Baum
You finished 3rd!
There are no apples
]]>
  </screen>
  <example>
   <title>Instructing ICU to format currency with common and with narrow currency symbol</title>
   <simpara>Requires ICU ≥ 67.</simpara>
   <programlisting role="php">
<![CDATA[
<?php
echo msgfmt_format_message("cs_CZ", "{0, number, :: currency/CAD}", array(123.45));
echo msgfmt_format_message("cs_CZ", "{0, number, :: currency/CAD unit-width-narrow}", array(123.45));
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
123,45 CA$
123,45 $
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>msgfmt_create</function></member>
    <member><function>msgfmt_parse</function></member>
    <member><function>msgfmt_get_error_code</function></member>
    <member><function>msgfmt_get_error_message</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<phpdoc:classref xml:id="class.reflectionattribute" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The ReflectionAttribute class</title>
 <titleabbrev>ReflectionAttribute</titleabbrev>

 <partintro>

<!-- {{{ ReflectionAttribute intro -->
  <section xml:id="reflectionattribute.intro">
   &reftitle.intro;
   <para>
    The <classname>ReflectionAttribute</classname> class provides information about
    an <link linkend="language.attributes">Attributes</link>.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="reflectionattribute.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>ReflectionAttribute</classname>
    </ooclass>

    <classsynopsisinfo>
     <ooclass>
      <classname>ReflectionAttribute</classname>
     </ooclass>

     <oointerface>
      <interfacename>Reflector</interfacename>
     </oointerface>
    </classsynopsisinfo>

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionattribute.constants.is-instanceof">ReflectionAttribute::IS_INSTANCEOF</varname>
     <initializer>2</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionattribute')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionattribute')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <!-- {{{ ReflectionAttribute constants -->
  <section xml:id="reflectionattribute.constants">
   &reftitle.constants;
   <section xml:id="reflectionattribute.constants.flags">
    <title>ReflectionAttribute Flags</title>
    <variablelist>

     <varlistentry xml:id="reflectionattribute.constants.is-instanceof">
      <term><constant>ReflectionAttribute::IS_INSTANCEOF</constant></term>
      <listitem>
       <para>
        Retrieve attributes using an
        <parameter>instanceof</parameter> check.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
    <note>
     <para>
      The values of these constants may change between PHP versions.
      It is recommended to always use the constants
      and not rely on the values directly.
     </para>
    </note>
   </section>
  </section>
  <!-- }}} -->

 </partintro>

 &reference.reflection.entities.reflectionattribute;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

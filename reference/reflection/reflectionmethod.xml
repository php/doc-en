<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<phpdoc:classref xml:id="class.reflectionmethod" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The ReflectionMethod class</title>
 <titleabbrev>ReflectionMethod</titleabbrev>

 <partintro>

<!-- {{{ ReflectionMethod intro -->
  <section xml:id="reflectionmethod.intro">
   &reftitle.intro;
   <para>
    The <classname>ReflectionMethod</classname> class reports
    information about a method.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="reflectionmethod.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>ReflectionMethod</classname>
    </ooclass>

    <classsynopsisinfo>
     <ooclass>
      <classname>ReflectionMethod</classname>
     </ooclass>

     <ooclass>
      <modifier>extends</modifier>
      <classname>ReflectionFunctionAbstract</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-static">ReflectionMethod::IS_STATIC</varname>
     <initializer>16</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-public">ReflectionMethod::IS_PUBLIC</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-protected">ReflectionMethod::IS_PROTECTED</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-private">ReflectionMethod::IS_PRIVATE</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-abstract">ReflectionMethod::IS_ABSTRACT</varname>
     <initializer>64</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-final">ReflectionMethod::IS_FINAL</varname>
     <initializer>32</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>string</type>
     <varname linkend="reflectionmethod.props.class">class</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionfunctionabstract')/db:partintro/db:section/db:classsynopsis/db:fieldsynopsis[preceding-sibling::db:classsynopsisinfo[1][@role='comment' and text()='&Properties;']]))">
     <xi:fallback/>
    </xi:include>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionmethod')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionmethod')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>

    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionfunctionabstract')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  
<!-- {{{ ReflectionMethod properties -->
  <section xml:id="reflectionmethod.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="reflectionmethod.props.name">
     <term><varname>name</varname></term>
     <listitem>
      <para>Method name</para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="reflectionmethod.props.class">
     <term><varname>class</varname></term>
     <listitem>
      <para>Class name</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->


<!-- {{{ ReflectionMethod constants -->
  <section xml:id="reflectionmethod.constants">
   &reftitle.constants;
   <section xml:id="reflectionmethod.constants.modifiers">
    <title>ReflectionMethod Modifiers</title>
    <variablelist>

     <varlistentry xml:id="reflectionmethod.constants.is-static">
      <term><constant>ReflectionMethod::IS_STATIC</constant></term>
      <listitem>
       <para>
        Indicates that the method is static.
        Prior to PHP 7.4.0, the value was <literal>1</literal>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-public">
      <term><constant>ReflectionMethod::IS_PUBLIC</constant></term>
      <listitem>
       <para>
        Indicates that the method is public.
        Prior to PHP 7.4.0, the value was <literal>256</literal>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-protected">
      <term><constant>ReflectionMethod::IS_PROTECTED</constant></term>
      <listitem>
       <para>
        Indicates that the method is protected.
        Prior to PHP 7.4.0, the value was <literal>512</literal>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-private">
      <term><constant>ReflectionMethod::IS_PRIVATE</constant></term>
      <listitem>
       <para>
        Indicates that the method is private.
        Prior to PHP 7.4.0, the value was <literal>1024</literal>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-abstract">
      <term><constant>ReflectionMethod::IS_ABSTRACT</constant></term>
      <listitem>
       <para>
        Indicates that the method is abstract.
        Prior to PHP 7.4.0, the value was <literal>2</literal>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-final">
      <term><constant>ReflectionMethod::IS_FINAL</constant></term>
      <listitem>
       <para>
        Indicates that the method is final.
        Prior to PHP 7.4.0, the value was <literal>4</literal>.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
    <note>
     <para>
      The values of these constants may change between PHP versions.
      It is recommended to always use the constants
      and not rely on the values directly.
     </para>
    </note>
   </section>
  </section>
<!-- }}} -->


 </partintro>

 &reference.reflection.entities.reflectionmethod;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.sybase-unbuffered-query">
 <refnamediv>
  <refname>sybase_unbuffered_query</refname>
  <refpurpose>Send a Sybase query and do not block</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
   &warn.removed.function-7-0-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>sybase_unbuffered_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>store_result</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>sybase_unbuffered_query</function> sends a query to the
   currently active database on the server that's associated with the specified
   link identifier.  If the link identifier isn't specified, the last
   opened link is assumed.  If no link is open, the function tries to
   establish a link as if <function>sybase_connect</function> was
   called, and use it.
  </para>
  <para>
   Unlike <function>sybase_query</function>,
   <function>sybase_unbuffered_query</function> reads only the first
   row of the result set. <function>sybase_fetch_array</function> and similar
   function read more rows as needed.  <function>sybase_data_seek</function>
   reads up to the target row.  The behavior may produce better performance
   for large result sets.
  </para>
  <para>
   <function>sybase_num_rows</function> will only return the correct number
   of rows if all result sets have been read. To Sybase, the number of rows
   is not known and is therefore computed by the client implementation.
  </para>
  <note>
   <para>
    If you don't read all of the resultsets prior to executing the next query,
    PHP will raise a warning and cancel all of the pending results. To get rid of
    this, use <function>sybase_free_result</function> which will cancel pending
    results of an unbuffered query.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>link_identifier</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>store_result</parameter></term>
     <listitem>
      <para>
       The optional <parameter>store_result</parameter> can be &false; to
       indicate the resultsets shouldn't be fetched into memory, thus
       minimizing memory usage which is particularly interesting with very
       large resultsets.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a positive Sybase result identifier on success, or &false; on
   error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>sybase_unbuffered_query</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

$dbh = sybase_connect('SYBASE', '', '');
$q = sybase_unbuffered_query('select firstname, lastname from huge_table', $dbh, false);
sybase_data_seek($q, 10000);
$i = 0;

while ($row = sybase_fetch_row($q)) {
    echo $row[0], ' ', $row[1], '<br />';
    if ($i++ > 40000) {
        break;
    }
}

sybase_free_result($q);
sybase_close($dbh);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &sybase.ct.only;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sybase_query</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

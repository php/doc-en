<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="zookeeper.create" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Zookeeper::create</refname>
  <refpurpose>Create a node synchronously</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="oop">
   <modifier>public</modifier>
   <type>string</type><methodname>Zookeeper::create</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam><type>string</type><parameter>value</parameter></methodparam>
   <methodparam><type>array</type><parameter>acls</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   This method will create a node in ZooKeeper. A node can only be created if it does not already exists. The Create Flags affect the creation of nodes. If ZOO_EPHEMERAL flag is set, the node will automatically get removed if the client session goes away. If the ZOO_SEQUENCE flag is set, a unique monotonically increasing sequence number is appended to the path name.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>path</parameter></term>
    <listitem>
     <para>
      The name of the node. Expressed as a file name with slashes separating ancestors of the node.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
      The data to be stored in the node.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>acls</parameter></term>
    <listitem>
     <para>
      The initial ACL of the node. The ACL must not be null or empty.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
      this parameter can be set to 0 for normal create or an OR of the Create Flags
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the path of the new node (this might be different than the supplied path because of the ZOO_SEQUENCE flag) on success, and false on failure.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   This method emits PHP error/warning when parameters count or types are wrong or fail to create node.
  </para>
  <caution>
    <para>
      Since version 0.3.0, this method emits <classname>ZookeeperException</classname> and it's derivatives.
    </para>
  </caution>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="zookeeper.create.example.basic">
   <title><methodname>Zookeeper::create</methodname> example</title>
   <para>
     Create a new node.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$zookeeper = new Zookeeper('locahost:2181');
$aclArray = array(
  array(
    'perms'  => Zookeeper::PERM_ALL,
    'scheme' => 'world',
    'id'     => 'anyone',
  )
);
$path = '/path/to/newnode';
$realPath = $zookeeper->create($path, null, $aclArray);
if ($realPath)
  echo $realPath;
else
  echo 'ERR';
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
/path/to/newnode
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Zookeeper::delete</methodname></member>
   <member><methodname>Zookeeper::getChildren</methodname></member>
   <member><link linkend="zookeeper.constants.perms">ZooKeeper Permissions</link></member>
   <member><classname>ZookeeperException</classname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

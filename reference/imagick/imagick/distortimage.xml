<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="imagick.distortimage">
 <refnamediv>
  <refname>Imagick::distortImage</refname>
  <refpurpose>Distorts an image using various distortion methods</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Imagick::distortImage</methodname>
   <methodparam><type>int</type><parameter>method</parameter></methodparam>
   <methodparam><type>array</type><parameter>arguments</parameter></methodparam>
   <methodparam><type>bool</type><parameter>bestfit</parameter></methodparam>
  </methodsynopsis>
  <para>
   Distorts an image using various distortion methods, by mapping color
   lookups of the source image to a new destination image usually of the same
   size as the source image, unless 'bestfit' is set to &true;.
  </para>
  <para>
   If 'bestfit' is enabled, and distortion allows it, the destination image
   is adjusted to ensure the whole source 'image' will just fit within the
   final destination image, which will be sized and offset accordingly. Also
   in many cases the virtual offset of the source image will be taken into
   account in the mapping.
  </para>
  <para>
   &imagick.method.available.0x636;
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>method</parameter></term>
     <listitem>
      <para>
       The method of image distortion. See <link 
       linkend="imagick.constants.distortion">distortion constants</link>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arguments</parameter></term>
     <listitem>
      <para>
       The arguments for this distortion method
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bestfit</parameter></term>
     <listitem>
      <para>
       Attempt to resize destination to fit distorted source
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &imagick.return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   &imagick.imagick.throws;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Using <function>Imagick::distortImage</function>:</title>
    <para>
     Distort an image and display to the browser.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Create new object */
$im = new Imagick();

/* Create new checkerboard pattern */
$im->newPseudoImage(100, 100, "pattern:checkerboard");

/* Set the image format to png */
$im->setImageFormat('png');

/* Fill new visible areas with transparent */
$im->setImageVirtualPixelMethod(Imagick::VIRTUALPIXELMETHOD_TRANSPARENT);

/* Activate matte */
$im->setImageMatte(true);

/* Control points for the distortion */
$controlPoints = array( 10, 10, 
                        10, 5,

                        10, $im->getImageHeight() - 20,
                        10, $im->getImageHeight() - 5,

                        $im->getImageWidth() - 10, 10,
                        $im->getImageWidth() - 10, 20,

                        $im->getImageWidth() - 10, $im->getImageHeight() - 10,
                        $im->getImageWidth() - 10, $im->getImageHeight() - 30);

/* Perform the distortion */                       
$im->distortImage(Imagick::DISTORTION_PERSPECTIVE, $controlPoints, true);

/* Ouput the image */
header("Content-Type: image/png");
echo $im;
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Output of example : Using Imagick::distortImage()</alt>
     <imageobject>
      <imagedata fileref="en/reference/imagick/figures/distortImage.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Imagick::blurImage</function></member>
    <member><function>Imagick::motionBlurImage</function></member>
    <member><function>Imagick::radialBlurImage</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

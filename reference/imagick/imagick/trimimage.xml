<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6.2.1 $ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.imagick-trimimage">
 <refnamediv>
  <refname>Imagick::trimImage</refname>
  <refpurpose>Remove edges from the image</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Imagick::trimImage</methodname>
   <methodparam><type>float</type><parameter>fuzz</parameter></methodparam>
  </methodsynopsis>
  &warn.undocumented.func;
  &warn.experimental.func;
  <para>
   Remove edges that are the background color from the image.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>fuzz</parameter></term>
     <listitem>
      <para>
       By default target must match a particular pixel color exactly.
       However, in many cases two colors may differ by a small amount.
       The fuzz member of image defines how much tolerance is acceptable
       to consider two colors as the same.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &imagick.return.success;
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->

 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here</entry>
       <entry>Description of change</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->

  <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Using <function>Imagick::trimImage</function>:</title>
    <para>
     Trim an image, then display to the browser.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Create the object and read the image in */
$im = new Imagick( "image.jpg" );

/* Trim the image. */
$im->trimImage( 0 );

/* Ouput the image */
header( "Content-Type: image/" . $im->getImageFormat() );
echo $im;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

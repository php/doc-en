<?xml version="1.0" encoding="utf-8"?>
<refentry xml:id="function.simdjson-key-count" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>simdjson_key_count</refname>
  <refpurpose>Returns the value at a JSON pointer.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>simdjson_key_count</methodname>
   <methodparam><type>string</type><parameter>json</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>depth</parameter><initializer>512</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>throw_if_uncountable</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Count the number of elements of the object/array found at the requested JSON pointer.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>json</parameter></term>
    <listitem>
     <para>
      The <parameter>json</parameter> <type>string</type> being queried.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>key</parameter></term>
    <listitem>
     <para>
      The JSON pointer <type>string</type>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>depth</parameter></term>
    <listitem>
     <para>
      Maximum nesting depth of the structure being validated.
      The value must be greater than <literal>0</literal>,
      and less than or equal to <literal>2147483647</literal>.

      Callers should use reasonably small values,
      because larger depths require more buffer space and will
      increase the recursion depth, unlike the current <function>json_decode</function> implementation.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>throw_if_uncountable</parameter></term>
    <listitem>
     <para>
      When true, a <classname>SimdJsonException</classname> will be thrown
      instead of returning 0 when the value the JSON pointer points to
      is neither an object nor an array.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an &integer; with the number of elements of the value at the given JSON pointer.
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<refentry xml:id="function.simdjson-key-value" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>simdjson_key_value</refname>
  <refpurpose>Decodes the value of a JSON string located at the requested JSON pointer.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>simdjson_key_value</methodname>
   <methodparam><type>string</type><parameter>json</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>associative</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>depth</parameter><initializer>512</initializer></methodparam>
  </methodsynopsis>
  <para>
   Decodes and returns the value found at the requested JSON pointer.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>json</parameter></term>
    <listitem>
     <para>
      The <parameter>json</parameter> <type>string</type> being queried and decoded.
     </para>
      <para>
       This function only works with UTF-8 encoded strings.
      </para>
      <para>
       This function parses valid inputs which
       <function>json_decode</function> can decode,
       provided that they are less than 4 GiB long.
      </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>key</parameter></term>
    <listitem>
     <para>
      The JSON pointer <type>string</type>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>associative</parameter></term>
    <listitem>
     <para>
      When &true;, JSON objects will be returned as
      associative &array;s; when &false;, JSON objects will be returned as &object;s.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>depth</parameter></term>
    <listitem>
     <para>
      Maximum nesting depth of the structure being decoded.
      The value must be greater than <literal>0</literal>,
      and less than or equal to <literal>2147483647</literal>.

      Callers should use reasonably small values,
      because larger depths require more buffer space and will
      increase the recursion depth, unlike the current <function>json_decode</function> implementation.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the part of the value encoded in <parameter>json</parameter>
   that <parameter>key</parameter> refers to in appropriate
   PHP type. Values <literal>true</literal>, <literal>false</literal> and
   <literal>null</literal> are returned as &true;, &false; and &null;
   respectively.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   If <parameter>json</parameter> or <parameter>key</parameter> is invalid,
   or <parameter>key</parameter> could not be found within <parameter>json</parameter>,
   a <classname>SimdJsonException</classname> is thrown as of PECL simdjson 2.1.0,
   while previously, a <classname>RuntimeException</classname> was thrown.
  </para>
  <para>
   If <parameter>depth</parameter> is outside the allowed range,
   a <classname>SimdJsonValueError</classname> is thrown as of PECL simdjson 3.0.0,
   while previously, an error of level <constant>E_WARNING</constant> was raised.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>json_encode</function></member>
    <member><function>simdjson_decode</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

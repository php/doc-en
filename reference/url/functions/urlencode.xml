<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.urlencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>urlencode</refname>
  <refpurpose>URL-encodes string</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>urlencode</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function is convenient when encoding a string to be used in a query
   part of a URL, as a convenient way to pass variables to the next page.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       The string to be encoded.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a string in which all non-alphanumeric characters except
   <literal>-_.</literal> have been replaced with a percent
   (<literal>%</literal>) sign followed by two hex digits and spaces encoded
   as plus (<literal>+</literal>) signs.  It is encoded the same way that the
   posted data from a WWW form is encoded, that is the same way as in
   <literal>application/x-www-form-urlencoded</literal> media type. This
   differs from the <link xlink:href="&url.rfc;3986">RFC 3986</link> encoding (see
   <function>rawurlencode</function>) in that for historical reasons, spaces
   are encoded as plus (+) signs.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples; 
  <para>  
   <example>
    <title><function>urlencode</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<a href="mycgi?foo=', urlencode($userinput), '">';
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>urlencode</function> and <function>htmlentities</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$query_string = 'foo=' . urlencode($foo) . '&bar=' . urlencode($bar);
echo '<a href="mycgi?' . htmlentities($query_string) . '">';
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Be careful about variables that may match HTML entities. Things like
    &amp;amp, &amp;copy and &amp;pound are parsed by the browser and the
    actual entity is used instead of the desired variable name.  This is an
    obvious hassle that the W3C has been telling people about for years.
    The reference is here: <link xlink:href="&url.argsep;">&url.argsep;</link>.
   </para>
   <para>
    PHP supports changing the argument separator to the W3C-suggested
    semi-colon through the arg_separator .ini directive.  Unfortunately most
    user agents do not send form data in this semi-colon separated format.
    A more portable way around this is to use &amp;amp; instead of &amp; as
    the separator.  You don't need to change PHP's arg_separator for this.
    Leave it as &amp;, but simply encode your URLs using
    <function>htmlentities</function> or 
    <function>htmlspecialchars</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>urldecode</function></member>
    <member><function>htmlentities</function></member>
    <member><function>rawurlencode</function></member>
    <member><function>rawurldecode</function></member>
    <member><link xlink:href="&url.rfc;3986">RFC 3986</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

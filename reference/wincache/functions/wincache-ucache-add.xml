<?xml version="1.0" encoding="utf-8"?>
<refentry xml:id="function.wincache-ucache-add" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>wincache_ucache_add</refname>
  <refpurpose>
   Adds a variable in user cache only if variable does not already exist in the cache
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>wincache_ucache_add</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>wincache_ucache_add</methodname>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>unused</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Adds a variable in user cache, only if this variable doesn't already exist in the cache. 
   The added variable remains in the user cache unless its time to live expires or it is 
   deleted by using <function>wincache_ucache_delete</function> or <function>wincache_ucache_clear</function> functions.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Store the variable using this <parameter>key</parameter> name. If a variable with same key is already present the function
       will fail and return &false;. <parameter>key</parameter> is case sensitive. To override the value even if 
       <parameter>key</parameter> is present use <function>wincache_ucache_set</function> function instad. 
       <parameter>key</parameter> can also take array of name => value pairs where names will be used as keys. 
       This can be used to add multiple values in the cache in one operation, thus avoiding race condition.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Value of a variable to store. <parameter>Value</parameter> supports all data types except resources, such as file handles.
       This paramter is ignored if first argument is an array. A general guidance is to pass &null; 
       as <parameter>value</parameter> while using array as <parameter>key</parameter>. If <parameter>value</parameter> is an
       object, or an array containing objects, then the objects will be serialized. See
       <link linkend="object.sleep">__sleep()</link> for details on serializing objects.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Associative array of keys and values.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ttl</parameter></term>
     <listitem>
      <para>
       Time for the variable to live in the cache in seconds. After the value specified in <parameter>ttl</parameter> has passed 
       the stored variable will be deleted from the cache. This parameter takes a default value of <literal>0</literal> which means 
       the variable will stay in the cache unless explicitly deleted by using <function>wincache_ucache_delete</function> 
       or <function>wincache_ucache_clear</function> functions.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   If <parameter>key</parameter> is string, the function returns &true; on success and &false; on failure.
  </simpara>
  <para>
   If <parameter>key</parameter> is an array, the function returns:
   <itemizedlist spacing="compact">
    <listitem>
     <simpara>
      If all the name => value pairs in the array can be set, function returns an empty array;
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     If all the name => value pairs in the array cannot be set, function returns &false;;
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      If some can be set while others cannot, function returns an array with name=>value pair for which the addition failed in the user cache.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>wincache_ucache_add</function> with <parameter>key</parameter> as a string</title>
    <programlisting role="php">
<![CDATA[
<?php
$bar = 'BAR';
var_dump(wincache_ucache_add('foo', $bar));
var_dump(wincache_ucache_add('foo', $bar));
var_dump(wincache_ucache_get('foo'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(true)
bool(false)
string(3) "BAR" 
]]>
    </screen>    
   </example>
  </para>
  <para>
   <example>
    <title><function>wincache_ucache_add</function> with <parameter>key</parameter> as an array</title>
    <programlisting role="php">
<![CDATA[
<?php
$colors_array = array('green' => '5', 'Blue' => '6', 'yellow' => '7', 'cyan' => '8');
var_dump(wincache_ucache_add($colors_array));
var_dump(wincache_ucache_add($colors_array));
var_dump(wincache_ucache_get('Blue'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(0) { } 
array(4) { 
  ["green"]=> int(-1) 
  ["Blue"]=> int(-1) 
  ["yellow"]=> int(-1) 
  ["cyan"]=> int(-1) 
} 
string(1) "6"
]]>
    </screen>    
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>wincache_ucache_set</function></member>
    <member><function>wincache_ucache_get</function></member>
    <member><function>wincache_ucache_delete</function></member>
    <member><function>wincache_ucache_clear</function></member>
    <member><function>wincache_ucache_exists</function></member>
    <member><function>wincache_ucache_meminfo</function></member>
    <member><function>wincache_ucache_info</function></member>
    <member><link linkend="object.sleep">__sleep()</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

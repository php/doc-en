<?xml version="1.0" encoding="utf-8"?>

<chapter xml:id="com.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;

 <section xml:id="com.examples.foreach">
  <title>For Each</title>
  <para>
   You may use PHP's own 
   &foreach; statement to iterate
   over the contents of a standard COM/OLE IEnumVariant.  In layman's terms,
   this means that you can use foreach in places where you would have used
   <literal>For Each</literal> in VB/ASP code.
  </para>
  <para>
   <example>
    <title>For Each in ASP</title>
    <programlisting role="asp">
<![CDATA[
<%
Set domainObject = GetObject("WinNT://Domain")
For Each obj in domainObject
  Response.Write obj.Name & "<br />"
Next
%>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>foreach in PHP</title>
    <programlisting role="php">
<![CDATA[
<?php 
$domainObject = new COM("WinNT://Domain"); 
foreach ($domainObject as $obj) { 
   echo $obj->Name . "<br />"; 
} 
?>
]]>
    </programlisting>
   </example>
  </para>
 </section>

 <section xml:id="com.examples.arrays">
  <title>Arrays and Array-style COM properties</title>
  <para>
   Many COM objects expose their properties as arrays, or using array-style
   access.
  </para>
  <para>
   You can:
   <itemizedlist>
    <listitem>
     <para>
      Access multi-dimensional arrays, or COM properties that require
      multiple parameters using PHP array syntax.  You can also write or set
      properties using this technique.
     </para>
    </listitem>
    <listitem>
     <para>
      Iterate SafeArrays ("true" arrays) using the &foreach; control structure.  
      This works because SafeArrays include information about their size.  If an
      array-style property implements IEnumVariant then you can also use
      foreach for that property too; take a look at <xref
      linkend="com.examples.foreach"/> for more information on this topic.
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </section>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="com.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>com::__construct</refname>
  <refpurpose>com class constructor</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>com::__construct</methodname>
   <methodparam><type>string</type><parameter>module_name</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>string</type><type>null</type></type><parameter>server_name</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>codepage</parameter><initializer><constant>CP_ACP</constant></initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>typelib</parameter><initializer>""</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Constructs a new com object.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>module_name</parameter></term>
    <listitem>
     <simpara>
      Can be a ProgID, Class ID or Moniker that names the component to load.
     </simpara>
     <simpara>
      A ProgID is typically the application or DLL name, followed by a period,
      followed by the object name. e.g: <literal>Word.Application</literal>.
     </simpara>
     <simpara>
      A Class ID is the UUID that uniquely identifies a given class.
     </simpara>
     <simpara>
      A Moniker is a special form of naming, similar in concept to a URL
      scheme, that identifies a resource and specifies how it should be
      loaded.  As an example, you could load up Word and get an object
      representing a word document by specifying the full path to the word
      document as the module name, or you can use <literal>LDAP:</literal> as
      a moniker to use the ADSI interface to LDAP.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>server_name</parameter></term>
    <listitem>
     <simpara>
      The name of the DCOM server on which the component should be loaded and
      run.  If &null;, the object is run using the default for the
      application.  The default is typically to run it on the local machine,
      although the administrator might have configured the application to
      launch on a different machine.
     </simpara>
     <simpara>
      If a non-&null; value is specified for server, PHP will refuse to load
      the object unless the <link
      linkend="ini.com.allow-dcom">com.allow_dcom</link> &php.ini; option
      is set to &true;.
     </simpara>
     <para>
      If <parameter>server_name</parameter> is an array, it should contain the
      following elements (case sensitive!).  Note that they are all optional
      (although you need to specify both Username and Password together); if
      you omit the Server setting, the default server will be used (as
      mentioned above), and the instantiation of the object will not be
      affected by the <link linkend="ini.com.allow-dcom">com.allow_dcom</link>
      &php.ini; directive.
      <table>
       <title>DCOM server name</title>
       <tgroup cols="3">
        <thead>
         <row>
          <entry>key</entry>
          <entry>type</entry>
          <entry>description</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>Server</entry>
          <entry>string</entry>
          <entry>The name of the server.</entry>
         </row>
         <row>
          <entry>Username</entry>
          <entry>string</entry>
          <entry>The username to connect as.</entry>
         </row>
         <row>
          <entry>Password</entry>
          <entry>string</entry>
          <entry>The password for <literal>Username</literal>.</entry>
         </row>
         <row>
          <entry>Domain</entry>
          <entry>string</entry>
          <entry>The domain of <literal>server</literal>.</entry>
         </row>
         <row>
          <entry>Flags</entry>
          <entry>integer</entry>
          <entry>One or more of the following constants, logically OR'd together:
           <constant>CLSCTX_INPROC_SERVER</constant>,
           <constant>CLSCTX_INPROC_HANDLER</constant>,
           <constant>CLSCTX_LOCAL_SERVER</constant>,
           <constant>CLSCTX_REMOTE_SERVER</constant>,
           <constant>CLSCTX_SERVER</constant> and
           <constant>CLSCTX_ALL</constant>.  The default value if not
           specified here is <constant>CLSCTX_SERVER</constant> if you also
           omit <literal>Server</literal>, or
           <constant>CLSCTX_REMOTE_SERVER</constant> if you do specify a
           server.  You should consult the Microsoft documentation for
           CoCreateInstance for more information on the meaning of these
           constants; you will typically never have to use them.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>codepage</parameter></term>
    <listitem>
     <simpara>
      Specifies the codepage that is used to convert strings to
      unicode-strings and vice versa.  The conversion is applied whenever a
      PHP string is passed as a parameter or returned from a method of this
      COM object.  The code page is sticky, which means that it will
      propagate to objects and variants returned from the object.
     </simpara>
     <simpara>
      Possible values are
      <constant>CP_ACP</constant> (use system default ANSI code page - the
      default if this parameter is omitted),
      <constant>CP_MACCP</constant>,
      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
      <constant>CP_THREAD_ACP</constant> (use codepage/locale set for the
      current executing thread), <constant>CP_UTF7</constant>
      and <constant>CP_UTF8</constant>.  You may also use the number for a
      given codepage; consult the Microsoft documentation for more details on
      codepages and their numeric values.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

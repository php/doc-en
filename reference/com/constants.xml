<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<chapter xml:id="com.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="constant.clsctx-inproc-server">
   <term>
    <constant>CLSCTX_INPROC_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The code that creates and manages objects of this class is
     a DLL that runs in the same process as the caller of the
     function specifying the class context.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-inproc-handler">
   <term>
    <constant>CLSCTX_INPROC_HANDLER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The code that manages objects of this class is an in-process
     handler. This is a DLL that runs in the client process and
     implements client-side structures of this class when instances
     of the class are accessed remotely.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-local-server">
   <term>
    <constant>CLSCTX_LOCAL_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The EXE code that creates and manages objects of this class runs on
     same machine but is loaded in a separate process space.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-remote-server">
   <term>
    <constant>CLSCTX_REMOTE_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A remote context. The code that creates and manages objects of this
     class is run on a different computer.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-server">
   <term>
    <constant>CLSCTX_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indicates server code, whether in-process, local, or remote. This
     definition ORs <constant>CLSCTX_INPROC_SERVER</constant>,
     <constant>CLSCTX_LOCAL_SERVER</constant>, and
     <constant>CLSCTX_REMOTE_SERVER</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-all">
   <term>
    <constant>CLSCTX_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indicates all class contexts. This definition ORs
     <constant>CLSCTX_INPROC_HANDLER</constant> and
     <constant>CLSCTX_SERVER</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-null">
   <term>
    <constant>VT_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     NULL pointer reference.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-empty">
   <term>
    <constant>VT_EMPTY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A property with a type indicator of <constant>VT_EMPTY</constant> has
     no data associated with it; that is, the size of the value is zero.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-int">
   <term>
    <constant>VT_INT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     4-byte signed integer value (equivalent to
     <constant>VT_I4</constant>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i1">
   <term>
    <constant>VT_I1</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     1-byte signed integer.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i2">
   <term>
    <constant>VT_I2</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Two bytes representing a 2-byte signed integer value.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i4">
   <term>
    <constant>VT_I4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     4-byte signed integer value.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i8">
   <term>
    <constant>VT_I8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     8-byte signed integer value.
    </simpara>
    <simpara>
     Only on x64.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-uint">
   <term>
    <constant>VT_UINT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     4-byte unsigned integer (equivalent to
     <constant>VT_UI4</constant>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui1">
   <term>
    <constant>VT_UI1</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     1-byte unsigned integer.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui2">
   <term>
    <constant>VT_UI2</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     2-byte unsigned integer.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui4">
   <term>
    <constant>VT_UI4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     4-byte unsigned integer.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui8">
   <term>
    <constant>VT_UI8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     8-byte unsigned integer.
    </simpara>
    <simpara>
     x64 only
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-r4">
   <term>
    <constant>VT_R4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     32-bit IEEE floating point value.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-r8">
   <term>
    <constant>VT_R8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     64-bit IEEE floating point value.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-bool">
   <term>
    <constant>VT_BOOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Boolean value.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-error">
   <term>
    <constant>VT_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Error code; containing the status code associated with the
     error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-cy">
   <term>
    <constant>VT_CY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     8-byte two's complement integer (scaled by 10,000).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-date">
   <term>
    <constant>VT_DATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A 64-bit floating point number representing the number of days
     (not seconds) since <literal>December 31, 1899</literal>.
     For example, <literal>January 1, 1900</literal> is <literal>2.0</literal>,
     <literal>January 2, 1900</literal> is <literal>3.0</literal>, etc.
     This is stored in the same representation as <constant>VT_R8</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-bstr">
   <term>
    <constant>VT_BSTR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Pointer to a null-terminated Unicode string.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-decimal">
   <term>
    <constant>VT_DECIMAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A decimal structure.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-unknown">
   <term>
    <constant>VT_UNKNOWN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A pointer to an object that implements the IUnknown interface.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-dispatch">
   <term>
    <constant>VT_DISPATCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A pointer to a pointer to an object was specified.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-variant">
   <term>
    <constant>VT_VARIANT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A type indicator followed by the corresponding value.
     <constant>VT_VARIANT</constant> can be used only with
     <constant>VT_BYREF</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-array">
   <term>
    <constant>VT_ARRAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     If the type indicator is combined with
     <constant>VT_ARRAY</constant> by an OR operator, the value is a pointer to a
     <literal>SAFEARRAY</literal>. <constant>VT_ARRAY</constant>
     can use the OR with the following data types: <constant>VT_I1</constant>,
     <constant>VT_UI1</constant>, <constant>VT_I2</constant>, <constant>VT_UI2</constant>,
     <constant>VT_I4</constant>, <constant>VT_UI4</constant>, <constant>VT_INT</constant>,
     <constant>VT_UINT</constant>, <constant>VT_R4</constant>, <constant>VT_R8</constant>,
     <constant>VT_BOOL</constant>, <constant>VT_DECIMAL</constant>, <constant>VT_ERROR</constant>,
     <constant>VT_CY</constant>, <constant>VT_DATE</constant>, <constant>VT_BSTR</constant>,
     <constant>VT_DISPATCH</constant>, <constant>VT_UNKNOWN</constant> and
     <constant>VT_VARIANT</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-byref">
   <term>
    <constant>VT_BYREF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     If the type indicator is combined with <constant>VT_BYREF</constant>
     by an OR operator, the value is a reference. Reference types are
     interpreted as a reference to data, similar to the reference type in
     C++.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-acp">
   <term>
    <constant>CP_ACP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Default to ANSI code page.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-maccp">
   <term>
    <constant>CP_MACCP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Macintosh code page.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-oemcp">
   <term>
    <constant>CP_OEMCP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Default to OEM code page.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-utf7">
   <term>
    <constant>CP_UTF7</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Unicode (UTF-7).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-utf8">
   <term>
    <constant>CP_UTF8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Unicode (UTF-8).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-symbol">
   <term>
    <constant>CP_SYMBOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <literal>SYMBOL</literal> translations.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-thread-acp">
   <term>
    <constant>CP_THREAD_ACP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Current thread's ANSI code page
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-lt">
   <term>
    <constant>VARCMP_LT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The left <literal>bstr</literal> is less than right
     <literal>bstr</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-eq">
   <term>
    <constant>VARCMP_EQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The two parameters are equal.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-gt">
   <term>
    <constant>VARCMP_GT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The left <literal>bstr</literal> is greater than right
     <literal>bstr</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-null">
   <term>
    <constant>VARCMP_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Either expression is NULL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorecase">
   <term>
    <constant>NORM_IGNORECASE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignore case sensitivity.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorenonspace">
   <term>
    <constant>NORM_IGNORENONSPACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignore nonspacing characters.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignoresymbols">
   <term>
    <constant>NORM_IGNORESYMBOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignore symbols.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorewidth">
   <term>
    <constant>NORM_IGNOREWIDTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignore string width.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorekanatype">
   <term>
    <constant>NORM_IGNOREKANATYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignore Kana type.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorekashida">
   <term>
    <constant>NORM_IGNOREKASHIDA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignore Arabic kashida characters.
    </simpara>
    <simpara>
     Availability is dependent upon under lying library.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-divbyzero">
   <term>
    <constant>DISP_E_DIVBYZERO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A return error that indicates a divide by zero error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-overflow">
   <term>
    <constant>DISP_E_OVERFLOW</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     An error that indicates that a value could not be coerced to
     its expected representation.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-badindex">
   <term>
    <constant>DISP_E_BADINDEX</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     An error that indicates that an array index does not exist.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-paramnotfound">
   <term>
    <constant>DISP_E_PARAMNOTFOUND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     A return value that indicates that one of the parameter IDs
     does not correspond to a parameter on the method.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mk-e-unavailable">
   <term>
    <constant>MK_E_UNAVAILABLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     iMoniker COM status code, return on errors where the function call
     failed due to unavailability.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.locale-neutral">
   <term>
    <constant>LOCALE_NEUTRAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The neutral locale. This constant is generally not used when calling NLS APIs.
     Instead, use LOCALE_SYSTEM_DEFAULT.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.locale-system-default">
   <term>
    <constant>LOCALE_SYSTEM_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     The default locale for the operating system.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5.2.1 $ -->
<!-- splitted from ./en/functions/com.xml, last change in rev 1.7 -->
 <refentry xml:id="function.com-invoke" xmlns="http://docbook.org/ns/docbook">
  <refnamediv>
   <refname>com_invoke</refname>
   <refpurpose>
    Calls a COM component's method [deprecated]
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>mixed</type><methodname>com_invoke</methodname>
     <methodparam><type>resource</type><parameter>com_object</parameter></methodparam>
     <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
     <methodparam choice="opt"><type>mixed</type><parameter>function_parameters</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>com_invoke</function> invokes the method 
    named <parameter>function_name</parameter> of the COM
    component referenced by <parameter>com_object</parameter>. 
    <function>com_invoke</function> returns &false; on error, 
    returns the <parameter>function_name</parameter>'s return 
    value on success. All the extra parameters 
    <parameter>function_parameters</parameter> are passed to 
    the method <parameter>function_name</parameter>.
   </para>
   <para>
    <example>
     <title>Don't use com_invoke(), use OO syntax instead</title>
     <programlisting role="php">
<![CDATA[
<?php 
// do this
$val = $obj->method($one, $two);
// instead of this:
$val = com_invoke($obj, 'method', $one, $two);
?>
]]>
     </programlisting>
    </example>
   </para>

   &com.use-oo-instead;
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

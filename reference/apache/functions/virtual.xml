<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- splitted from ./en/functions/apache.xml, last change in rev 1.20 -->
<refentry xml:id="function.virtual" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>virtual</refname>
  <refpurpose>Perform an Apache sub-request</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>virtual</methodname>
   <methodparam><type>string</type><parameter>uri</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>virtual</function> is an Apache-specific function which
   is similar to <literal>&lt;!--#include virtual...--&gt;</literal> in
   <literal>mod_include</literal>.
   It performs an Apache sub-request.  It is useful for including
   CGI scripts or <filename>.shtml</filename> files, or anything else that you would
   parse through Apache. Note that for a CGI script, the script
   must generate valid CGI headers.  At the minimum that means it
   must generate a <literal>Content-Type</literal> header.
  </para>
  <para>
   To run the sub-request, all buffers are terminated and flushed to the
   browser, pending headers are sent too.
  </para>
  &apache.req.module;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>uri</parameter></term>
     <listitem>
      <para>
       The file that the virtual command will be performed on.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Performs the virtual command on success, or returns &false; on failure.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   See <function>apache_note</function> for an example.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    The query string can be passed to the included file but
    <varname>$_GET</varname> is copied from the parent script and only
    <varname>$_SERVER['QUERY_STRING']</varname> is filled with the passed
    query string. The query string may only be passed when using Apache 2.
    The requested file will not be listed in the Apache access log.
   </para>
  </warning>
  <note>
   <para>
    Environment variables set in the requested file are not visible to the
    calling script.
   </para>
  </note>
  <note>
   <para>
    This function may be used on PHP files. However, it is typically better
    to use <function>include</function> or <function>require</function> for
    PHP files.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>apache_note</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

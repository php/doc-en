<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.udm-alloc-agent">
 <refnamediv>
  <refname>udm_alloc_agent</refname>
  <refpurpose>Allocate mnoGoSearch session</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>udm_alloc_agent</methodname>
   <methodparam><type>string</type><parameter>dbaddr</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>dbmode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Allocate a mnoGoSearch session.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dbaddr</parameter></term>
     <listitem>
      <para>
       <parameter>dbaddr</parameter> - URL-style database description, with
       options (type, host, database name, port, user and password) to connect
       to SQL database. Do not matter for built-in text files support. Format for
       <parameter>dbaddr</parameter>:
       <literal>DBType:[//[DBUser[:DBPass]@]DBHost[:DBPort]]/DBName/</literal>.
       Currently supported DBType values are: mysql, pgsql, msql, solid, mssql, oracle,
       and ibase. Actually, it does not matter for native libraries support, but
       ODBC users should specify one of the supported values. If your database
       type is not supported, you may use <literal>unknown</literal> instead.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dbmode</parameter></term>
     <listitem>
      <para>
       <parameter>dbmode</parameter> - You may select the SQL database mode of
       words storage. Possible values of <parameter>dbmode</parameter> are:
       <literal>single</literal>, <literal>multi</literal>, <literal>crc</literal>,
       or <literal>crc-multi</literal>. When <literal>single</literal> is
       specified, all words are stored in the same table. If <literal>multi
       </literal> is selected, words will be located in different tables depending
       of their lengths. "multi" mode is usually faster, but requires more tables
       in the database. If "crc" mode is selected, mnoGoSearch will store 32 bit
       integer word IDs calculated by CRC32 algorithm instead of words. This mode
       requires less disk space and it is faster comparing with "single" and
       "multi" modes. <literal>crc-multi</literal> uses the same storage structure
       with the "crc" mode, but also stores words in different tables depending on
       words lengths like in "multi" mode.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <note>
   <para>
    <parameter>dbaddr</parameter> and <parameter>dbmode</parameter> must match
    those used during indexing.
   </para>
  </note>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a mnogosearch agent identifier on success, &false; on failure. This
   function creates a session with database parameters.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    In fact this function does not open a connection to the database and
    thus does not check the entered login and password. Establishing a
    connection to the database and login/password verification is done by
    <function>udm_find</function>.
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

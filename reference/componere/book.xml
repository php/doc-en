<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<book xml:id="book.componere" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns:xi="http://www.w3.org/2001/XInclude">
 <?phpdoc extension-membership="pecl" ?>
 <title>Componere</title>
 <titleabbrev>Componere</titleabbrev>

 <preface xml:id="intro.componere">
  &reftitle.intro;
  <para>
   Componere <subscript>(latin, English: compose)</subscript> targets production environments and provides an API for 
   composition of classes, monkey patching, and casting.
  </para>
   <formalpara>
    <title>Composition:</title>
    <para>
     <classname>Componere\Definition</classname> is used to define (or redefine) a class at runtime; 
     The class can then be registered, and in the case of redefinition it replaces the original class 
     for as long as the <classname>Componere\Definition</classname> exists.
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.componere-definition')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    </para>
   </formalpara>

   <formalpara>
    <title>Patching:</title>
    <para>
     <classname>Componere\Patch</classname> is used to change the class of a specific instance of an object at runtime; 
     Upon application the patch will remain applied for as long as the <classname>Componere\Patch</classname> exists, and can be reverted explicitly.
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.componere-patch')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    </para>
  </formalpara>

  <formalpara>
    <title>Casting:</title>
    <para>
     <classname>Componere\</classname> casting functions can cast among user defined compatible types;
     Where compatible means <classname>Type</classname> is sub or super to the type of <parameter>object</parameter>.
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('componere.cast')/db:refsect1[@role='description']/descendant::db:methodsynopsis)" />
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('componere.cast_by_ref')/db:refsect1[@role='description']/descendant::db:methodsynopsis)" />
    </para>
  </formalpara>

 </preface>

 &reference.componere.setup;
 &reference.componere.componere.abstract.definition;
 &reference.componere.componere.definition;
 &reference.componere.componere.patch;
 &reference.componere.componere.method;
 &reference.componere.componere.value;
 &reference.componere.reference;
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

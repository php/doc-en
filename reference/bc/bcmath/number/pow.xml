<?xml version="1.0" encoding="utf-8"?>
<refentry xml:id="bcmath-number.pow" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>BcMath\Number::pow</refname>
  <refpurpose>Raises an arbitrary precision number</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="BcMath\\Number">
   <modifier>public</modifier> <type>BcMath\Number</type><methodname>BcMath\Number::pow</methodname>
   <methodparam><type class="union"><type>BcMath\Number</type><type>string</type><type>int</type></type><parameter>exponent</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>scale</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Raises <varname>$this</varname> to the <parameter>exponent</parameter> power.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>exponent</parameter></term>
    <listitem>
     <simpara>
       The exponent. Must be a value with no fractional part.
       The valid range of the <parameter>exponent</parameter> is platform specific,
       but it is at least <literal>-2147483648</literal> to <literal>2147483647</literal>.
     </simpara>
    </listitem>
   </varlistentry>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('bcmath-number.add')/db:refsect1[@role='parameters']/descendant::db:varlistentry[2])" />
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Returns the result of power as a new <classname>BcMath\Number</classname> object.
  </simpara>
  <para>
   When the <property>BcMath\Number::scale</property> of the result object is automatically set,
   depending on the value of <parameter>exponent</parameter>, the <property>BcMath\Number::scale
   </property> of result will be as follows:
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry><parameter>exponent</parameter></entry>
       <entry><property>BcMath\Number::scale</property> of result</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>positive</entry>
       <entry>(<property>BcMath\Number::scale</property> of power base) * (<parameter>exponent</parameter>'s value)</entry>
      </row>
      <row>
       <entry><literal>0</literal></entry>
       <entry><literal>0</literal></entry>
      </row>
      <row>
       <entry>negative</entry>
       <entry>Between (<property>BcMath\Number::scale</property> of power base) and (<property>BcMath\Number::scale
       </property> of power base + <literal>10</literal>)</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
  <simpara>
   If an indivisible division occurs due to a negative <parameter>exponent</parameter>, the <property>
   BcMath\Number::scale</property> of the result is expanded. Expansion is done only as needed, up to
   a maximum of <literal>+10</literal>.
   This behavior is the same as <methodname>BcMath\Number::div</methodname>, so please see that for details.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   This method throws a <exceptionname>ValueError</exceptionname> in the following cases:
   <simplelist>
    <member><parameter>exponent</parameter> is <type>string</type> and not a well-formed BCMath numeric string</member>
    <member><parameter>exponent</parameter> has a fractional part</member>
    <member><parameter>exponent</parameter> or <parameter>scale</parameter> is outside the valid range</member>
    <member><property>BcMath\Number::scale</property> of the result object is outside the valid range</member>
   </simplelist>
  </para>
  <simpara>
   This method throws a <exceptionname>DivisionByZeroError</exceptionname> exception if <varname>$this</varname>'s value
   is <literal>0</literal> and <parameter>exponent</parameter> is a negative value.
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>BcMath\Number::pow</methodname> example when <parameter>scale</parameter> is not specified</title>
   <programlisting role="php">
<![CDATA[
<?php
$number = new BcMath\Number('3.0');

$ret1 = $number->pow(new BcMath\Number('5'));
$ret2 = $number->pow('-1');
$ret3 = $number->pow(0);

var_dump($number, $ret1, $ret2, $ret3);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#1 (2) {
  ["value"]=>
  string(3) "3.0"
  ["scale"]=>
  int(1)
}
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(9) "243.00000"
  ["scale"]=>
  int(5)
}
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(13) "0.33333333333"
  ["scale"]=>
  int(11)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(1) "1"
  ["scale"]=>
  int(0)
}
]]>
   </screen>
  </example>

  <example>
   <title><methodname>BcMath\Number::pow</methodname> example of explicitly specifying <parameter>scale</parameter></title>
   <programlisting role="php">
<![CDATA[
<?php
$number = new BcMath\Number('3.0');

$ret1 = $number->pow(new BcMath\Number('5'), 0);
$ret2 = $number->pow('-1', 2);
$ret3 = $number->pow(0, 10);

var_dump($number, $ret1, $ret2, $ret3);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#1 (2) {
  ["value"]=>
  string(3) "3.0"
  ["scale"]=>
  int(1)
}
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(3) "243"
  ["scale"]=>
  int(0)
}
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(4) "0.33"
  ["scale"]=>
  int(2)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(12) "1.0000000000"
  ["scale"]=>
  int(10)
}
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>bcpow</function></member>
   <member><methodname>BcMath\Number::powmod</methodname></member>
   <member><methodname>BcMath\Number::mul</methodname></member>
   <member><methodname>BcMath\Number::sqrt</methodname></member>
   <member><methodname>BcMath\Number::div</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

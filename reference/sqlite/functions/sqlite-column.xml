<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.sqlite-column" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sqlite_column</refname>
  <refname>SQLiteResult::column</refname>
  <refname>SQLiteUnbuffered::column</refname>
  <refpurpose>Fetches a column from the current row of a result set</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>sqlite_column</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>index_or_name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>decode_binary</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>mixed</type><methodname>SQLiteResult::column</methodname>
   <methodparam><type>mixed</type><parameter>index_or_name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>decode_binary</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>mixed</type><methodname>SQLiteUnbuffered::column</methodname>
   <methodparam><type>mixed</type><parameter>index_or_name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>decode_binary</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Fetches the value of a column named <parameter>index_or_name</parameter>
   (if it is a string), or of the ordinal column numbered
   <parameter>index_or_name</parameter> (if it is an integer) from the
   current row of the query result handle <parameter>result</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       The SQLite result resource.  This parameter is not required when using
       the object-oriented method.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>index_or_name</parameter></term>
     <listitem>
      <para>
       The column index or name to fetch.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>decode_binary</parameter></term>
     <listitem>
      &sqlite.decode-bin;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the column value.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Use this function when you are iterating a large result set with many
    columns, or with columns that contain large amounts of data.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_fetch_string</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->

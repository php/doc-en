<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="splfileobject.fgetcsv" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>SplFileObject::fgetcsv</refname>
  <refpurpose>Gets line from file and parse as CSV fields</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SplFileObject">
   <modifier>public</modifier> <type class="union"><type>array</type><type>false</type></type><methodname>SplFileObject::fgetcsv</methodname>
   <methodparam choice="opt"><type>string</type><parameter>separator</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Gets a line from the file which is in <acronym>CSV</acronym> format and returns an array containing the fields read.
  </para>
  <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.fgetcsv')/db:refsect1[@role='description']//db:note/.)">
   <xi:fallback/>
  </xi:include>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       The field delimiter (one single-byte character only).
       By default <literal>,</literal> or the value set by a prior call to
       <methodname>SplFileObject::setCsvControl</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       The field enclosure character (one single-byte character only).
       By default <literal>"</literal> or the value set by a prior call to
       <methodname>SplFileObject::setCsvControl</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       The escape character (at most one single-byte character).
       By default <literal>\</literal> or the value set by a prior call to
       <methodname>SplFileObject::setCsvControl</methodname>.
       An empty string (<literal>""</literal>) disables the proprietary escape mechanism.
      </para>
      <note>
       <simpara>
        Usually an <parameter>enclosure</parameter> character is escaped inside
        a field by doubling it; however, the <parameter>escape</parameter>
        character can be used as an alternative. So for the default parameter
        values <literal>""</literal> and <literal>\"</literal> have the same
        meaning. Other than allowing to escape the
        <parameter>enclosure</parameter> character the
        <parameter>escape</parameter> character has no special meaning; it isn't
        even meant to escape itself.
       </simpara>
      </note>
      <warning>
       <simpara>
        As of PHP 8.4.0, depending on the default value of
        <parameter>escape</parameter> is deprecated.
        It needs to be provided explicitly either positionally or by the use
        of <link linkend="functions.named-arguments">Named Arguments</link>,
        or by a call to <methodname>SplFileObject::setCsvControl</methodname>.
       </simpara>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  &warning.csv.escape-parameter;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an indexed array containing the fields read, or &false; on error.
  </para>
  <note>
   <para>
    A blank line in a CSV file will be returned as an array
    comprising a single &null; field unless using <constant>SplFileObject::SKIP_EMPTY | SplFileObject::DROP_NEW_LINE</constant>, 
    in which case empty lines are skipped.
   </para>
  </note>
 </refsect1>

 <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.fgetcsv')/db:refsect1[@role='errors']/.)">
  <xi:fallback/>
 </xi:include>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.fgetcsv')/db:refsect1[@role='changelog']//db:row[db:entry[text()='8.4.0']]/.)">
       <xi:fallback/>
      </xi:include>
      <row>
       <entry>7.4.0</entry>
       <entry>
        The <parameter>escape</parameter> parameter now also accepts an empty
        string to disable the proprietary escape mechanism.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>SplFileObject::fgetcsv</methodname> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = new SplFileObject("data.csv");
while (!$file->eof()) {
    var_dump($file->fgetcsv());
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><constant>SplFileObject::READ_CSV</constant> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = new SplFileObject("animals.csv");
$file->setFlags(SplFileObject::READ_CSV);
foreach ($file as $row) {
    list($animal, $class, $legs) = $row;
    printf("A %s is a %s with %d legs\n", $animal, $class, $legs);
}
?>
]]>
    </programlisting>
    <para>Contents of animals.csv</para>
    <programlisting role="txt">
<![CDATA[
crocodile,reptile,4
dolphin,mammal,0
duck,bird,2
koala,mammal,4
salmon,fish,0
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
A crocodile is a reptile with 4 legs
A dolphin is a mammal with 0 legs
A duck is a bird with 2 legs
A koala is a mammal with 4 legs
A salmon is a fish with 0 legs
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SplFileObject::fputcsv</methodname></member>
   <member><methodname>SplFileObject::setCsvControl</methodname></member>
   <member><methodname>SplFileObject::getCsvControl</methodname></member>
   <member><methodname>SplFileObject::setFlags</methodname></member>
   <member><constant>SplFileObject::READ_CSV</constant></member>
   <member><methodname>SplFileObject::current</methodname></member>
   <member><function>fputcsv</function></member>
   <member><function>fgetcsv</function></member>
   <member><function>str_getcsv</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

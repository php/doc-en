<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="splfileobject.fputcsv" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>SplFileObject::fputcsv</refname>
  <refpurpose>Write a field array as a CSV line</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SplFileObject">
   <modifier>public</modifier> <type class="union"><type>int</type><type>false</type></type><methodname>SplFileObject::fputcsv</methodname>
   <methodparam><type>array</type><parameter>fields</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>separator</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>eol</parameter><initializer>"\n"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Writes the <parameter>fields</parameter> array to the file
   as a <acronym>CSV</acronym> line.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>fields</parameter></term>
    <listitem>
     <para>
      An array of values.
     </para>
    </listitem>
   </varlistentry>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('splfileobject.fgetcsv')/db:refsect1[@role='parameters']//db:varlistentry[db:term[db:parameter[text()='separator']]]/.)">
    <xi:fallback/>
   </xi:include>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('splfileobject.fgetcsv')/db:refsect1[@role='parameters']//db:varlistentry[db:term[db:parameter[text()='enclosure']]]/.)">
    <xi:fallback/>
   </xi:include>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('splfileobject.fgetcsv')/db:refsect1[@role='parameters']//db:varlistentry[db:term[db:parameter[text()='escape']]]/.)">
    <xi:fallback/>
   </xi:include>
   <varlistentry>
    <term><parameter>eol</parameter></term>
    <listitem>
     <para>
      The optional <parameter>eol</parameter> parameter sets
      a custom End of Line sequence.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  &warning.csv.escape-parameter;
  <note>
   <para>
    If an <parameter>enclosure</parameter> character is contained in a field,
    it will be escaped by doubling it, unless it is immediately preceded by an
    <parameter>escape</parameter>.
   </para>
  </note> 
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the length of the written string&return.falseforfailure;.
  </para>
 </refsect1>

 <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.fgetcsv')/db:refsect1[@role='errors']/.)">
  <xi:fallback/>
 </xi:include>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.fgetcsv')/db:refsect1[@role='changelog']//db:row[db:entry[text()='8.4.0']]/.)">
       <xi:fallback/>
      </xi:include>
      <row>
       <entry>8.1.0</entry>
       <entry>
        The optional <parameter>eol</parameter> parameter has been added.
       </entry>
      </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        The <parameter>escape</parameter> parameter now also accepts an empty
        string to disable the proprietary escape mechanism.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="splfileobject.fputcsv.examples.basic">
    <title><methodname>SplFileObject::fputcsv</methodname> example</title>
    <programlisting role="php">
<![CDATA[
<?php

$list = array (
    array('aaa', 'bbb', 'ccc', 'dddd'),
    array('123', '456', '789'),
    array('"aaa"', '"bbb"')
);

$file = new SplFileObject('file.csv', 'w');

foreach ($list as $fields) {
    $file->fputcsv($fields);
}

?>
]]>
    </programlisting>
    <para>The above example will write the following to <literal>file.csv</literal>:</para>
    <screen>
<![CDATA[
aaa,bbb,ccc,dddd
123,456,789
"""aaa""","""bbb"""

]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SplFileObject::fgetcsv</methodname></member>
   <member><methodname>SplFileObject::setCsvControl</methodname></member>
   <member><methodname>SplFileObject::getCsvControl</methodname></member>
   <member><function>fputcsv</function></member>
   <member><function>fgetcsv</function></member>
   <member><function>str_getcsv</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.1.2.1 $ -->
<refentry xml:id="arrayobject.getiterator" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ArrayObject::getIterator</refname>
  <refpurpose>Create a new iterator from an ArrayObject instance</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  <title>Description</title>
  <methodsynopsis>
   <type>ArrayIterator</type><methodname>ArrayObject::getIterator</methodname>
   <void/>
  </methodsynopsis>
  <para>
   This function will return an iterator from an ArrayObject.
  </para>
  <para>
   <example>
    <title><function>ArrayObject::getIterator</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$array = array('1' => 'one',
               '2' => 'two',
               '3' => 'three');

$arrayobject = new ArrayObject($array);

$iterator = $arrayobject->getIterator();

while($iterator->valid()) {
    echo $iterator->key() . ' => ' . $iterator->current() . "\n";

    $iterator->next();
}
?>
]]>
    </programlisting>
    <para>
     The above example will output:
    </para>
    <screen>
<![CDATA[
1 => one
2 => two
3 => three
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

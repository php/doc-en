<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.iterator-to-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>iterator_to_array</refname>
  <refpurpose>Copy the iterator into an array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>iterator_to_array</methodname>
   <methodparam><type>Traversable</type><parameter>iterator</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>preserve_keys</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Copy the elements of an iterator into an array.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>iterator</parameter></term>
     <listitem>
      <para>
       The iterator being copied.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>preserve_keys</parameter></term>
     <listitem>
      <para>
       Whether to use the iterator element keys as index.
      </para>
      <para>
       If a key is an <type>array</type> or
       <type>object</type>, a warning will be generated. &null; keys will be
       converted to an empty string, <type>float</type> keys will be
       truncated to their <type>int</type> counterpart,
       <type>resource</type> keys will generate a warning and be converted to
       their resource ID, and <type>bool</type> keys will be converted to
       integers.
      </para>
      <note>
       <para>
        If this parameter is not set or set to &true;, duplicate keys will be
        overwritten. The last value with a given key will be in the returned
        <type>array</type>. Set this parameter to &false; to get all the values
        in any case.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   An <type>array</type> containing the elements of the <parameter>iterator</parameter>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>iterator_to_array</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$iterator = new ArrayIterator(array('recipe'=>'pancakes', 'egg', 'milk', 'flour'));
var_dump(iterator_to_array($iterator, true));
var_dump(iterator_to_array($iterator, false));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(4) {
  ["recipe"]=>
  string(8) "pancakes"
  [0]=>
  string(3) "egg"
  [1]=>
  string(4) "milk"
  [2]=>
  string(5) "flour"
}
array(4) {
  [0]=>
  string(8) "pancakes"
  [1]=>
  string(3) "egg"
  [2]=>
  string(4) "milk"
  [3]=>
  string(5) "flour"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

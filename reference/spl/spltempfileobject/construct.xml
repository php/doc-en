<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="spltempfileobject.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SplTempFileObject::__construct</refname>
  <refpurpose>Construct a new temporary file object</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>SplTempFileObject::__construct</methodname>
   <methodparam choice="opt"><type>int</type><parameter>maxMemory</parameter><initializer>2 * 1024 * 1024</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Construct a new temporary file object.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>maxMemory</parameter></term>
     <listitem>
      <para>
       The maximum amount of memory (in bytes, default is 2 MB) for 
       the temporary file to use. If the temporary file exceeds this 
       size, it will be moved to a file in the system's temp directory.
      </para>
      <para>
       If <parameter>maxMemory</parameter> is negative, only memory
       will be used. If <parameter>maxMemory</parameter> is zero, 
       no memory will be used.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Throws a <classname>RuntimeException</classname> if an error occurs.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>SplTempFileObject</methodname> example</title>
    <para>This example writes a temporary file in memory which can be written to and read from.</para>
    <programlisting role="php">
<![CDATA[
<?php
$temp = new SplTempFileObject();
$temp->fwrite("This is the first line\n");
$temp->fwrite("And this is the second.\n");
echo "Written " . $temp->ftell() . " bytes to temporary file.\n\n";

// Rewind and read what was written
$temp->rewind();
foreach ($temp as $line) {
    echo $line;
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Written 47 bytes to temporary file.

This is the first line
And this is the second.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><classname>SplFileObject</classname></member>
    <member>
     <link linkend="wrappers.php">PHP input/output streams</link> 
     (for <literal>php://temp</literal> and <literal>php://memory</literal>)
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

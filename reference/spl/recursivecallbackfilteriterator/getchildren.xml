<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="recursivecallbackfilteriterator.getchildren" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RecursiveCallbackFilterIterator::getChildren</refname>
  <refpurpose>Return the inner iterator's children contained in a RecursiveCallbackFilterIterator</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="RecursiveCallbackFilterIterator">
   <modifier>public</modifier> <type>RecursiveCallbackFilterIterator</type><methodname>RecursiveCallbackFilterIterator::getChildren</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Fetches the filtered children of the inner iterator.
  </para>
  <para>
   <methodname>RecursiveCallbackFilterIterator::hasChildren</methodname> should be used
   to determine if there are children to be fetched.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a <classname>RecursiveCallbackFilterIterator</classname> containing
   the children.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="recursivecallbackfilteriterator.examples">RecursiveCallbackFilterIterator Examples</link></member>
    <member><methodname>RecursiveCallbackFilterIterator::__construct</methodname></member>
    <member><methodname>RecursiveCallbackFilteriterator::hasChildren</methodname></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

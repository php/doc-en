<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<phpdoc:classref xml:id="class.spldoublylinkedlist" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>The SplDoublyLinkedList class</title>
 <titleabbrev>SplDoublyLinkedList</titleabbrev>
 
 <partintro>
 
<!-- {{{ spldoublylinkedlist intro -->
  <section xml:id="spldoublylinkedlist.intro">
   &reftitle.intro;
   <para>
    The SplDoublyLinkedList class provides the main functionalities of a doubly linked list.
   </para>
  </section>
<!-- }}} -->
 
  <section xml:id="spldoublylinkedlist.synopsis">
   &reftitle.classsynopsis;
 
<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>SplDoublyLinkedList</classname>
    </ooclass>

    <classsynopsisinfo>
     <ooclass>
      <classname>SplDoublyLinkedList</classname>
     </ooclass>

     <oointerface>
      <interfacename>Iterator</interfacename>
     </oointerface>

     <oointerface>
      <interfacename>Countable</interfacename>
     </oointerface>

     <oointerface>
      <interfacename>ArrayAccess</interfacename>
     </oointerface>

     <oointerface>
      <interfacename>Serializable</interfacename>
     </oointerface>
    </classsynopsisinfo>
 
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="spldoublylinkedlist.constants.it-mode-lifo">SplDoublyLinkedList::IT_MODE_LIFO</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="spldoublylinkedlist.constants.it-mode-fifo">SplDoublyLinkedList::IT_MODE_FIFO</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="spldoublylinkedlist.constants.it-mode-delete">SplDoublyLinkedList::IT_MODE_DELETE</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="spldoublylinkedlist.constants.it-mode-keep">SplDoublyLinkedList::IT_MODE_KEEP</varname>
     <initializer>0</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.spldoublylinkedlist')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
 
  </section>

<!-- {{{ SplDoublyLinkedList constants -->
  <section xml:id="spldoublylinkedlist.constants">
   &reftitle.constants;
   <section xml:id="spldoublylinkedlist.constants.iteration-direction">
    <title>Iteration Direction</title>
    <variablelist>

     <varlistentry xml:id="spldoublylinkedlist.constants.it-mode-lifo">
      <term><constant>SplDoublyLinkedList::IT_MODE_LIFO</constant></term>
      <listitem>
       <para>
        The list will be iterated in a last in, first out order, like a stack.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="spldoublylinkedlist.constants.it-mode-fifo">
      <term><constant>SplDoublyLinkedList::IT_MODE_FIFO</constant></term>
      <listitem>
       <para>
        The list will be iterated in a first in, first out order, like a queue.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>

   <section xml:id="spldoublylinkedlist.constants.iteration-behavior">
    <title>Iteration Behavior</title>
    <variablelist>

     <varlistentry xml:id="spldoublylinkedlist.constants.it-mode-delete">
      <term><constant>SplDoublyLinkedList::IT_MODE_DELETE</constant></term>
      <listitem>
       <para>
        Iteration will remove the iterated elements.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="spldoublylinkedlist.constants.it-mode-keep">
      <term><constant>SplDoublyLinkedList::IT_MODE_KEEP</constant></term>
      <listitem>
       <para>
        Iteration will not remove the iterated elements.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
  </section>
<!-- }}} -->

<!-- {{{ spldoublylinkedlist properties
  <section xml:id="spldoublylinkedlist.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="spldoublylinkedlist.props.name">
     <term><varname>name</varname></term>
     <listitem>
      <para>Prop description</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
}}} -->
 
 </partintro>
 
 &reference.spl.entities.spldoublylinkedlist;
 
</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

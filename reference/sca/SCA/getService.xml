<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<refentry xml:id="sca.getservice" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SCA::getService</refname>
  <refpurpose>
   Obtain a proxy for a service
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type>
   <methodname>SCA::getService</methodname>
   <methodparam>
    <type>string</type>
    <parameter>target</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>string</type>
    <parameter>binding</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>array</type>
    <parameter>config</parameter>
   </methodparam>
  </methodsynopsis>

  &warn.experimental.func;

  <para> Examine the target and initialize and return a proxy of the appropriate
  sort. If the target is for a local PHP component the returned proxy will be an
  SCA_LocalProxy. If the target is for a WSDL file, the returned proxy will be a
  SCA_SoapProxy.</para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
  <variablelist>
    <varlistentry>
     <term>
      <parameter>target</parameter>
     </term>
     <listitem>
      <para> An absolute or relative path to the target service or service
      description (e.g. a URL to a json-rpc service description, a PHP
      component, a WSDL file, and so on.). A relative path, if specified,
      is resolved relative to the location of the script issuing the
       <function>getService</function> call, and not against the include_path
       or current working directory.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>binding</parameter>
     </term>
     <listitem>
      <para> The binding (i.e. protocol) to use to communicate with the service
      (e.g binding.jsonrpc for a json-rpc service).  Note, some service types
      can be deduced from the target parameter (e.g. if the target parameter
      ends in .wsdl then SCA will assume binding.soap).  Any binding which
      can be specified in an annotation can be specified here.  For example
      'binding.soap' is equivalent to the '@binding.soap' annotation.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>config</parameter>
     </term>
     <listitem>
      <para> Any additional configuration properties for the binding (e.g.
      array('location' => 'http://example.org')).  Any binding configuration
      which can be specified in an annotation can be specified here.  For
      example, 'location' is equivalent to the '@location' annotation to
      configure the location of a target soap service. </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The SCA_LocalProxy or SCA_SoapProxy.
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->


 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here
       <entry>Description of change
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>An <function>SCA::getService</function> example</title>
    <para>
    This example shows how to get a proxy to an email soap service described
    by <filename>EmailService.wsdl</filename> and located at
    <filename>http://example.org</filename>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
include 'SCA/SCA.php';
$service = SCA::getService('EmailService.wsdl', 'binding.soap', array('location' => 'http://example.org'));
$service->send(...);
?>
]]>
    </programlisting>
    &example.outputs;
   </example>
  </para>
 </refsect1>


 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

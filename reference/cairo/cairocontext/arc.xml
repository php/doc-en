<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="cairocontext.arc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoContext::arc</refname>
  <refname>cairo_arc</refname>
  <refpurpose>Adds a circular arc</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (method):</para>
   <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>CairoContext::arc</methodname>
   <methodparam><type>float</type><parameter>x</parameter></methodparam>
   <methodparam><type>float</type><parameter>y</parameter></methodparam>
   <methodparam><type>float</type><parameter>radius</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle1</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle2</parameter></methodparam>
   </methodsynopsis>
  <para>&style.procedural;:</para>
  <methodsynopsis>
   <type>void</type><methodname>cairo_arc</methodname>
   <methodparam><type>CairoContext</type><parameter>context</parameter></methodparam>
   <methodparam><type>float</type><parameter>x</parameter></methodparam>
   <methodparam><type>float</type><parameter>y</parameter></methodparam>
   <methodparam><type>float</type><parameter>radius</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle1</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle2</parameter></methodparam>
  </methodsynopsis>
  <para>
   Adds a circular arc of the given radius to the current path.
   The arc is centered at (<parameter>x</parameter>, <parameter>y</parameter>), begins at
   <parameter>angle1</parameter> and proceeds in the direction of increasing angles to end at
   <parameter>angle2</parameter>.
   If <parameter>angle2</parameter> is less than <parameter>angle1</parameter> it will be
   progressively increased by 2*M_PI until it is greater than <parameter>angle1</parameter>.

   If there is a current point, an initial line segment will be added to the path to connect the
   current point to the beginning of the arc. If this initial line is undesired,
   it can be avoided by calling <methodname>CairoContext::newSubPath</methodname> or procedural
   <function>cairo_new_sub_path</function> before calling <methodname>CairoContext::arc</methodname>
   or <function>cairo_arc</function>.

    Angles are measured in radians. An angle of 0.0 is in the direction of the positive X axis
    (in user space). An angle of M_PI/2.0 radians (90 degrees) is in the direction of the positive
    Y axis (in user space). Angles increase in the direction from the positive X axis toward the
    positive Y axis. So with the default transformation matrix, angles increase in a clockwise direction.

    (To convert from degrees to radians, use degrees * (M_PI / 180.).)
    This function gives the arc in the direction of increasing angles; see
    <methodname>CairoContext::arcNegative</methodname> or <function>cairo_arc_negative</function>
    to get the arc in the direction of decreasing angles.

    <!--
    The arc is circular in user space. To achieve an elliptical arc, you can scale the current
    transformation matrix by different amounts in the X and Y directions.
    For example, to draw an ellipse in the box given by x, y, width, height:
    -->
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       A valid CairoContext object
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       x position
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       y position
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>radius</parameter></term>
     <listitem>
      <para>
       Radius of the arc
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle1</parameter></term>
     <listitem>
      <para>
       start angle
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle2</parameter></term>
     <listitem>
      <para>
       end angle
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>&style.oop;</title>
    <programlisting role="php">
<![CDATA[
<?php

$s = new CairoImageSurface(CairoFormat::ARGB32, 100, 100);
$c = new CairoContext($s);

$c->setSourceRgb(0, 0, 0);
$c->paint();

$c->setLineWidth(1);
$c->setSourceRgb(1, 1, 1);

for ($r = 50; $r > 0; $r -= 10) {
 $c->arc(50, 50, $r, 0, 2 * M_PI);
 $c->stroke();
 $c->fill();
}

$s->writeToPng(dirname(__FILE__) . '/CairoContext__arc.png');
?>
]]>
     </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php

$s = cairo_image_surface_create(CAIRO_SURFACE_TYPE_IMAGE, 100, 100);
$c = cairo_create($s);

cairo_set_source_rgb($c, 0, 0, 0);
cairo_paint($c);

cairo_set_source_rgb($c, 1, 1, 1);
cairo_set_line_width($c, 1);

for ($r = 50; $r > 0; $r -= 10) {
 cairo_arc($c, 50, 50, $r, 0, 2 * M_PI);
 cairo_stroke($c);
 cairo_fill($c);
}

cairo_surface_write_to_png($s, dirname(__FILE__) . '/cairo_arc.png');
?>
]]>
     </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>CairoContext::arcNegative</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="cairocontext.clip" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoContext::clip</refname>
  <refname>cairo_clip</refname>
  <refpurpose>Establishes a new clip region</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (method):</para>
   <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>CairoContext::clip</methodname>
   <void />
   </methodsynopsis>
  <para>&style.procedural;:</para>
  <methodsynopsis>
   <type>void</type><methodname>cairo_clip</methodname>
   <methodparam><type>CairoContext</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <para>
   Establishes a new clip region by intersecting the current clip region with the current path as it
   would be filled by <methodname>CairoContext::fill</methodname> or <function>cairo_fill</function>
   and according to the current fill rule (see <methodname>CairoContext::setFillRule</methodname>
   or <function>cairo_set_fill_rule</function>).
  </para>
  <para>
    After <methodname>CairoContext::clip</methodname> or <function>cairo_clip</function>,
    the current path will be cleared from the cairo context.
  </para>
  <para>
    The current clip region affects all drawing operations by effectively masking out any changes
    to the surface that are outside the current clip region.
  </para>
  <para>
    Calling <methodname>CairoContext::clip</methodname> or <function>cairo_clip</function>
    can only make the clip region smaller, never larger. But the current clip is part of the
    graphics state, so a temporary restriction of the clip region can be achieved by calling
    <methodname>CairoContext::clip</methodname> or <function>cairo_clip</function> within a
    <methodname>CairoContext::save</methodname>/<methodname>CairoContext::restore</methodname> or
    <function>cairo_save</function>/<function>cairo_restore</function> pair.
    The only other means of increasing the size of the clip region is
    <methodname>CairoContext::resetClip</methodname> or procedural <function>cairo_reset_clip</function>.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       A valid CairoContext object
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>&style.oop;</title>
    <programlisting role="php">
<![CDATA[
<?php

$surface = new CairoImageSurface(CairoFormat::ARGB32, 50, 50);

$context = new CairoContext($surface);

$context->clip();

?>
]]>
     </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php

$surface = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, 50, 50);

$context = cairo_create($surface);

cairo_clip($context);

?>
]]>
     </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>CairoContext::resetClip</methodname></member>
    <member><function>cairo_reset_clip</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

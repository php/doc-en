<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<phpdoc:classref xml:id="class.cairocontext" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The CairoContext class</title>
 <titleabbrev>CairoContext</titleabbrev>

 <partintro>

<!-- {{{ CairoContext intro -->
  <section xml:id="cairocontext.intro">
   &reftitle.intro;
   <para>
    Context is the main object used when drawing with cairo. To draw with cairo, you create a
    <classname>CairoContext</classname>, set the target <classname>CairoSurface</classname>,
    and drawing options for the <classname>CairoContext</classname>, create shapes with functions .
    like <methodname>CairoContext::moveTo</methodname> and
    <methodname>CairoContext::lineTo</methodname>, and then draw shapes with
    <methodname>CairoContext::stroke</methodname> or <methodname>CairoContext::fill</methodname>.

    Contexts can be pushed to a stack via <methodname>CairoContext::save</methodname>.
    They may then safely be changed, without losing the current state. Use
    <methodname>CairoContext::restore</methodname>
    to restore to the saved state.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="cairocontext.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>CairoContext</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>CairoContext</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.cairocontext')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

 </partintro>

 &reference.cairo.entities.cairocontext;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.xml-parse" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>xml_parse</refname>
  <refpurpose>Start parsing an XML document</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>xml_parse</methodname>
   <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>is_final</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>xml_parse</function> parses an XML document. The handlers for
   the configured events are called as many times as necessary.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parser</parameter></term>
     <listitem>
      <para>
       A reference to the XML parser to use.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Chunk of data to parse.  A document may be parsed piece-wise by
       calling <function>xml_parse</function> several times with new data,
       as long as the <parameter>is_final</parameter> parameter is set and
       &true; when the last data is parsed.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_final</parameter></term>
     <listitem>
      <para>
       If set and &true;, <parameter>data</parameter> is the last piece of
       data sent in this parse.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns 1 on success or 0 on failure.
  </para>
  <para>
   For unsuccessful parses, error information can be retrieved with
   <function>xml_get_error_code</function>,
   <function>xml_error_string</function>,
   <function>xml_get_current_line_number</function>,
   <function>xml_get_current_column_number</function> and
   <function>xml_get_current_byte_index</function>.
  </para>
  <note>
   <para>
    Some errors (such as entity errors) are reported at the end of the data, thus only if
    <parameter>is_final</parameter> is set and &true;.
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &xml.changelog.parser-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="xml_parse.example.chunked">
   <title>Chunked parsing of large XML documents</title>
   <para>
     This example shows how large XML documents can be read and parsed in
     chunks, so that it not necessary to keep the whole document in memory.
     Error handling is omitted for brevity.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$stream = fopen('large.xml', 'r');
$parser = xml_parser_create();
// set up the handlers here
while (($data = fread($stream, 16384))) {
    xml_parse($parser, $data); // parse the current chunk
}
xml_parse($parser, '', true); // finalize parsing
xml_parser_free($parser);
fclose($stream);
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

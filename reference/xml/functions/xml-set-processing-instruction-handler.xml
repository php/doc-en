<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.xml-set-processing-instruction-handler" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>xml_set_processing_instruction_handler</refname>
  <refpurpose>
   Set up processing instruction (PI) handler
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>xml_set_processing_instruction_handler</methodname>
   <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
   <methodparam><type>callable</type><parameter>handler</parameter></methodparam>
  </methodsynopsis>
  <para>
   Sets the processing instruction (PI) handler function for the XML parser
   <parameter>parser</parameter>.
  </para>
  <para>
   A processing instruction has the following format:
   <informalexample>
    <programlisting>&lt;?<replaceable>target</replaceable> 
     <replaceable>data</replaceable>?&gt;
    </programlisting>
   </informalexample>
   You can put PHP code into such a tag, but be aware of one limitation: in
   an XML PI, the PI end tag (<literal>?&gt;</literal>) can not be quoted,
   so this character sequence should not appear in the PHP code you embed
   with PIs in XML documents.If it does, the rest of the PHP code, as well
   as the "real" PI end tag, will be treated as character data.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parser</parameter></term>
     <listitem>
      <para>
       A reference to the XML parser to set up processing instruction (PI) handler function.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>handler</parameter></term>
     <listitem>
      <para>
       <parameter>handler</parameter> is a string containing the name of a
       function that must exist when <function>xml_parse</function> is called
       for <parameter>parser</parameter>.
      </para>
      <para>
       The function named by <parameter>handler</parameter> must accept
       three parameters:
       <methodsynopsis>
        <methodname><replaceable>handler</replaceable></methodname>
        <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
        <methodparam><type>string</type><parameter>target</parameter></methodparam>
        <methodparam><type>string</type><parameter>data</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>parser</parameter></term>
         <listitem>
          <simpara>
           The first parameter, <replaceable>parser</replaceable>, is a
           reference to the XML parser calling the handler.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>target</parameter></term>
         <listitem>
          <simpara>
           The second parameter, <parameter>target</parameter>, contains the PI
           target.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>data</parameter></term>
         <listitem>
          <simpara>
           The third parameter, <parameter>data</parameter>, contains the PI
           data.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       If a handler function is set to an empty string, or &false;, the handler
       in question is disabled.
      </para>
      &note.func-callback;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
      &xml.changelog.parser-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

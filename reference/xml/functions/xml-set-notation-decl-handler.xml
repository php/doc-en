<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.xml-set-notation-decl-handler" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>xml_set_notation_decl_handler</refname>
  <refpurpose>Set up notation declaration handler</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>xml_set_notation_decl_handler</methodname>
   <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
   <methodparam><type>callable</type><parameter>handler</parameter></methodparam>
  </methodsynopsis>
  <para>
   Sets the notation declaration handler function for the XML parser
   <parameter>parser</parameter>.
  </para>
  <para>
   A notation declaration is part of the document's DTD and has the
   following format:    
   <programlisting role="xml">
<![CDATA[
<!NOTATION <parameter>name</parameter>
{ <parameter>systemId</parameter> | <parameter>publicId</parameter>?>
]]>
   </programlisting>
   See <link xlink:href="&url.rec-xml;#Notations">section 4.7 of the XML 1.0
   spec</link> for the definition of notation declarations.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parser</parameter></term>
     <listitem>
      <para>
       A reference to the XML parser to set up notation declaration handler function.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>handler</parameter></term>
     <listitem>
      <para>
       <parameter>handler</parameter> is a string containing the name of a
       function that must exist when <function>xml_parse</function> is called
       for <parameter>parser</parameter>.
      </para>
      <para>
       The function named by <parameter>handler</parameter> must accept
       five parameters:
       <methodsynopsis>
        <methodname><replaceable>handler</replaceable></methodname>
        <methodparam><type>XMLParser</type><parameter>parser</parameter></methodparam>
        <methodparam><type>string</type><parameter>notation_name</parameter></methodparam>
        <methodparam><type>string</type><parameter>base</parameter></methodparam>
        <methodparam><type>string</type><parameter>system_id</parameter></methodparam>
        <methodparam><type>string</type><parameter>public_id</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term>
          <parameter>parser</parameter>
         </term> 
         <listitem>
          <simpara>
           The first parameter, <replaceable>parser</replaceable>, is a
           reference to the XML parser calling the handler.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>notation_name</parameter></term>
         <listitem>
          <simpara>
           This is the notation's <parameter>name</parameter>, as per
           the notation format described above.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <parameter>base</parameter>
         </term>
         <listitem>
          <simpara>
           This is the base for resolving the system identifier
           (<parameter>system_id</parameter>) of the notation declaration.
           Currently this parameter will always be set to an empty string.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>system_id</parameter></term>
         <listitem>
          <simpara>
           System identifier of the external notation declaration.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <parameter>public_id</parameter>
         </term>
         <listitem>
          <simpara>
           Public identifier of the external notation declaration.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       If a handler function is set to an empty string, or &false;, the handler
       in question is disabled.
      </para>
      &note.func-callback;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
      &xml.changelog.parser-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

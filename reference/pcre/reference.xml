<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.18.2.2 $ -->
<!-- Purpose: basic.text -->
<!-- Membership: bundled -->

<book xml:id="ref.pcre" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Regular Expression Functions (Perl-Compatible)</title>
 <titleabbrev>PCRE</titleabbrev>   

 <preface xml:id="pcre.intro">
  &reftitle.intro;
  <para>
   The syntax for patterns used in these functions closely resembles
   Perl. The expression should be enclosed in the delimiters, a
   forward slash (/), for example.  Any character can be used for
   delimiter as long as it's not alphanumeric or backslash (\). If
   the delimiter character has to be used in the expression itself,
   it needs to be escaped by backslash. Since PHP 4.0.4, you can also use
   Perl-style (), {}, [], and &lt;&gt; matching delimiters.
   See <link linkend="reference.pcre.pattern.syntax">Pattern Syntax</link>
   for detailed explanation.
  </para>
  <para>
   The ending delimiter may be followed by various modifiers that
   affect the matching. 
   See <link linkend="reference.pcre.pattern.modifiers">Pattern
    Modifiers</link>.
  </para>
  <para>
   PHP also supports regular expressions using a POSIX-extended syntax
   using the <link linkend="ref.regex">POSIX-extended regex functions</link>.
  </para>
  <note>
   <para>
    This extension maintains a global per-thread cache of compiled regular
    expressions (up to 4096).
   </para>
  </note>
  <warning>
   <para>
    You should be aware of some limitations of PCRE. Read <link
     xlink:href="&url.pcre.man;">&url.pcre.man;</link> for more info.
   </para>
  </warning>
 </preface>

 <chapter xml:id="pcre.setup">
  <title>Installing/Configuring</title>

  <section xml:id="pcre.requirements">
   &reftitle.required;
   &no.requirement;
  </section>

  &reference.pcre.configure;

  &reference.pcre.ini;

  <section xml:id="pcre.resources">
   &reftitle.resources;
   &no.resource;
  </section>

 </chapter>

 &reference.pcre.constants;

 <appendix xml:id="pcre.examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Examples of valid patterns</title>
    <itemizedlist>
     <listitem><simpara><literal>/&lt;\/\w+&gt;/</literal></simpara></listitem>
     <listitem><simpara><literal>|(\d{3})-\d+|Sm</literal></simpara></listitem>
     <listitem><simpara><literal>/^(?i)php[34]/</literal></simpara></listitem>
     <listitem><simpara><literal>{^\s+(\s+)?$}</literal></simpara></listitem>
    </itemizedlist>
   </example>
  </para>
  <para>
   <example>
    <title>Examples of invalid patterns</title>
    <itemizedlist>
     <listitem>
      <simpara>
       <literal>/href='(.*)'</literal> - missing ending delimiter
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>/\w+\s*\w+/J</literal> - unknown modifier 'J'
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>1-\d3-\d3-\d4|</literal> - missing starting delimiter
      </simpara>
     </listitem>
    </itemizedlist>
   </example>
  </para>
 </appendix>

 <part xml:id="pcre.pattern">
  <title>PCRE Patterns</title>

  &reference.pcre.pattern.modifiers;
  &reference.pcre.pattern.syntax;

 </part>

 <reference xml:id="pcre.functions" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PCRE functions</title>

  &reference.pcre.functions.entities;

 </reference>
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


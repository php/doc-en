<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.snmpwalkoid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>snmpwalkoid</refname>
  <refpurpose>Query for a tree of information about a network entity
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>bool</type></type><methodname>snmpwalkoid</methodname>
   <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
   <methodparam><type>string</type><parameter>community</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>object_id</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retries</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>

  <para>
   <function>snmpwalkoid</function> function is used to read all object ids
   and their respective values from an SNMP agent specified by  
   <parameter>hostname</parameter>.
  </para>

  <para>
   The existence of <function>snmpwalkoid</function> and
   <function>snmpwalk</function> has historical reasons.  Both
   functions are provided for backward compatibility.
   Use <function>snmprealwalk</function> instead.
  </para> 
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hostname</parameter></term>
     <listitem>
      <para>
       The SNMP agent.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>community</parameter></term>
     <listitem>
      <para>
       The read community.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>object_id</parameter></term>
     <listitem>
      <para>
       If &null;, <parameter>object_id</parameter> is taken as the root of
       the SNMP objects tree and all objects under that tree are returned as
       an array. 
      </para>
      <para>
       If <parameter>object_id</parameter> is specified, all the SNMP objects
       below that <parameter>object_id</parameter> are returned.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       The number of microseconds until the first timeout.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>retries</parameter></term>
     <listitem>
      <para>
       The number of times to retry if timeouts occur.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an associative array with object ids and their respective
   object value starting from the <parameter>object_id</parameter>
   as root or &false; on error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para> 
   <example>
    <title><function>snmpwalkoid</function> Example</title>
    <programlisting role="php"> 
<![CDATA[
<?php
$a = snmpwalkoid("127.0.0.1", "public", ""); 
for (reset($a); $i = key($a); next($a)) {
    echo "$i: $a[$i]<br />\n";
}
?>
]]>
    </programlisting>
   </example>
  </para> 
  <para>
   Above function call would return all the SNMP objects from the
   SNMP agent running on localhost. One can step through the values
   with a loop
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>snmpwalk</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.ibase-set-event-handler">
 <refnamediv>
  <refname>ibase_set_event_handler</refname>
  <refpurpose>Register a callback function to be called when events are posted</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>ibase_set_event_handler</methodname>
   <methodparam><type>callable</type><parameter>event_handler</parameter></methodparam>
   <methodparam><type>string</type><parameter>event_name</parameter></methodparam>
   <methodparam rep="repeat"><type>string</type><parameter>even_names</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>resource</type><methodname>ibase_set_event_handler</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>callable</type><parameter>event_handler</parameter></methodparam>
   <methodparam><type>string</type><parameter>event_name</parameter></methodparam>
   <methodparam rep="repeat"><type>string</type><parameter>event_names</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function registers a PHP user function as event handler for the
   specified events. 
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>event_handler</parameter></term>
     <listitem>
      <para>
       The callback is called with the event name and the link resource as
       arguments whenever one of the specified events is posted by the
       database.
      </para>
      <para>
       The callback must return &false; if the event handler should be
       canceled. Any other return value is ignored. This function accepts up
       to 15 event arguments.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>event_name</parameter></term>
     <listitem>
      <para>
       An event name.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>event_names</parameter></term>
     <listitem>
      <para>
       At most 15 events allowed.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The return value is an event resource. This resource can be used to free
   the event handler using <function>ibase_free_event_handler</function>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>ibase_set_event_handler</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

function event_handler($event_name, $link)
{
    if ($event_name == "NEW ORDER") {
        // process new order
        ibase_query($link, "UPDATE orders SET status='handled'");
    } else if ($event_name == "DB_SHUTDOWN") {
        // free event handler
        return false;
    }
}

ibase_set_event_handler($link, "event_handler", "NEW_ORDER", "DB_SHUTDOWN");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ibase_free_event_handler</function></member>
    <member><function>ibase_wait_event</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

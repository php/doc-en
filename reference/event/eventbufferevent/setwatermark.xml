<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="eventbufferevent.setwatermark" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EventBufferEvent::setWatermark</refname>
  <refpurpose>Adjusts read and/or write watermarks</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <type>void</type>
   <methodname>EventBufferEvent::setWatermark</methodname>
   <methodparam>
    <type>int</type>
    <parameter>events</parameter>
   </methodparam>
   <methodparam>
    <type>int</type>
    <parameter>lowmark</parameter>
   </methodparam>
   <methodparam>
    <type>int</type>
    <parameter>highmark</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   Adjusts the read watermarks, the write
   <emphasis>watermarks</emphasis>
   , or both, of a single buffer event.
  </para>
  <para>
   A buffer event watermark is an edge, a value specifying number of bytes to
   be read or written before callback is invoked. By default every read/write
   event triggers a callback invokation. See
   <link
  xlink:href="http://www.wangafu.net/~nickm/libevent-book/Ref6_bufferevent.html#_callbacks_and_watermarks">Fast
 portable non-blocking network programming with Libevent: Callbacks and watermarks</link>
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>events</parameter>
    </term>
    <listitem>
     <para>
      Bitmask of
      <constant>Event::READ</constant>
      ,
      <constant>Event::WRITE</constant>
      , or both.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>lowmark</parameter>
    </term>
    <listitem>
     <para>
      Minimum watermark value.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>highmark</parameter>
    </term>
    <listitem>
     <para>
      Maximum watermark value.
      <literal>0</literal>
      means "unlimited".
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

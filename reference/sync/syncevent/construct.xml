<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="syncevent.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SyncEvent::__construct</refname>
  <refpurpose>Constructs a new SyncEvent object</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>SyncEvent::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>manual</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>prefire</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Constructs a named or unnamed event object.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>name</parameter></term>
    <listitem>
     <para>
      The name of the event if this is a named event object.
     </para>
     <note>
      <para>
       If the name already exists, it must be able to be opened by the current user
       that the process is running as or an exception will be thrown with a meaningless
       error message.
      </para>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>manual</parameter></term>
    <listitem>
     <para>
      Specifies whether or not the event object must be reset manually.
     </para>
     <note>
      <para>
       Manual reset event objects allow all waiting processes through until the
       object is reset.
      </para>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>prefire</parameter></term>
    <listitem>
     <para>
      Specifies whether or not to prefire (signal) the event object.
     </para>
     <note>
      <para>
       Only has impact if the calling process/thread is the first to create the object.
      </para>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The new <classname>SyncEvent</classname> object.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   An exception is thrown if the event object cannot be created or opened.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>SyncEvent::__construct</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
// In a web application:
$event = new SyncEvent("GetAppReport");
$event->fire();

// In a cron job:
$event = new SyncEvent("GetAppReport");
$event->wait();
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL sync 1.1.0</entry>
       <entry>
        <para>
         Added <parameter>prefire</parameter>.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SyncEvent::fire</methodname></member>
   <member><methodname>SyncEvent::reset</methodname></member>
   <member><methodname>SyncEvent::wait</methodname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

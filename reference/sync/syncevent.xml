<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<reference xml:id="class.syncevent" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The SyncEvent class</title>
 <titleabbrev>SyncEvent</titleabbrev>

 <partintro>

<!-- {{{ SyncEvent intro -->
  <section xml:id="syncevent.intro">
   &reftitle.intro;
   <para>
 A cross-platform, native implementation of named and unnamed event objects.  Both automatic and manual event objects are supported.
   </para>
   <para>
 An event object waits, without polling, for the object to be fired/set.
 One instance waits on the event object while another instance fires/sets
 the event.  Event objects are useful wherever a long-running process would
 otherwise poll a resource (e.g. checking to see if uploaded data needs to
 be processed).
   </para>
  </section>
<!-- }}} -->

  <section xml:id="syncevent.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>SyncEvent</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>SyncEvent</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.syncevent')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
   </classsynopsis>
<!-- }}} -->

  </section>

 </partintro>

 &reference.sync.entities.syncevent;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

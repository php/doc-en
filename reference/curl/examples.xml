<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<chapter xml:id="curl.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <section xml:id="curl.examples-basic">
  <title>Basic curl examples</title>
  <para>
   Once you've compiled PHP with cURL support, you can begin using
   the cURL functions. The basic idea behind the cURL functions is
   that you initialize a cURL session using the
   <function>curl_init</function>, then you can set all your
   options for the transfer via the <function>curl_setopt</function>,
   and then send the request with the <function>curl_exec</function>.
  </para>
  <para>
   Here is a simple example that uses the cURL functions to send
   a POST request:
   <example>
    <title>Using PHP's cURL module to send a POST request</title>
    <programlisting role="php">
<![CDATA[
<?php
$data = ['foo' => 'bar', 'baz' => 48];
$url = "http://www.example.com/handler.php";

$ch = curl_init($url);

// tell CURL to return the response instead of sending it to stdout
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

// set the POST data, corresponding method and headers
curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));

// send the request and get the response
$response = curl_exec($ch);

if(curl_error($ch)) {
    // handle the error, or just
    throw new RuntimeException(curl_error($ch));
}
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Another example that uses the cURL functions to send a raw JSON
   POST request:
   <example>
    <title>Using PHP's cURL module to send a JSON POST request</title>
    <programlisting role="php">
<![CDATA[
<?php
$post_data = ['foo' => 'bar', 'baz' => 48];
$url = "http://www.example.com/api/endpoint";

$ch = curl_init($url);

// tell CURL to return the response instead of sending it to stdout
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

// set the POST data and corresponding method
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($post_data));

// set the required header
curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);

// send the request and get the response
$response = curl_exec($ch);

if(curl_error($ch)) {
    // handle the error, or just
    throw new RuntimeException(curl_error($ch));
}
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Here is another example that uses the cURL functions to fetch the
   example.com homepage into a file:
   <example>
    <title>Using PHP's cURL module to fetch the example.com homepage</title>
    <programlisting role="php">
<![CDATA[
<?php

$ch = curl_init("http://www.example.com/");
$fp = fopen("example_homepage.txt", "w");

curl_setopt($ch, CURLOPT_FILE, $fp);
curl_setopt($ch, CURLOPT_HEADER, 0);

curl_exec($ch);
if(curl_error($ch)) {
    fwrite($fp, curl_error($ch));
}
fclose($fp);
]]>
    </programlisting>
   </example>
  </para>
 </section>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


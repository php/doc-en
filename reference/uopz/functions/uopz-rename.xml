<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.uopz-rename" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>uopz_rename</refname>
  <refpurpose>Rename a function at runtime</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &uopz.warn.removed.function-5-0-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>uopz_rename</methodname>
   <methodparam><type>string</type><parameter>function</parameter></methodparam>
   <methodparam><type>string</type><parameter>rename</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>void</type><methodname>uopz_rename</methodname>
   <methodparam><type>string</type><parameter>class</parameter></methodparam>
   <methodparam><type>string</type><parameter>function</parameter></methodparam>
   <methodparam><type>string</type><parameter>rename</parameter></methodparam>
  </methodsynopsis>
  <para>
 Renames <parameter>function</parameter> to <parameter>rename</parameter>
  </para>
  <note>
   <para>
 If both functions exist, this effectively swaps their names
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>class</parameter></term>
    <listitem>
     <para>
 The name of the class containing the function
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>function</parameter></term>
    <listitem>
     <para>
 The name of an existing function
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>rename</parameter></term>
    <listitem>
     <para>
 The new name for the function
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>

  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>uopz_rename</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
uopz_rename("strlen", "original_strlen");

echo original_strlen("Hello World");
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
11
]]>
   </screen>
  </example>
  <example>
   <title><function>uopz_rename</function> class example</title>
   <programlisting role="php">
<![CDATA[
<?php
class My {
    public function strlen($arg) {
        return strlen($arg);
    }
}

uopz_rename(My::class, "strlen", "original_strlen");

echo My::original_strlen("Hello World");
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
11
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.uopz-compose" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>uopz_compose</refname>
  <refpurpose>Compose a class</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &uopz.warn.removed.function-5-0-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>uopz_compose</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam><type>array</type><parameter>classes</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>methods</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>properties</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
 Creates a new class of the given name that implements, extends, or uses all of the provided classes
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>name</parameter></term>
    <listitem>
     <para>
 A legal class name
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>classes</parameter></term>
    <listitem>
     <para>
 An array of class, interface and trait names
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>methods</parameter></term>
    <listitem>
     <para>
 An associative array of methods, values are either closures or [modifiers => closure]
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>properties</parameter></term>
    <listitem>
     <para>
 An associative array of properties, keys are names, values are modifiers
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
 Entry type, by default ZEND_ACC_CLASS
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>

  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>uopz_compose</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
class myClass {}
trait myTrait {}
interface myInterface {}

uopz_compose(
    Composed::class, [
        myClass::class,
        myTrait::class,
        myInterface::class
    ], [
    "__construct" => function() {
        /* ... */
    }
]);

var_dump(
 class_uses(Composed::class),
 class_parents(Composed::class),
 class_implements(Composed::class));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
array(1) {
  ["myTrait"]=>
  string(7) "myTrait"
}
array(1) {
  ["myClass"]=>
  string(7) "myClass"
}
array(1) {
  ["myInterface"]=>
  string(11) "myInterface"
}
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<phpdoc:classref xml:id="class.pht-atomicinteger" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The AtomicInteger class</title>
 <titleabbrev>pht\AtomicInteger</titleabbrev>
  
 <partintro>

<!-- {{{ pht\AtomicInteger intro -->
  <section xml:id="pht-atomicinteger.intro">
   &reftitle.intro;
   <para>
    The <classname>pht\AtomicInteger</classname> class is currently the only
    supported atomic value. It allows for an integer to be safely passed around
    between, and manipulated, by multiple threads. The methods exposed by this
    class do not need mutex locking, since they will acquire the internal mutex
    lock implicitly. <methodname>pht\AtomicInteger::lock</methodname> and
    <methodname>pht\AtomicInteger::unlock</methodname> are still exposed, however,
    for when multiple operations involving the same
    <classname>pht\AtomicInteger</classname> object need to be grouped together.
   </para>
   <para>
    The mutex locks of the atomic values are reentrant safe.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="pht-atomicinteger.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>pht\AtomicInteger</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>pht\AtomicInteger</classname>
     </ooclass>

     <oointerface>
      <interfacename>pht\Threaded</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.pht-atomicinteger')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.pht-atomicinteger')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

 </partintro>

 &reference.pht.entities.atomicinteger;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="pht-thread.addClassTask" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>pht\Thread::addClassTask</refname>
  <refpurpose>Class threading</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>pht\Thread::addClassTask</methodname>
   <methodparam><type>string</type><parameter>className</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>ctorArgs</parameter></methodparam>
  </methodsynopsis>
  <para>
   Adds a new class task to a <classname>pht\Thread</classname>s internal task queue.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>className</parameter></term>
    <listitem>
     <para>
      The name of the class to be threaded. This class must implement the
      <interfacename>pht\Runnable</interfacename> interface.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>ctorArgs</parameter></term>
    <listitem>
     <para>
      An optional list of arguments for the threaded class' constructor. These
      arguments will be serialised (since they are being passed to another
      thread).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   No return value.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Adding a new class task to a thread</title>
    <programlisting role="php">
<![CDATA[
<?php

use pht\{Thread, Runnable};

class Task implements Runnable
{
    private $one;

    public function __construct(int $one)
    {
        $this->one = $one;
    }

    public function run()
    {
        var_dump($this->one);
    }
}

$thread = new Thread();

$thread->addClassTask(Task::class, 1);

$thread->start();
$thread->join();
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(1)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

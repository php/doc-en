<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="parle-lexer.push" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Parle\Lexer::push</refname>
  <refpurpose>Add a lexer rule</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>Parle\Lexer::push</methodname>
   <methodparam><type>string</type><parameter>regex</parameter></methodparam>
   <methodparam><type>int</type><parameter>id</parameter></methodparam>
   <!--<methodparam choice="opt"><type>int</type><parameter>userId</parameter></methodparam>-->
  </methodsynopsis>
  <para>
   Push a pattern for lexeme recognition.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>regex</parameter></term>
    <listitem>
     <para>
      Regular expression used for token matching.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>id</parameter></term>
    <listitem>
     <para>
      Token id. If the lexer instance is meant to be used standalone, this can be an arbitrary number. If the lexer instance is going to be passed to the parser, it has to be an id returned by <methodname>Parle\Parser::tokenid</methodname>.
     </para>
    </listitem>
   </varlistentry>
   <!--<varlistentry>
    <term><parameter>userId</parameter></term>
    <listitem>
     <para>
      User supplied token id.
     </para>
    </listitem>
   </varlistentry>-->
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

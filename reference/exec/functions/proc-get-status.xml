<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id='function.proc-get-status' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>proc_get_status</refname>
  <refpurpose>Get information about a process opened by <function>proc_open</function></refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>proc_get_status</methodname>
   <methodparam><type>resource</type><parameter>process</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>proc_get_status</function> fetches data about a
   process opened using <function>proc_open</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>process</parameter></term>
     <listitem>
      <para>
       The <function>proc_open</function> <type>resource</type> that will
       be evaluated.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   An <type>array</type> of collected information on success, and &false;
   on failure. The returned array contains the following elements:
  </para>
  <para>
  <informaltable>
   <tgroup cols="3">
    <thead>
     <row><entry>element</entry><entry>type</entry><entry>description</entry></row>
    </thead>
    <tbody>
     <row>
      <entry>command</entry>
      <entry><type>string</type></entry>
      <entry>
       The command string that was passed to <function>proc_open</function>.
      </entry>
     </row>
     <row>
      <entry>pid</entry>
      <entry><type>int</type></entry>
      <entry>process id</entry>
     </row>
     <row>
      <entry>running</entry>
      <entry><type>bool</type></entry>
      <entry>
       &true; if the process is still running, &false; if it has
       terminated.
      </entry>
     </row>
     <row>
      <entry>signaled</entry>
      <entry><type>bool</type></entry>
      <entry>
       &true; if the child process has been terminated by
       an uncaught signal. Always set to &false; on Windows.
      </entry>
     </row>
     <row>
      <entry>stopped</entry>
      <entry><type>bool</type></entry>
      <entry>
       &true; if the child process has been stopped by a
       signal. Always set to &false; on Windows.
      </entry>
     </row>
     <row>
      <entry>exitcode</entry>
      <entry><type>int</type></entry>
      <entry>
       The exit code returned by the process (which is only
       meaningful if <literal>running</literal> is &false;).
       Only first call of this function return real value, next calls return
       <literal>-1</literal>.
      </entry>
     </row>
     <row>
      <entry>termsig</entry>
      <entry><type>int</type></entry>
      <entry>
       The number of the signal that caused the child process to terminate
       its execution (only meaningful if <literal>signaled</literal> is &true;).
      </entry>
     </row>
     <row>
      <entry>stopsig</entry>
      <entry><type>int</type></entry>
      <entry>
       The number of the signal that caused the child process to stop its
       execution (only meaningful if <literal>stopped</literal> is &true;).
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>proc_open</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

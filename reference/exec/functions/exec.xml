<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- splitted from ./en/functions/exec.xml, last change in rev 1.2 -->
<refentry xml:id="function.exec" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>exec</refname>
  <refpurpose>Execute an external program</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>exec</methodname>
   <methodparam><type>string</type><parameter>command</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">output</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">result_code</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>exec</function> executes the given
   <parameter>command</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>command</parameter></term>
     <listitem>
      <para>
       The command that will be executed.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output</parameter></term>
     <listitem>
      <para>
       If the <parameter>output</parameter> argument is present, then the
       specified array will be filled with every line of output from the
       command.  Trailing whitespace, such as <literal>\n</literal>, is not
       included in this array.  Note that if the array already contains some
       elements, <function>exec</function> will append to the end of the array.
       If you do not want the function to append elements, call
       <function>unset</function> on the array before passing it to
       <function>exec</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>result_code</parameter></term>
     <listitem>
      <para>
       If the <parameter>result_code</parameter> argument is present
       along with the <parameter>output</parameter> argument, then the
       return status of the executed command will be written to this
       variable.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The last line from the result of the command.  If you need to execute a 
   command and have all the data from the command passed directly back without 
   any interference, use the <function>passthru</function> function.
  </para>
  <para>
   Returns &false; on failure.
  </para>
  <para>
   To get the output of the executed command, be sure to set and use the
   <parameter>output</parameter> parameter.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>An <function>exec</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
// outputs the username that owns the running php/httpd process
// (on a system with the "whoami" executable in the path)
$output=null;
$retval=null;
exec('whoami', $output, $retval);
echo "Returned with status $retval and output:\n";
print_r($output);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Returned with status 0 and output:
Array
(
    [0] => cmb
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.escapeshell;
  &note.exec-bg;
  &note.exec-bypass-shell;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>system</function></member>
    <member><function>passthru</function></member>
    <member><function>escapeshellcmd</function></member>
    <member><function>pcntl_exec</function></member>
    <member><link linkend="language.operators.execution">backtick operator</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

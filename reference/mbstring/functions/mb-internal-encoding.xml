<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.mb-internal-encoding" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mb_internal_encoding</refname>
  <refpurpose>Set/Get internal character encoding</refpurpose>
 </refnamediv>
   
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>bool</type></type><methodname>mb_internal_encoding</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>encoding</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Set/Get the internal character encoding
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>encoding</parameter></term>
     <listitem>
      <para>
       <parameter>encoding</parameter> is the character encoding name 
       used for the HTTP input character encoding conversion, HTTP output 
       character encoding conversion, and the default character encoding 
       for string functions defined by the mbstring module.
       You should notice that the internal encoding is totally different from the one for multibyte regex.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   If <parameter>encoding</parameter> is set, then 
   &return.success;
   In this case, the character encoding for multibyte regex is NOT changed.
   If <parameter>encoding</parameter> is omitted, then 
   the current character encoding name is returned.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   As of PHP 8.0.0, a <classname>ValueError</classname> is thrown if the
   value of <parameter>encoding</parameter> is an invalid encoding.
   Prior to PHP 8.0.0, a <constant>E_WARNING</constant> was emitted instead.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &mbstring.changelog.encoding-nullable;
     <row>
      <entry>8.0.0</entry>
      <entry>
       Now throws a <classname>ValueError</classname> if
       <parameter>encoding</parameter> is an invalid encoding.
       Previously a <constant>E_WARNING</constant> was emitted instead.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mb_internal_encoding</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Set internal character encoding to UTF-8 */
mb_internal_encoding("UTF-8");

/* Display current internal character encoding */
echo mb_internal_encoding();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <!--
 <refsect1 role="notes">
  &reftitle.notes;
  
 </refsect1>
 -->

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mb_http_input</function></member>
    <member><function>mb_http_output</function></member>
    <member><function>mb_detect_order</function></member>
    <member><function>mb_regex_encoding</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<section xml:id="info.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>PHP Options/Info Configuration Options</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry><link linkend="ini.assert.active">assert.active</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.bail">assert.bail</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.warning">assert.warning</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.callback">assert.callback</link></entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.quiet-eval">assert.quiet_eval</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.exception">assert.exception</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Available as of PHP 7.0.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.enable-dl">enable_dl</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>&removed.php.future;</entry>
    </row>
    <row>
     <entry><link linkend="ini.max-execution-time">max_execution_time</link></entry>
     <entry>"30"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-time">max_input_time</link></entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
     <entry>"64"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry>Available as of PHP 5.2.3.</entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
     <entry>1000</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry>Available as of PHP 5.3.9.</entry>
    </row>
    <row>
     <entry><link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry>Removed in PHP 5.4.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Removed in PHP 5.4.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.zend.enable-gc">zend.enable_gc</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Available as of PHP 5.3.0.</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>
 
 &ini.descriptions.title;
 
 <para>
  <variablelist>
   <varlistentry xml:id="ini.assert.active">
    <term>
     <parameter>assert.active</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Enable <function>assert</function> evaluation.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.bail">
    <term>
     <parameter>assert.bail</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Terminate script execution on failed assertions.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.warning">
    <term>
     <parameter>assert.warning</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Issue a PHP warning for each failed assertion.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.callback">
    <term>
     <parameter>assert.callback</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      User function to call on failed assertions.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.quiet-eval">
    <term>
     <parameter>assert.quiet_eval</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Use the current setting of <function>error_reporting</function> during
      assertion expression evaluation. If enabled, no errors are shown
      (implicit error_reporting(0)) while evaluation. If disabled, errors are
      shown according to the settings of <function>error_reporting</function>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.exception">
    <term>
     <parameter>assert.exception</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Issue an <classname>AssertionError</classname> exception for the failed
      assertion.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.enable-dl">
    <term>
      <parameter>enable_dl</parameter>
      <type>boolean</type>
    </term>
    <listitem>
     <para>
      This directive is really only useful in the Apache module
      version of PHP. You can turn dynamic loading of
      PHP extensions with <function>dl</function> on and
      off per virtual server or per directory.
     </para>
     <para>
      The main reason for turning dynamic loading off is
      security. With dynamic loading, it's possible to ignore all
      <link linkend="ini.open-basedir">open_basedir</link> restrictions.
      The default is to allow dynamic loading, except when using
      &safemode;. In &safemode;, it's 
      always impossible to use <function>dl</function>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-execution-time">
    <term>
     <parameter>max_execution_time</parameter>
      <type>integer</type>
    </term>
    <listitem>
     <para>
      This sets the maximum time in seconds a script is allowed to
      run before it is terminated by the parser.  This helps
      prevent poorly written scripts from tying up the server. The
      default setting is <literal>30</literal>.  When running PHP
      from the <link linkend="features.commandline">command
      line</link> the default setting is <literal>0</literal>.
     </para>
     <para>
      The maximum execution time is not affected by system calls,
      stream operations etc.  Please see the
      <function>set_time_limit</function> function for more
      details.
     </para>
     <para>
      You can not change this setting with <function>ini_set</function> when
      running in &safemode;. The only workaround is to turn off safe mode or
      by changing the time limit in the &php.ini;.
     </para>
     <para>
      Your web server can have other timeout configurations that may 
      also interrupt PHP execution. Apache has a 
      <literal>Timeout</literal> directive and IIS has a CGI timeout 
      function. Both default to 300 seconds. See your web server 
      documentation for specific details.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-time">
    <term>
     <parameter>max_input_time</parameter>
      <type>integer</type>
    </term>
    <listitem>
     <para>
      This sets the maximum time in seconds a script is allowed to
      parse input data, like POST and GET. Timing begins at the moment PHP
      is invoked at the server and ends when execution begins.
      The default setting is <literal>-1</literal>, which means that 
      <link linkend="ini.max-execution-time">max_execution_time</link>
      is used instead. Set to <literal>0</literal> to allow unlimited time.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-nesting-level">
    <term>
     <parameter>max_input_nesting_level</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Sets the max nesting depth of
      <link linkend="language.variables.external">input variables</link> (i.e.
      <varname>$_GET</varname>, <varname>$_POST</varname>.)
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-vars">
    <term>
     <parameter>max_input_vars</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      How many <link linkend="language.variables.external">input
      variables</link> may be accepted (limit is applied to 
      $_GET, $_POST and $_COOKIE superglobal separately). Use of this directive 
      mitigates the possibility of denial of service attacks which use hash collisions.
      If there are more input variables than specified by this directive,
      an <constant>E_WARNING</constant> is issued, and further input
      variables are truncated from the request.
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.magic-quotes-gpc">
    <term>
     <parameter>magic_quotes_gpc</parameter>
     <type>boolean</type>
    </term>
     <listitem>
     &warn.deprecated.feature-5-3-0.removed-5-4-0;
     <para>
      Sets the magic_quotes state for GPC (Get/Post/Cookie)
      operations.  When magic_quotes are on, all ' (single-quote),
      &quot; (double quote), \ (backslash) and NUL's are escaped
      with a backslash automatically.
     </para>
     <para>
      See also <function>get_magic_quotes_gpc</function>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.magic-quotes-runtime">
    <term>
     <parameter>magic_quotes_runtime</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     &warn.deprecated.feature-5-3-0.removed-5-4-0;
     <para>
      If <parameter>magic_quotes_runtime</parameter> is enabled,
      most functions that return data from any sort of external
      source including databases and text files will have quotes
      escaped with a backslash.
     </para>
     <para>
      Functions affected by <parameter>magic_quotes_runtime</parameter>
      (does not include functions from PECL):
      <simplelist>
       <member><function>get_meta_tags</function></member>
       <member><function>file_get_contents</function></member>
       <member><function>file</function></member>
       <member><function>fgets</function></member>
       <member><function>fwrite</function></member>
       <member><function>fread</function></member>
       <member><function>fputcsv</function></member>
       <member><function>stream_socket_recvfrom</function></member>
       <member><function>exec</function></member>
       <member><function>system</function></member>
       <member><function>passthru</function></member>
       <member><function>stream_get_contents</function></member>
       <member><function>bzread</function></member>
       <member><function>gzfile</function></member>
       <member><function>gzgets</function></member>
       <member><function>gzwrite</function></member>
       <member><function>gzread</function></member>
       <member><function>exif_read_data</function></member>
       <member><function>dba_insert</function></member>
       <member><function>dba_replace</function></member>
       <member><function>dba_fetch</function></member>
       <member><function>ibase_fetch_row</function></member>
       <member><function>ibase_fetch_assoc</function></member>
       <member><function>ibase_fetch_object</function></member>
       <member><function>mssql_fetch_row</function></member>
       <member><function>mssql_fetch_object</function></member>
       <member><function>mssql_fetch_array</function></member>
       <member><function>mssql_fetch_assoc</function></member>
       <member><function>mysqli_fetch_row</function></member>
       <member><function>mysqli_fetch_array</function></member>
       <member><function>mysqli_fetch_assoc</function></member>
       <member><function>mysqli_fetch_object</function></member>
       <member><function>pg_fetch_row</function></member>
       <member><function>pg_fetch_assoc</function></member>
       <member><function>pg_fetch_array</function></member>
       <member><function>pg_fetch_object</function></member>
       <member><function>pg_fetch_all</function></member>
       <member><function>pg_select</function></member>
       <member><function>sybase_fetch_object</function></member>
       <member><function>sybase_fetch_array</function></member>
       <member><function>sybase_fetch_assoc</function></member>
       <member><function>SplFileObject::fgets</function></member>
       <member><function>SplFileObject::fgetcsv</function></member>
       <member><function>SplFileObject::fwrite</function></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.enable-gc">
    <term>
     <parameter>zend.enable_gc</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Enables or disables the circular reference collector.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.ini-get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ini_get</refname>
  <refpurpose>Gets the value of a configuration option</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>ini_get</methodname>
   <methodparam><type>string</type><parameter>varname</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns the value of the configuration option on success.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>varname</parameter></term>
     <listitem>
      <para>
       The configuration option name.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the value of the configuration option as a string on success, or an
   empty string for <literal>null</literal> values. Returns &false; if the
   configuration option doesn't exist.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A few <function>ini_get</function> examples</title>
    <programlisting role="php">
<![CDATA[
<?php
/*
Our php.ini contains the following settings:

display_errors = On
register_globals = Off
post_max_size = 8M
*/

echo 'display_errors = ' . ini_get('display_errors') . "\n";
echo 'register_globals = ' . ini_get('register_globals') . "\n";
echo 'post_max_size = ' . ini_get('post_max_size') . "\n";
echo 'post_max_size+1 = ' . (ini_get('post_max_size')+1) . "\n";
echo 'post_max_size in bytes = ' . return_bytes(ini_get('post_max_size'));

function return_bytes($val) {
    $val = trim($val);
    $last = strtolower($val[strlen($val)-1]);
    switch($last) {
        // The 'G' modifier is available since PHP 5.1.0
        case 'g':
            $val *= 1024;
        case 'm':
            $val *= 1024;
        case 'k':
            $val *= 1024;
    }

    return $val;
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[

display_errors = 1
register_globals = 0
post_max_size = 8M
post_max_size+1 = 9
post_max_size in bytes = 8388608

]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>When querying boolean values</title>
   <para>
    A boolean ini value of <literal>off</literal> will be returned as an
    empty string or "0" while a boolean ini value of <literal>on</literal> will
    be returned as "1".
    The function can also return the literal string of INI value.
   </para>
  </note>
  <note>
   <title>When querying memory size values</title>
   <para>
    Many ini memory size values, such as
    <link linkend="ini.upload-max-filesize">upload_max_filesize</link>, are
    stored in the &php.ini; file in shorthand notation.
    <function>ini_get</function> will return the exact string stored in the
    &php.ini; file and <emphasis>NOT</emphasis> its <type>integer</type>
    equivalent.  Attempting normal arithmetic functions on these values
    will not have otherwise expected results.  The example above shows one
    way to convert shorthand notation into bytes, much like how the PHP
    source does it.
   </para>
  </note>
  <note>
   <para>
    <function>ini_get</function> can't read "array" ini options such as
    pdo.dsn.*, and returns &false; in this case.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_cfg_var</function></member>
    <member><function>ini_get_all</function></member>
    <member><function>ini_restore</function></member>
    <member><function>ini_set</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

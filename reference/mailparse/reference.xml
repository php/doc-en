<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11.2.1 $ -->
<!-- Purpose: remote.mail -->
<!-- Membership: pecl -->

 <reference xml:id="ref.mailparse" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Mailparse Functions</title>
  <titleabbrev>Mailparse</titleabbrev>

  <partintro>
   <section xml:id="mailparse.intro">
    &reftitle.intro;
    <para>
     Mailparse is an extension for parsing and working with email messages.
     It can deal with <link xlink:href="&url.rfc;822">RFC 822</link> and <link
     xlink:href="&url.rfc;2045">RFC 2045</link> (<literal>MIME</literal>) compliant
     messages.
    </para>
    <para>
     Mailparse is stream based, which means that it does not keep in-memory
     copies of the files it processes - so it is very resource efficient when
     dealing with large messages.
    </para>
    <note>
     <para>
      Mailparse requires the <link linkend="ref.mbstring">mbstring</link>
      extension.
     </para>
    </note>
    <para>
     &pecl.moved-ver;4.2.0.
    </para>
   </section>
   
   &reference.mailparse.configure;
   &reference.mailparse.ini;
   &reference.mailparse.constants;  

<!--   <section xml:id="mailparse.classes">
    &reftitle.classes;
    &extension.classes;
    <para>
    </para>

    <section>
     <title>Classes</title>
     <simplelist>
      <member><link linkend="mailparse.mimemessage"><classname>MimeMessage</classname></link></member>
     </simplelist>
    </section>
   </section> -->

  </partintro>

<!-- &reference.mailparse.mimemessage; -->
&reference.mailparse.functions.entities;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

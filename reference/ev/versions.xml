<?xml version="1.0" encoding="utf-8"?>
<!--
  Do NOT translate this file
-->
<versions>
<!-- Methods -->

 <function name='ev' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::supportedbackends' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::recommendedbackends' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::embeddablebackends' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::sleep' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::time' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::feedsignal' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::run' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::now' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::iteration' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::depth' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::verify' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::backend' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::nowupdate' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::suspend' from='PECL ev &gt;= 0.2.0'/>
 <function name='ev::resume' from='PECL ev &gt;= 0.2.0'/>

 <function name='evloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::defaultloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::loopfork' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::verify' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::invokepending' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::nowupdate' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::suspend' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::resume' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::backend' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::now' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::run' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::feedsignalevent' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::io' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::timer' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::periodic' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::signal' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::child' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::stat' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::idle' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::check' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::prepare' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::embed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evloop::fork' from='PECL ev &gt;= 0.2.0'/>

 <function name='evwatcher' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evwatcher::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evio' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::set' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evio::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evtimer' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::set' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::again' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evtimer::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evperiodic' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::set' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::again' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::at' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evperiodic::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evsignal' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::set' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evsignal::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evchild' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::set' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evchild::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evstat' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::set' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::attr' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::prev' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::stat' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evstat::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evidle' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evidle::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evcheck' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evcheck::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evprepare' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evprepare::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evembed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::set' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::sweep' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evembed::setcallback' from='PECL ev &gt;= 0.2.0'/>

 <function name='evfork' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::__construct' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::createstopped' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::start' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::stop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::clear' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::invoke' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::feed' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::getloop' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::keepalive' from='PECL ev &gt;= 0.2.0'/>
 <function name='evfork::setcallback' from='PECL ev &gt;= 0.2.0'/>
</versions>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

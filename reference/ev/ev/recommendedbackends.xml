<?xml version="1.0" encoding="utf-8"?>
<refentry xml:id="ev.recommendedbackends" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Ev::recommendedBackends</refname>
  <refpurpose>Returns a bit mask of recommended backends for current
  platform</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier>
   <modifier>public</modifier>
   <modifier>static</modifier>
   <type>int</type>
   <methodname>Ev::recommendedBackends</methodname>
   <void />
  </methodsynopsis>
  <para>
   Returns the set of all backends compiled into this binary of
   <literal>libev</literal>
   and also recommended for this platform, meaning it will work for most file
   descriptor types. This set is often smaller than the one returned by
   <function>ev_supported_backends</function>
   , as for example
   <literal>kqueue</literal>
   is broken on most
   <literal>BSD</literal>
   systems and will not be auto-detected unless it is requested explicitly.
   This is the set of backends that
   <literal>libev</literal>
   will probe no backends specified explicitly.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a bit mask which can containing
   <link
  linkend="ev.constants.watcher-backends">backend flags</link>
   combined using bitwise
   <emphasis>OR</emphasis>
   operator.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
 <example>
   <title>Embedding one loop into another</title>
   <programlisting role="php">
<![CDATA[
<?php
/*
* Try to get an embeddable event loop and embed it into the default event loop.
* If it is impossible, use the default
* loop. The default loop is stored in $loop_hi, while the embeddable loop is
* stored in $loop_lo(which is $loop_hi in the case no embeddable loop can be
* used).
*
* Sample translated to PHP
* http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#Examples_CONTENT-9
*/
$loop_hi = EvLoop::defaultLoop();
$loop_lo = NULL;
$embed   = NULL;

/*
* See if there is a chance of getting one that works
* (flags' value of 0 means autodetection)
*/
$loop_lo = Ev::embeddableBackends() & Ev::recommendedBackends()
 ? new EvLoop(Ev::embeddableBackends() & Ev::recommendedBackends())
 : 0;

if ($loop_lo) {
 $embed = new EvEmbed($loop_lo, function () {});
} else {
 $loop_lo = $loop_hi;
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <classname>EvEmbed</classname>
   </member>
   <member>
    <methodname>Ev::embeddableBackends</methodname>
   </member>
   <member>
    <methodname>Ev::supportedBackends</methodname>
   </member>
   <member>
    <link linkend="ev.constants.watcher-backends">Backend flags</link>
   </member>
   <member>
    <link linkend="ev.examples">Examples</link>
   </member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

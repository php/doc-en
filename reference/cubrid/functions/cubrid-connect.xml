<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.cubrid-connect" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_connect</refname>
  <refpurpose>Open a connection to a CUBRID Server</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>cubrid_connect</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>  
   <methodparam><type>int</type><parameter>port</parameter></methodparam>  
   <methodparam><type>string</type><parameter>dbname</parameter></methodparam>  
   <methodparam choice="opt"><type>string</type><parameter>userid</parameter></methodparam>  
   <methodparam choice="opt"><type>string</type><parameter>passwd</parameter></methodparam>  
   <methodparam choice="opt"><type>bool</type><parameter>new_link</parameter><initializer>&false;</initializer></methodparam>  
  </methodsynopsis>
  <para>
    The <function>cubrid_connect</function> function is used to establish the
    environment for connecting to your server by using your server address,
    port number, database name, user name, and password. If the user name and
    password is not given, then the "PUBLIC" connection will be made by
    default. 
  </para>
 </refsect1>

  <refsect1 role="parameters">
 &reftitle.parameters;
 <para>
  <variablelist>
   <varlistentry>
    <term><parameter>host</parameter></term>
    <listitem><para>Host name or IP address of CUBRID CAS server.</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>port</parameter></term>
    <listitem><para>Port number of CUBRID CAS server (BROKER_PORT configured in $CUBRID/conf/cubrid_broker.conf).</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>dbname</parameter></term>
    <listitem><para>Name of database.</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>userid</parameter></term>
    <listitem><para>User name for the database. If not given, the default
      value is "public".</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>passwd</parameter></term>
    <listitem><para>User password. If not given, the default value is "".</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>new_link</parameter></term>
    <listitem><para>If a second call is made to
      <function>cubrid_connect</function> with the same arguments, no new
      connection will be established, but instead, the connection identifier
      of the already opened connection will be returned. The
      <parameter>new_link</parameter> parameter modifies this behavior and
      makes <function>cubrid_connect</function> always open a new connection,
      even if <function>cubrid_connect</function> was called before with the
      same parameters.</para></listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

  <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    Connection identifier, when process is successful,&return.falseforfailure;. 
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>cubrid_connect</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
printf("%-30s %s\n", "CUBRID PHP Version:", cubrid_version());

printf("\n");

$conn = cubrid_connect("localhost", 33000, "demodb", "dba");

if (!$conn) {
    die('Connect Error ('. cubrid_error_code() .')' . cubrid_error_msg());
}

$db_params = cubrid_get_db_parameter($conn);

while (list($param_name, $param_value) = each($db_params)) {
    printf("%-30s %s\n", $param_name, $param_value);
}

printf("\n");

$server_info = cubrid_get_server_info($conn);
$client_info = cubrid_get_client_info();

printf("%-30s %s\n", "Server Info:", $server_info);
printf("%-30s %s\n", "Client Info:", $client_info);

printf("\n");

$charset = cubrid_get_charset($conn);

printf("%-30s %s\n", "CUBRID Charset:", $charset);

cubrid_disconnect($conn);
?>
]]>
   </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
CUBRID PHP Version:            9.1.0.0001

PARAM_ISOLATION_LEVEL          3
LOCK_TIMEOUT                   -1
MAX_STRING_LENGTH              1073741823
PARAM_AUTO_COMMIT              1

Server Info:                   9.1.0.0212
Client Info:                   9.1.0

CUBRID Charset:                iso8859-1
]]>
   </screen>
  </example>
 </refsect1>
 
   <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
   <member><function>cubrid_pconnect</function></member>
   <member><function>cubrid_connect_with_url</function></member>
   <member><function>cubrid_pconnect_with_url</function></member>
   <member><function>cubrid_disconnect</function></member>
   <member><function>cubrid_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

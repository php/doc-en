<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.cubrid-lob2-seek" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_lob2_seek</refname>
  <refpurpose>Move the cursor of a lob object</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>cubrid_lob2_seek</methodname>
   <methodparam><type>resource</type><parameter>lob_identifier</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>origin</parameter><initializer>CUBRID_CURSOR_CURRENT</initializer></methodparam>
  </methodsynopsis>
  <para>
   The <function>cubrid_lob2_seek</function> function is used to move the cursor
   position of a lob object by the value set in the <parameter>offset</parameter>
   argument, to the direction set in the <parameter>origin</parameter> argument.
  </para>
  <para>
   To set the <parameter>origin</parameter> argument, you can use <constant>CUBRID_CURSOR_FIRST</constant>
   to set the cursor position moving forward <parameter>offset</parameter> units from
   the first beginning. In this case, <parameter>offset</parameter> must be a positive value.
  </para>
  <para>
   If you use <constant>CUBRID_CURSOR_CURRENT</constant> for <parameter>origin</parameter>, you can move 
   forward or backward. and <parameter>offset</parameter> can be positive or negative.
  </para>
  <para>
   If you use <constant>CUBRID_CURSOR_LAST</constant> for <parameter>origin</parameter>, you can move 
   backward <parameter>offset</parameter> units from the end of LOB object and
   <parameter>offset</parameter> only can be positive.
  </para>
 </refsect1>

 <refsect1 role="parameters">
 &reftitle.parameters;
 <para>
  <variablelist>
   <varlistentry>
    <term><parameter>lob_identifier</parameter></term>
    <listitem>
     <para>Lob identifier as a result of <function>cubrid_lob2_new</function> or get from the result set.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>offset</parameter></term>
    <listitem>
     <para>Number of units you want to move the cursor.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>origin</parameter></term>
    <listitem>
     <para>This parameter can be the following values:</para>
     <para>CUBRID_CURSOR_FIRST: move forward from the first beginning.</para>
     <para>CUBRID_CURSOR_CURRENT: move forward or backward from the current position.</para>
     <para>CUBRID_CURSOR_LAST: move backward at the end of LOB object.</para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>cubrid_lob2_seek</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
// test_lob (id INT, contents CLOB)
$conn = cubrid_connect("localhost", 33000, "demodb", "dba", "");

cubrid_execute($conn,"DROP TABLE if exists test_lob");
cubrid_execute($conn,"CREATE TABLE test_lob (id INT, contents CLOB)");
$req = cubrid_prepare($conn, "INSERT INTO test_lob VALUES(2, ?)");

$lob = cubrid_lob2_new($conn, 'CLOB');
$len = cubrid_lob2_write($lob, "Hello world");

cubrid_lob2_seek($lob, 0, CUBRID_CURSOR_LAST);
cubrid_lob2_write($lob, "beautiful");

cubrid_lob2_seek($lob, 15, CUBRID_CURSOR_FIRST);
$data = cubrid_lob2_read($lob, 5);

echo $data."\n";

cubrid_lob2_bind($req, 1, $lob);
cubrid_execute($req);

cubrid_disconnect($conn);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
   <member><function>cubrid_lob2_read</function></member>
   <member><function>cubrid_lob2_write</function></member>
   <member><function>cubrid_lob2_seek64</function></member>
   <member><function>cubrid_lob2_tell</function></member>
   <member><function>cubrid_lob2_tell64</function></member>
   <member><function>cubrid_lob2_size</function></member>
   <member><function>cubrid_lob2_size64</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

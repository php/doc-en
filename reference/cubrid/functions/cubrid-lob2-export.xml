<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.cubrid-lob2-export" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_lob2_export</refname>
  <refpurpose>Export the lob object to a file</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>cubrid_lob2_export</methodname>
   <methodparam><type>resource</type><parameter>lob_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>file_name</parameter></methodparam>
  </methodsynopsis>
  <para>
   The <function>cubrid_lob2_export</function> function is used to save the 
   contents of BLOB/CLOB data to a file. To use this function, you must use
   <function>cubrid_lob2_new</function> or fetch a lob object from CUBRID 
   database first. If the file already exists, the operation will fail. 
   This function will not influence the cursor position of the lob object. 
   It operates the entire lob object.
  </para>
 </refsect1>

 <refsect1 role="parameters">
 &reftitle.parameters;
 <para>
  <variablelist>
   <varlistentry>
    <term><parameter>lob_identifier</parameter></term>
    <listitem>
     <para>Lob identifier as a result of <function>cubrid_lob2_new</function> or get from the result set.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>filename</parameter></term>
    <listitem>
     <para>File name you want to store BLOB/CLOB data. It also supports the path of the file.</para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>cubrid_lob2_export</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
// Table: test_lob (id INT, contents CLOB)

$conn = cubrid_connect("localhost", 33000, "demodb", "dba", "");

cubrid_execute($conn,"DROP TABLE if exists doc");
cubrid_execute($conn,"CREATE TABLE doc (id INT, doc_content CLOB)");
cubrid_execute($conn,"INSERT INTO doc VALUES (5,'hello,cubrid')");

$req = cubrid_prepare($conn, "select * from doc");

cubrid_execute($req);

cubrid_move_cursor($req, 1, CUBRID_CURSOR_FIRST);

$row = cubrid_fetch($req, CUBRID_NUM | CUBRID_LOB);

cubrid_lob2_export($row[1], "doc_3.txt");

cubrid_lob2_close($row[1]);
cubrid_disconnect($conn);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
   <member><function>cubrid_lob2_new</function></member>
   <member><function>cubrid_lob2_close</function></member>
   <member><function>cubrid_lob2_import</function></member>
   <member><function>cubrid_lob2_bind</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

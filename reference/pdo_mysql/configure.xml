<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<section xml:id="ref.pdo-mysql.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;
 <para>
  The common Unix distributions include binary versions of PHP that can
  be installed. Although these binary versions are typically built with
  support for the MySQL extensions, the extension libraries
  themselves may need to be installed using an additional package. Check
  the package manager than comes with your chosen distribution for
  availability.
 </para>

 <para>
  For example, on Ubuntu the <literal>php5-mysql</literal> package installs
  the ext/mysql, ext/mysqli, and PDO_MYSQL PHP extensions. On CentOS,
  the <literal>php-mysql</literal> package also installs these three
  PHP extensions.
 </para>

 <para>
  Alternatively, you can compile this extension yourself. Building PHP from
  source allows you to specify the MySQL extensions you want to use, as well
  as your choice of client library for each extension.
 </para>

 <para>
  When compiling, use <option role="configure">--with-pdo-mysql[=DIR]</option> to install
  the PDO MySQL extension, where the optional <literal>[=DIR]</literal>
  is the MySQL base library. As of PHP 5.4, <link linkend="book.mysqlnd">mysqlnd</link>
  is the default library. For details about choosing a library, see
  <link linkend="mysqlinfo.library.choosing">Choosing a MySQL library</link>.
 </para>
 <para>
  Optionally, the <option role="configure">--with-mysql-sock[=DIR]</option> sets to location
  to the MySQL unix socket pointer for all MySQL extensions, including PDO_MYSQL. If
  unspecified, the default locations are searched.
 </para>
 <para>
  Optionally, the <option role="configure">--with-zlib-dir[=DIR]</option> is used to set
  the path to the libz install prefix.
 </para>
 <para>
  <screen>
<![CDATA[
$ ./configure --with-pdo-mysql --with-mysql-sock=/var/mysql/mysql.sock
]]>
  </screen>
 </para>
 <para>
  SSL support is enabled using the appropriate <link linkend="pdo-mysql.constants">PDO_MySQL constants</link>,
  which is equivalent to calling the <link xlink:href="&url.mysql.docs.ssl.set;">MySQL C API function mysql_ssl_set()</link>.
  Also, SSL cannot be enabled with <classname>PDO::setAttribute</classname> because the connection
  already exists. See also the MySQL documentation about <link xlink:href="&url.mysql.docs.ssl.using;">connecting to
  MySQL with SSL</link>.
 </para>

 <table>
  <title>&Changelog;</title>
  <tgroup cols="2">
   <thead>
    <row>
     <entry>&Version;</entry>
     <entry>&Description;</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>5.4.0</entry>
     <entry>
      <link linkend="book.mysqlnd">mysqlnd</link> became the default MySQL library
      when compiling PDO_MYSQL. Previously, libmysqlclient was the default MySQL library.
     </entry>
    </row>
    <row>
     <entry>5.4.0</entry>
     <entry>
      MySQL client libraries 4.1 and below are no longer supported.
     </entry>
    </row>
    <row>
     <entry>5.3.9</entry>
     <entry>
      Added SSL support with mysqlnd and OpenSSL.
     </entry>
    </row>
    <row>
     <entry>5.3.7</entry>
     <entry>
      Added SSL support with libmysqlclient and OpenSSL.
     </entry>
    </row>
   </tbody>
  </tgroup>
 </table>

</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

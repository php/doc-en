<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1.2.2 $ -->
<!-- Purpose: utilspec.nontext -->
<!-- Membership: bundled, external -->
 
<book xml:id="book.fdf" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Forms Data Format Functions</title>
 
 <!-- {{{ preface -->
 <preface xml:id="intro.fdf">
  &reftitle.intro;
  <simpara>
   Forms Data Format (FDF) is a format for handling
   forms within PDF documents. You should read the documentation at 
   <link xlink:href="&spec.pdf.fdf;">&spec.pdf.fdf;</link>
   for more information on what FDF is and how it is used in general.
  </simpara>
  <simpara>
   The general idea of FDF is similar to HTML forms. The difference is
   basically the format how data is transmitted to the server when the submit
   button is pressed (this is actually the Form Data Format) and the format
   of the form itself (which is the Portable Document Format, PDF).
   Processing the FDF data is one of the features provided by the fdf
   functions. But there is more.  One may as well take an existing PDF form
   and populated the input fields with data without modifying the form
   itself. In such a case one would create a FDF document
   (<function>fdf_create</function>) set the values of each input field
   (<function>fdf_set_value</function>) and associate it with a PDF form
   (<function>fdf_set_file</function>). Finally it has to be sent to the
   browser with MimeType <literal>application/vnd.fdf</literal>. The Acrobat
   reader plugin of your browser recognizes the MimeType,  reads the
   associated PDF form and fills in the data from the FDF document.
  </simpara>

  <simpara>
   If you look at an FDF-document with a text editor you will find a
   catalogue object with the name <literal>FDF</literal>. Such an object may
   contain a number of entries like <literal>Fields</literal>,
   <literal>F</literal>, <literal>Status</literal> etc..
   The most commonly used entries are <literal>Fields</literal> which points
   to a list of input fields, and <literal>F</literal> which contains the
   filename of the PDF-document this data belongs to. Those entries are
   referred to in the FDF documentation as /F-Key or /Status-Key.
   Modifying this entries
   is done by functions like <function>fdf_set_file</function> and
   <function>fdf_set_status</function>. Fields are modified with
   <function>fdf_set_value</function>, <function>fdf_set_opt</function> etc..
  </simpara>
 </preface>
 <!-- }}} -->
 
 &reference.fdf.setup;
 &reference.fdf.constants;
 &reference.fdf.examples;
 &reference.fdf.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


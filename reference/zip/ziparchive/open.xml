<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="ziparchive.open" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ZipArchive::open</refname>
  <refpurpose>Open a ZIP file archive</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>bool</type><type>int</type></type><methodname>ZipArchive::open</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Opens a new or existing zip archive for reading, writing or modifying.
  </para>
  <para>
   Since libzip 1.6.0, a empty file is not a valid archive any longer.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       The file name of the ZIP archive to open.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       The mode to use to open the archive.
       <itemizedlist>
        <listitem>
         <para>
          <constant><link linkend="ziparchive.constants.overwrite">ZipArchive::OVERWRITE</link></constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant><link linkend="ziparchive.constants.create">ZipArchive::CREATE</link></constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant><link linkend="ziparchive.constants.rdonly">ZipArchive::RDONLY</link></constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant><link linkend="ziparchive.constants.excl">ZipArchive::EXCL</link></constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant><link linkend="ziparchive.constants.checkcons">ZipArchive::CHECKCONS</link></constant>
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns &true; on success, or one of the following error codes:
   <variablelist>
    <varlistentry>
     <term><constant>ZipArchive::ER_EXISTS</constant></term>
     <listitem>
      <simpara>File already exists.</simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>ZipArchive::ER_INCONS</constant></term>
     <listitem>
      <simpara>Zip archive inconsistent.</simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>ZipArchive::ER_INVAL</constant></term>
     <listitem>
      <simpara>Invalid argument.</simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>ZipArchive::ER_MEMORY</constant></term>
     <listitem>
      <simpara>Malloc failure.</simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>ZipArchive::ER_NOENT</constant></term>
     <listitem>
      <simpara>No such file.</simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>ZipArchive::ER_NOZIP</constant></term>
     <listitem>
      <simpara>Not a zip archive.</simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>ZipArchive::ER_OPEN</constant></term>
     <listitem>
      <simpara>Can't open file.</simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>ZipArchive::ER_READ</constant></term>
     <listitem>
      <simpara>Read error.</simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>ZipArchive::ER_SEEK</constant></term>
     <listitem>
      <simpara>Seek error.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
    <example>
     <title>Open and extract</title>
     <programlisting role="php">
<![CDATA[
<?php
$zip = new ZipArchive;
$res = $zip->open('test.zip');
if ($res === TRUE) {
    echo 'ok';
    $zip->extractTo('test');
    $zip->close();
} else {
    echo 'failed, code:' . $res;
}
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>Create an archive</title>
     <programlisting role="php">
<![CDATA[
<?php
$zip = new ZipArchive;
$res = $zip->open('test.zip', ZipArchive::CREATE);
if ($res === TRUE) {
    $zip->addFromString('test.txt', 'file content goes here');
    $zip->addFile('data.txt', 'entryname.txt');
    $zip->close();
    echo 'ok';
} else {
    echo 'failed';
}
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>Create an temporary archive</title>
     <programlisting role="php">
<![CDATA[
<?php
$name = tempnam(sys_get_temp_dir(), "FOO");
$zip = new ZipArchive;
$res = $zip->open($name, ZipArchive::OVERWRITE); /* truncate as empty file is not valid */
if ($res === TRUE) {
    $zip->addFile('data.txt', 'entryname.txt');
    $zip->close();
    echo 'ok';
} else {
    echo 'failed';
}
?>
]]>
     </programlisting>
    </example>
   </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="ziparchive.addpattern" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ZipArchive::addPattern</refname>
  <refpurpose>Add files from a directory by PCRE pattern</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>array</type><type>false</type></type><methodname>ZipArchive::addPattern</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>path</parameter><initializer>"."</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   Add files from a directory which match the regular expression <parameter>pattern</parameter>.
   The operation is not recursive. The pattern will be matched against the file name only.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>pattern</parameter></term>
    <listitem>
     <para>
      A <link linkend="book.pcre">PCRE</link> pattern against which files will be matched.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>path</parameter></term>
    <listitem>
     <para>
      The directory that will be scanned. Defaults to the current working directory.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>options</parameter></term>
    <listitem>
     <para>
      An associative array of options accepted by <methodname>ZipArchive::addGlob</methodname>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   An <type>array</type> of added files on success &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="ziparchive.addpattern.example.basic">
   <title><methodname>ZipArchive::addPattern</methodname> example</title>
   <para>
     Add all php scripts and text files from current directory
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$zip = new ZipArchive();
$ret = $zip->open('application.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE);
if ($ret !== TRUE) {
    printf('Failed with code %d', $ret);
} else {
    $directory = realpath('.');
    $options = array('add_path' => 'sources/', 'remove_path' => $directory);
    $zip->addPattern('/\.(?:php|txt)$/', $directory, $options);
    $zip->close();
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ZipArchive::addFile</methodname></member>
    <member><methodname>ZipArchive::addGlob</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

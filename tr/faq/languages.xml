<!-- $Revision: 1.4 $ -->
 <chapter id="faq.languages">
  <title>PHP and other languages</title>
  <titleabbrev>PHP and other languages</titleabbrev>

   <para>
    PHP is the best language for Webbing, but what about
    other languages?
   </para>

  <qandaset>
   <qandaentry id="faq.languages.asp">
    <question>
     <para>PHP vs. ASP?</para>
    </question>
    <answer>
     <para>
      ASP is not really a language in itself, it's an acronym for Active
      Server Pages, the actual language used to program ASP with is a
      script version of Visual Basic.  The biggest drawback of ASP is that
      it's a proprietary system that is natively used only on Microsoft
      Internet Information Server (IIS). This limits it's availability to
      Win32 based servers. There are a couple of projects in the works
      that allows ASP to run in other environments and webservers; 
      <ulink url="&faqurl.instantasp;">InstantASP</ulink>
      from <ulink url="&faqurl.halcyon;">Halcyon</ulink> (commercial),
      <ulink url="&faqurl.chilisoft.asp;">Chili!Soft ASP</ulink> from 
      <ulink url="&faqurl.chilisoft;">Chili!Soft</ulink>
      (commercial) and <ulink url="&faqurl.openasp;">OpenASP from ActiveScripting.org</ulink>
      (free).  ASP is said to be a slower
      and more cumbersome language than PHP, less stable as well. Some of
      the pros of ASP is that since it uses VBScript it's relatively easy
      to pick up the language if you're already know how to program in
      Visual Basic. ASP support is also enabled by default in the IIS
      server making it easy to get up and running.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.aspconverter">
    <question>
     <para>Is there an ASP to PHP converter?</para>
    </question>
    <answer>
     <para>
      Yes, <ulink url="&faqurl.asp2php;">asp2php</ulink> is the one most often 
      referred to.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.coldfusion">
    <question>
     <para>PHP vs. Cold Fusion?</para>
    </question>
    <answer>
     <para>
      PHP is commonly said to be faster and more efficient for complex
      programming tasks and trying out new ideas. PHP is generally referred
      to as more stable and less resource intensive as well. Cold Fusion
      has better error handling, database abstraction and date parsing
      although database abstraction is being addressed in PHP 4. Another
      thing that is listed as one of Cold Fusion's strengths is its excellent
      search engine, but it has been mentioned that a search engine is not
      something that should be included in a web scripting language. PHP
      runs on almost every platform there is; Cold Fusion is only available
      on Win32, Solaris, Linux and HP/UX.  Cold Fusion has a better IDE
      and is generally easier to get started with, whereas PHP initially
      requires more programming knowledge.
     </para>
     <para>
      A great summary by Michael J Sheldon on this topic has
      been posted to the PHP mailing list. A copy can be found 
      <ulink url="&faqurl.coldfusion.summary;">here</ulink>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.perl">
    <question>
     <para>PHP vs. Perl?</para>
    </question>
    <answer>
     <para>
      The biggest advantage of PHP over Perl is that PHP was designed for
      scripting for the web where Perl was designed to do a lot more and can
      because of this get very complicated. The flexibility / complexity
      of Perl makes it easier to write code that another author / coder
      has a hard time reading. PHP has a less confusing and stricter format
      without losing flexibility.  PHP is easier to integrate into existing
      HTML than Perl. PHP has pretty much all the 'good' functionality of
      Perl; constructs, syntax and so on, without making it as complicated
      as Perl can be. Perl is a very tried and true language, it's been
      around since the late eighties, but PHP is maturing very quickly.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->

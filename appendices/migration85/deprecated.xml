<?xml version="1.0" encoding="utf-8"?>
<sect1 xml:id="migration85.deprecated">
 <title>Deprecated Features</title>

 <sect2 xml:id="migration85.deprecated.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration85.deprecated.core.changes-to-user-output-handler">
   <title>Changes to user output handler</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4 -->

   <simpara>
    Returning a non-string from a user output handler is deprecated. The
    deprecation warning will bypass the handler with the bad return to ensure
    it is visible; if there are nested output handlers the next one will still
    be used.
   </simpara>

   <simpara>
    Trying to produce output (e.g. with <function>echo</function>) within
    a user output handler is deprecated.
    The deprecation warning will bypass the handler producing the output to
    ensure it is visible; if there are nested output handlers the next
    one will still be used. If a user output handler returns a non-string and
    produces output, the warning about producing an output is emitted first.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.non-canonical-cast-names">
   <title>Non-canonical cast names</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_non-standard_cast_names -->

   <simpara>
    Non-canonical cast names <literal>(boolean)</literal>,
    <literal>(integer)</literal>, <literal>(double)</literal>,
    and <literal>(binary)</literal> have been deprecated,
    use <literal>(bool)</literal>, <literal>(int)</literal>,
    <literal>(float)</literal>, and <literal>(string)</literal> respectively.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.case-statements-with-semicolon">
   <title>Terminating case statements with a semicolon</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_semicolon_after_case_in_switch_statement -->

   <simpara>
    Terminating case statements with a semicolon instead of a colon has
    been deprecated.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.the-backtick-operator">
   <title>The backtick operator</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_backticks_as_an_alias_for_shell_exec -->

   <simpara>
   <link linkend="language.operators.execution">The backtick operator</link>
   as an alias for <function>shell_exec</function> has been deprecated.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.return-null-from-debuginfo">
   <title>Returning null from __debugInfo()</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_debuginfo_returning_null -->

   <simpara>
    Returning &null; from
    <link linkend="language.oop5.magic.debuginfo">__debugInfo()</link>
    has been deprecated. Return an empty array instead.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.return-memleaks-ini-directive">
   <title>report_memleaks INI directive</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_the_report_memleaks_ini_directive -->

   <simpara>
    The <link linkend="ini.report-memleaks">report_memleaks</link> INI directive
    has been deprecated.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.constant-redeclaration">
   <title>Constant redeclaration</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_constant_redeclaration -->

   <simpara>
    Constant redeclaration has been deprecated.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.closure-binding-issues">
   <title>Closure binding issues</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_closure_binding_issues -->

   <para>
    The following closure binding issues, which already emit an
    <constant>E_WARNING</constant>, are now deprecated:

    <simplelist>
     <member>Binding an instance to a static closure.</member>
     <member>Binding methods to objects that are not instances of the class
      (or subclass) that the method is defined.</member>
     <member>Unbinding $this from a method.</member>
     <member>Unbinding $this from a closure that uses `$this`.</member>
     <member>Binding a closure to the scope of an internal class.</member>
     <member>Rebinding the scope of a closure created from a function or method.</member>
    </simplelist>
   </para>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.sleep-and-wakeup-magic-methods">
   <title>__sleep() and __wakeup() magic methods</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_the_sleep_and_wakeup_magic_methods -->
   <!-- RFC: https://wiki.php.net/rfc/soft-deprecate-sleep-wakeup -->

   <simpara>
    The <link linkend="object.sleep">__sleep()</link> and
    <link linkend="object.wakeup">__wakeup()</link> magic methods
    have been soft-deprecated.
    The <link linkend="object.serialize">__serialize()</link> and
    <link linkend="object.unserialize">__unserialize()</link> magic
    methods should be used instead, or at the same time if compatibility
    with PHP 7 is required.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.using-null-as-an-array-offset">
   <title>Using null as an array offset</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_using_values_null_as_an_array_offset_and_when_calling_array_key_exists -->

   <simpara>
    Using null as an array offset or when calling <function>array_key_exists</function>
    is now deprecated. Instead an empty string should be used.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.incrementing-non-numeric-strings">
   <title>Incrementing non-numeric strings</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#enact_follow-up_phase_of_the_path_to_saner_incrementdecrement_operators_rfc -->

   <simpara>
    Incrementing non-numeric strings is now deprecated.
    Instead the <function>str_increment</function> function should be used.
   </simpara>

  </sect3>

  <sect3 xml:id="migration85.deprecated.core.register-argc-argv-directive">
   <title>register_argc_argv INI directive</title>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_the_register_argc_argv_ini_directive -->

   <simpara>
    Deriving <code>$_SERVER['argc']</code> and <code>$_SERVER['argv']</code>
    from the query string for non-CLI SAPIs has been deprecated.
    Configure <literal>register_argc_argv=0</literal> and switch to either
    <varname>$_GET</varname> or <code>$_SERVER['QUERY_STRING']</code>
    to access the information, after verifying that the usage is safe.
   </simpara>

  </sect3>

 </sect2>

 <sect2 xml:id="migration85.deprecated.curl">
  <title>cURL</title>

  <simpara>
   The <function>curl_close</function> function has been deprecated,
   as <classname>CurlHandle</classname> objects are freed automatically.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_curl_close -->
  </simpara>

  <simpara>
   The <function>curl_share_close</function> function has been deprecated,
   as <classname>CurlShareHandle</classname> objects are freed automatically.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_curl_share_close -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.date">
  <title>Date</title>

  <simpara>
   The <constant>DATE_RFC7231</constant> and
   <constant>DateTimeInterface::RFC7231</constant> constants have been deprecated.
   This is because the associated timezone is ignored and always uses GMT.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_date_rfc7231_and_datetimeinterfacerfc7231 -->
  </simpara>

  <simpara>
   The <link linkend="object.wakeup">__wakeup()</link> magic method of
   <interfacename>DateTimeInterface</interfacename>,
   <classname>DateTime</classname>, <classname>DateTimeImmutable</classname>,
   <classname>DateTimeZone</classname>, <classname>DateInterval</classname>,
   and <classname>DatePeriod</classname> has been deprecated in favour of
   the <link linkend="object.unserialize">__unserialize()</link> magic method.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_the_sleep_and_wakeup_magic_methods -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.fileinfo">
  <title>FileInfo</title>

  <simpara>
   The <function>finfo_close</function> function has been deprecated.
   As <classname>finfo</classname> objects are freed automatically.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_finfo_close -->
  </simpara>

  <simpara>
   The <parameter>$context</parameter> parameter of the
   <function>finfo_buffer</function> function has been deprecated
   as it is ignored.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_the_context_parameter_for_finfo_buffer -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.gd">
  <title>GD</title>

  <simpara>
   The <function>imagedestroy</function> function has been deprecated,
   as <classname>GdImage</classname> objects are freed automatically.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_imagedestroy -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.hash">
  <title>Hash</title>

  <simpara>
   The <constant>MHASH_<replaceable>*</replaceable></constant> constants
   have been deprecated.  These have been overlooked when the mhash*() function
   family has been deprecated per
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_1#mhash_function_family -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.intl">
  <title>Intl</title>

  <simpara>
   The <link linkend="ini.intl.error-level">intl.error_level</link> INI setting
   has been deprecated.
   Errors should either be checked manually or exceptions should be enabled by
   using the <link linkend="ini.intl.use-exceptions">intl.use_exceptions</link>
   INI setting.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_intlerror_level_ini_setting -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.ldap">
  <title>LDAP</title>

  <para>
   Specific Oracle Instant Client calls and constants have been deprecated.

   List of affected calls:
   <simplelist>
    <member><function>ldap_connect</function> with wallet support</member>
    <member><function>ldap_connect_wallet</function></member>
   </simplelist>

   List of affected constants:
   <simplelist>
    <member><constant>GSLC_SSL_NO_UATH</constant></member>
    <member><constant>GSLC_SSL_ONEWAY_UATH</constant></member>
    <member><constant>GSLC_SSL_TWOWAY_UATH</constant></member>
   </simplelist>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_building_ext_ldap_against_oracle_ldap -->
  </para>

 </sect2>

 <sect2 xml:id="migration85.deprecated.mysqli">
  <title>MySQLi</title>

  <simpara>
   The <function>mysqli_execute</function> alias function has been deprecated.
   Use <function>mysqli_stmt_execute</function> instead.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#formally_deprecate_mysqli_execute -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.openssl">
  <title>OpenSSL</title>

  <simpara>
   The <parameter>$key_length</parameter> parameter for
   <function>openssl_pkey_derive</function> has been deprecated.
   This is because it is either ignored, or truncates the key, which can be
   a vulnerability.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_key_length_parameter_of_openssl_pkey_derive -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.pdo">
  <title>PDO</title>

  <simpara>
   The "uri:" DSN scheme has been deprecated due to security concerns with
   DSNs coming from remote URIs.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_pdo_s_urischeme -->
  </simpara>

  <para>
   Driver specific constants in the PDO class have been deprecated.
   List of affected constants and their replacement:

   <simplelist>
    <member><constant>PDO::DBLIB_ATTR_CONNECTION_TIMEOUT</constant> => <constant>Pdo\Dblib::ATTR_CONNECTION_TIMEOUT</constant></member>
    <member><constant>PDO::DBLIB_ATTR_QUERY_TIMEOUT</constant> => <constant>Pdo\Dblib::ATTR_QUERY_TIMEOUT</constant></member>
    <member><constant>PDO::DBLIB_ATTR_STRINGIFY_UNIQUEIDENTIFIER</constant> => <constant>Pdo\Dblib::ATTR_STRINGIFY_UNIQUEIDENTIFIER</constant></member>
    <member><constant>PDO::DBLIB_ATTR_VERSION</constant> => <constant>Pdo\Dblib::ATTR_VERSION</constant></member>
    <member><constant>PDO::DBLIB_ATTR_TDS_VERSION</constant> => <constant>Pdo\Dblib::ATTR_TDS_VERSION</constant></member>
    <member><constant>PDO::DBLIB_ATTR_SKIP_EMPTY_ROWSETS</constant> => <constant>Pdo\Dblib::ATTR_SKIP_EMPTY_ROWSETS</constant></member>
    <member><constant>PDO::DBLIB_ATTR_DATETIME_CONVERT</constant> => <constant>Pdo\Dblib::ATTR_DATETIME_CONVERT</constant></member>
    <member><constant>PDO::FB_ATTR_DATE_FORMAT</constant> => <constant>Pdo\Firebird::ATTR_DATE_FORMAT</constant></member>
    <member><constant>PDO::FB_ATTR_TIME_FORMAT</constant> => <constant>Pdo\Firebird::ATTR_TIME_FORMAT</constant></member>
    <member><constant>PDO::FB_ATTR_TIMESTAMP_FORMAT</constant> => <constant>Pdo\Firebird::ATTR_TIMESTAMP_FORMAT</constant></member>
    <member><constant>PDO::MYSQL_ATTR_USE_BUFFERED_QUERY</constant> => <constant>Pdo\Mysql::ATTR_USE_BUFFERED_QUERY</constant></member>
    <member><constant>PDO::MYSQL_ATTR_LOCAL_INFILE</constant> => <constant>Pdo\Mysql::ATTR_LOCAL_INFILE</constant></member>
    <member><constant>PDO::MYSQL_ATTR_LOCAL_INFILE_DIRECTORY</constant> => <constant>Pdo\Mysql::ATTR_LOCAL_INFILE_DIRECTORY</constant></member>
    <member><constant>PDO::MYSQL_ATTR_INIT_COMMAND</constant> => <constant>Pdo\Mysql::ATTR_INIT_COMMAND</constant></member>
    <member><constant>PDO::MYSQL_ATTR_MAX_BUFFER_SIZE</constant> => <constant>Pdo\Mysql::ATTR_MAX_BUFFER_SIZE</constant></member>
    <member><constant>PDO::MYSQL_ATTR_READ_DEFAULT_FILE</constant> => <constant>Pdo\Mysql::ATTR_READ_DEFAULT_FILE</constant></member>
    <member><constant>PDO::MYSQL_ATTR_READ_DEFAULT_GROUP</constant> => <constant>Pdo\Mysql::ATTR_READ_DEFAULT_GROUP</constant></member>
    <member><constant>PDO::MYSQL_ATTR_COMPRESS</constant> => <constant>Pdo\Mysql::ATTR_COMPRESS</constant></member>
    <member><constant>PDO::MYSQL_ATTR_DIRECT_QUERY</constant> => <constant>Pdo\Mysql::ATTR_DIRECT_QUERY</constant></member>
    <member><constant>PDO::MYSQL_ATTR_FOUND_ROWS</constant> => <constant>Pdo\Mysql::ATTR_FOUND_ROWS</constant></member>
    <member><constant>PDO::MYSQL_ATTR_IGNORE_SPACE</constant> => <constant>Pdo\Mysql::ATTR_IGNORE_SPACE</constant></member>
    <member><constant>PDO::MYSQL_ATTR_SSL_KEY</constant> => <constant>Pdo\Mysql::ATTR_SSL_KEY</constant></member>
    <member><constant>PDO::MYSQL_ATTR_SSL_CERT</constant> => <constant>Pdo\Mysql::ATTR_SSL_CERT</constant></member>
    <member><constant>PDO::MYSQL_ATTR_SSL_CA</constant> => <constant>Pdo\Mysql::ATTR_SSL_CA</constant></member>
    <member><constant>PDO::MYSQL_ATTR_SSL_CAPATH</constant> => <constant>Pdo\Mysql::ATTR_SSL_CAPATH</constant></member>
    <member><constant>PDO::MYSQL_ATTR_SSL_CIPHER</constant> => <constant>Pdo\Mysql::ATTR_SSL_CIPHER</constant></member>
    <member><constant>PDO::MYSQL_ATTR_SSL_VERIFY_SERVER_CERT</constant> => <constant>Pdo\Mysql::ATTR_SSL_VERIFY_SERVER_CERT</constant></member>
    <member><constant>PDO::MYSQL_ATTR_SERVER_PUBLIC_KEY</constant> => <constant>Pdo\Mysql::ATTR_SERVER_PUBLIC_KEY</constant></member>
    <member><constant>PDO::MYSQL_ATTR_MULTI_STATEMENTS</constant> => <constant>Pdo\Mysql::ATTR_MULTI_STATEMENTS</constant></member>
    <member><constant>PDO::ODBC_ATTR_USE_CURSOR_LIBRARY</constant> => <constant>Pdo\Odbc::ATTR_USE_CURSOR_LIBRARY</constant></member>
    <member><constant>PDO::ODBC_ATTR_ASSUME_UTF8</constant> => <constant>Pdo\Odbc::ATTR_ASSUME_UTF8</constant></member>
    <member><constant>PDO::ODBC_SQL_USE_IF_NEEDED</constant> => <constant>Pdo\Odbc::SQL_USE_IF_NEEDED</constant></member>
    <member><constant>PDO::ODBC_SQL_USE_DRIVER</constant> => <constant>Pdo\Odbc::SQL_USE_DRIVER</constant></member>
    <member><constant>PDO::ODBC_SQL_USE_ODBC</constant> => <constant>Pdo\Odbc::SQL_USE_ODBC</constant></member>
    <member><constant>PDO::PGSQL_ATTR_DISABLE_PREPARES</constant> => <constant>Pdo\Pgsql::ATTR_DISABLE_PREPARES</constant></member>
    <member><constant>PDO::SQLITE_ATTR_EXTENDED_RESULT_CODES</constant> => <constant>Pdo\Sqlite::ATTR_EXTENDED_RESULT_CODES</constant></member>
    <member><constant>PDO::SQLITE_ATTR_OPEN_FLAGS</constant> => <constant>Pdo\Sqlite::OPEN_FLAGS</constant></member>
    <member><constant>PDO::SQLITE_ATTR_READONLY_STATEMENT</constant> => <constant>Pdo\Sqlite::ATTR_READONLY_STATEMENT</constant></member>
    <member><constant>PDO::SQLITE_DETERMINISTIC</constant> => <constant>Pdo\Sqlite::DETERMINISTIC</constant></member>
    <member><constant>PDO::SQLITE_OPEN_READONLY</constant> => <constant>Pdo\Sqlite::OPEN_READONLY</constant></member>
    <member><constant>PDO::SQLITE_OPEN_READWRITE</constant> => <constant>Pdo\Sqlite::OPEN_READWRITE</constant></member>
    <member><constant>PDO::SQLITE_OPEN_CREATE</constant> => <constant>Pdo\Sqlite::OPEN_CREATE</constant></member>
   </simplelist>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_building_ext_ldap_against_oracle_ldap -->
  </para>

  <para>
   Driver specific methods in the PDO class have been deprecated.
   List of affected methods and their replacement:

   <simplelist>
    <member><methodname>PDO::pgsqlCopyFromArray</methodname> => <methodname>Pdo\Pgsql::copyFromArray</methodname></member>
    <member><methodname>PDO::pgsqlCopyFromFile</methodname> => <methodname>Pdo\Pgsql::copyFromFile</methodname></member>
    <member><methodname>PDO::pgsqlCopyToArray</methodname> => <methodname>Pdo\Pgsql::copyToArray</methodname></member>
    <member><methodname>PDO::pgsqlCopyToFile</methodname> => <methodname>Pdo\Pgsql::copyToFile</methodname></member>
    <member><methodname>PDO::pgsqlGetNotify</methodname> => <methodname>Pdo\Pgsql::getNotify</methodname></member>
    <member><methodname>PDO::pgsqlGetPid</methodname> => <methodname>Pdo\Pgsql::getPid</methodname></member>
    <member><methodname>PDO::pgsqlLOBCreate</methodname> => <methodname>Pdo\Pgsql::lobCreate</methodname></member>
    <member><methodname>PDO::pgsqlLOBOpen</methodname> => <methodname>Pdo\Pgsql::lobOpen</methodname></member>
    <member><methodname>PDO::pgsqlLOBUnlink</methodname> => <methodname>Pdo\Pgsql::lobUnlink</methodname></member>
    <member><methodname>PDO::sqliteCreateAggregate</methodname> => <methodname>Pdo\Sqlite::createAggregate</methodname></member>
    <member><methodname>PDO::sqliteCreateCollation</methodname> => <methodname>Pdo\Sqlite::createCollation</methodname></member>
    <member><methodname>PDO::sqliteCreateFunction</methodname> => <methodname>Pdo\Sqlite::createFunction</methodname></member>
   </simplelist>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_driver_specific_pdo_constants_and_methods -->
  </para>

 </sect2>

 <sect2 xml:id="migration85.deprecated.pdo-pgsql">
  <title>PDO_PGSQL</title>

  <para>
   Constants related to transaction states have been deprecated:

   <simplelist>
    <member><constant>PDO::PGSQL_TRANSACTION_IDLE</constant></member>
    <member><constant>PDO::PGSQL_TRANSACTION_ACTIVE</constant></member>
    <member><constant>PDO::PGSQL_TRANSACTION_INTRANS</constant></member>
    <member><constant>PDO::PGSQL_TRANSACTION_INERROR</constant></member>
    <member><constant>PDO::PGSQL_TRANSACTION_UNKNOWN</constant></member>
   </simplelist>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#extpdo_deprecations -->
  </para>

 </sect2>

 <sect2 xml:id="migration85.deprecated.reflection">
  <title>Reflection</title>

  <simpara>
    The setAccessible() methods of various Reflection objects have been
    deprecated, as those no longer have an effect.
    <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_reflectionsetaccessible -->
  </simpara>

  <simpara>
   Calling <methodname>ReflectionClass::getConstant</methodname> for constants
   that do not exist has been deprecated.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_reflectionclassgetconstant_for_missing_constants -->
  </simpara>

  <simpara>
   Calling <methodname>ReflectionProperty::getDefaultValue</methodname> for
   properties without default values has been deprecated.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_reflectionpropertygetdefaultvalue_for_properties_without_default_values -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.spl">
  <title>SPL</title>

  <simpara>
   Unregistering all autoloaders by passing the
   <function>spl_autoload_call</function> function as a callback argument to
   <function>spl_autoload_unregister</function> has been deprecated.
   Instead if this is needed, one should iterate over the return value of
   <function>spl_autoload_functions</function> and call
   <function>spl_autoload_unregister</function> on each value.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_passing_spl_autoload_call_to_spl_autoload_unregister -->
  </simpara>

  <simpara>
   The <methodname>SplObjectStorage::contains</methodname>,
   <methodname>SplObjectStorage::attach</methodname>, and
   <methodname>SplObjectStorage::detach</methodname> methods have been deprecated
   in favour of <methodname>SplObjectStorage::offsetExists</methodname>,
   <methodname>SplObjectStorage::offsetSet</methodname>, and
   <methodname>SplObjectStorage::offsetUnset</methodname> respectively.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_splobjectstoragecontains_splobjectstorageattach_and_splobjectstoragedetach -->
  </simpara>

  <simpara>
   Using <classname>ArrayObject</classname> and
   <classname>ArrayIterator</classname> with objects has been deprecated.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_arrayobject_and_arrayiterator_with_objects -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.standard">
  <title>Standard</title>

  <simpara>
   The <function>socket_set_timeout</function> alias function has been deprecated.
   Use <function>stream_set_timeout</function> instead.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#formally_deprecate_socket_set_timeout -->
  </simpara>

  <simpara>
   Passing &null; to <function>readdir</function>,
   <function>rewinddir</function>, and <function>closedir</function>
   to use the last opened directory has been deprecated.
   Provide the last opened directory explicitly instead.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_passing_null_to_readdir_rewinddir_and_closedir -->
  </simpara>

  <simpara>
   Passing integers outside the interval [0, 255] to <function>chr</function>
   is now deprecated.
   This is because a byte can only hold a value within this interval.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_passing_integers_outside_the_interval_0_255_to_chr -->
  </simpara>

  <simpara>
   Passing a string which is not a single byte to <function>ord</function>
   is now deprecated, this is indicative of a bug.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_passing_string_which_are_not_one_byte_long_to_ord -->
  </simpara>

  <simpara>
   The locally predefined variable
   <link linkend="reserved.variables.httpresponseheader">$http_response_header</link>
   is deprecated. Instead one should call the
   <function>http_get_last_response_headers</function> function.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_the_http_response_header_predefined_variable -->
  </simpara>

 </sect2>

 <sect2 xml:id="migration85.deprecated.xml">
  <title>XML</title>

  <simpara>
   The <function>xml_parser_free</function> function has been deprecated,
   as <classname>XMLParser</classname> objects are freed automatically.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_5#deprecate_xml_parser_free -->
  </simpara>

 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

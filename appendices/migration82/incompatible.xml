<?xml version="1.0" encoding="utf-8"?>
<sect1 xml:id="migration82.incompatible" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Backward Incompatible Changes</title>

 <sect2 xml:id="migration82.incompatible.date">
  <title>Date</title>

  <para>
   <methodname>DateTime::createFromImmutable</methodname> now has a tentative
   return type of <type>static</type>, previously it was <type>DateTime</type>.
  </para>

  <para>
   <methodname>DateTimeImmutable::createFromMutable</methodname> now has a tentative
   return type of <type>static</type>, previously it was <type>DateTimeImmutable</type>.
  </para>

  <para>
   <literal>number</literal> symbols in <link linkend="datetime.formats.relative">relative formats</link>
   no longer accept multiple signs, e.g. <literal>+-2</literal>.
  </para>
 </sect2>

 <sect2 xml:id="migration82.incompatible.odbc">
  <title>ODBC</title>

  <para>
   The ODBC extension now escapes the username and password for the case when
   both a connection string and username/password are passed, and the string
   must be appended to. Before, user values containing values needing escaping
   could have created a malformed connection string, or injected values from
   user-provided data. The escaping rules should be identical to the .NET BCL
   DbConnectionOptions behaviour.
  </para>
 </sect2>

 <sect2 xml:id="migration82.incompatible.pdo-odbc">
  <title>PDO_ODBC</title>

  <para>
   The PDO_ODBC extension also escapes the username and password when a
   connection string is passed. See the <link linkend="migration82.incompatible.odbc">change to the ODBC extension</link> for
   further details.
  </para>
 </sect2>

 <sect2 xml:id="migration82.incompatible.standard">
  <title>Standard</title>

  <para>
   <function>glob</function> now returns an empty &array; if all paths are
   restricted by <link linkend="ini.open-basedir">open_basedir</link>.
   Previously it returned &false;.
   Moreover, a warning is now emitted even if only some paths are restricted by
   <link linkend="ini.open-basedir">open_basedir</link>.
  </para>

  <para>
   <methodname>FilesystemIterator::__construct</methodname>: prior to PHP 8.2.0,
   <constant>FilesystemIterator::SKIP_DOTS</constant> constant was always set
   and couldn't be disabled. In order to maintain the previous behaviour the constant
   must be explicitly set when using the <parameter>flags</parameter> parameter.
   The default value from <parameter>flags</parameter> parameter has
   not been modified.
  </para>

  <para>
   <function>strtolower</function>,
   <function>strtoupper</function>,
   <function>stristr</function>,
   <function>stripos</function>,
   <function>strripos</function>,
   <function>lcfirst</function>,
   <function>ucfirst</function>,
   <function>ucwords</function>,
   and <function>str_ireplace</function> are no longer locale-sensitive.
   They now perform ASCII case conversion, as if the locale were "C".
   Localized versions of these functions are available in the <link linkend="book.mbstring">MBString extension</link>.
   Moreover, <function>array_change_key_case</function>, and sorting with
   <constant>SORT_FLAG_CASE</constant> now also use ASCII case conversion.
  </para>

  <para>
   <function>str_split</function> returns an empty &array; for an empty &string; now.
   Previously it returned an array with a single empty string entry.
   <function>mb_str_split</function> is not affected by this change as it was
   already behaving like that.
  </para>

  <para>
   <function>ksort</function> and <function>krsort</function> now do numeric string
   comparison under <constant>SORT_REGULAR</constant> using the standard PHP 8 rules now.
  </para>

  <para>
   <function>var_export</function> no longer omits the leading backslash for exported classes,
   i.e. these are now fully qualified.
  </para>
 </sect2>

 <sect2 xml:id="migration82.incompatible.spl">
  <title>Standard PHP Library (SPL)</title>

  <para>
   The following methods now enforce their signature:
   <simplelist>
    <member><methodname>SplFileInfo::_bad_state_ex</methodname></member>
    <member><methodname>SplFileObject::getCsvControl</methodname></member>
    <member><methodname>SplFileObject::fflush</methodname></member>
    <member><methodname>SplFileObject::ftell</methodname></member>
    <member><methodname>SplFileObject::fgetc</methodname></member>
    <member><methodname>SplFileObject::fpassthru</methodname></member>
   </simplelist>
  </para>

  <para>
   <methodname>SplFileObject::hasChildren</methodname> now has a tentative
   return type of <type>false</type>, previously it was <type>bool</type>.
  </para>

  <para>
   <methodname>SplFileObject::getChildren</methodname> now has a tentative
   return type of <type>null</type>, previously it was
   <type class="union"><type>RecursiveIterator</type><type>null</type></type>.
  </para>

  <para>
   <classname>GlobIterator</classname> now returns an empty &array; if all
   paths are restricted by <link linkend="ini.open-basedir">open_basedir</link>.
   Previously it returned &false;.
   Moreover, a warning is now emitted even if only some paths are restricted by
   <link linkend="ini.open-basedir">open_basedir</link>.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: $ -->
<sect1 xml:id="migration80.incompatible.value-errors">
 <title>Functions which now throw ValueErrors</title>

 <sect2 xml:id="migration80.incompatible.value-errors.Core">
  <title><link linkend="book.Core">Core</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>func_get_arg</function> will throw a
     <classname>ValueError</classname>
     if argument number 1 <parameter>position</parameter>  is less than
     <literal>0</literal> or greater than the number of arguments passed to
     the currently executed function.
    </para>
   </listitem>
   <listitem>
    <para>
     <function>strncmp</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>strncasecmp</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>error_reporting</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (argument_number) does no respect the following condition: "cannot be a recursive array"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>define</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (argument_number) does no respect the following condition: "cannot be a recursive array"</member>
      <member>if argument number (1) does no respect the following condition: "cannot be a class constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>class_alias</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a user-defined class name, internal class name given"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>trigger_error</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of E_USER_ERROR, E_USER_WARNING, E_USER_NOTICE,"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>get_resources</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid resource type"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>Zend/zend.c=75=ZEND_API FILE *(*zend_fopen)(const char *filename, zend_string **opened_path);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>main/streams/plain_wrapper.c=246=static void detect_is_seekable(php_stdio_stream_data *self) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unknown option %d for stream_metadata", option</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>main/streams/plain_wrapper.c=153=static int do_fstat(php_stdio_stream_data *d, int force)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unknown option %d for stream_metadata", option</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>main/streams/plain_wrapper.c=1048=PHPAPI php_stream *_php_stream_fopen(const char *filename, const char *mode, zend_string **opened_path, int options STREAMS_DC)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unknown option %d for stream_metadata", option</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>rename</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Path cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>unlink</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Path cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>copy</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Path cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>main/streams/streams.c=1815=PHPAPI php_stream_wrapper *php_stream_locate_url_wrapper(const char *path, const char **path_for_open, int options)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Path cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.SAPI">
  <title><link linkend="book.SAPI">SAPI</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>phpdbg_color</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>element</parameter>, argument number 1, is not
       <constant>PHPDBG_COLOR_PROMPT</constant>,
       <constant>PHPDBG_COLOR_NOTICE</constant>, or
       <constant>PHPDBG_COLOR_ERROR</constant>.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.Windows">
  <title><link linkend="book.Windows">Windows</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>sapi_windows_cp_set</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>codepage</parameter>, argument number 1, is less than
       <literal>0</literal> or greater than the maximum value of an unsigned
       C integer.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>sapi_windows_cp_conv</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>in_codepage</parameter>, argument number 1, or
       if <parameter>out_codepage</parameter>, argument number 2,
       are invalid codepages or character sets.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.array">
  <title><link linkend="book.array">array</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>count</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be either COUNT_NORMAL or COUNT_RECURSIVE"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>min</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must contain at least one element"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>max</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must contain at least one element"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>extract</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid extract type"</member>
      <member>if argument number (3) does no respect the following condition: "must be a valid identifier"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>array_fill</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>array_fill_keys</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>array_pad</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be less than or equal to 1048576"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>array_multisort</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (i + 1) does no respect the following condition: "must be a valid sort flag"</member>
      <member>if argument number (Unknown) does no respect the following condition: "Array sizes are inconsistent"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>array_rand</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must be between 1 and the number of elements in argument #1 ($array)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>array_chunk</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>array_combine</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "and argument #2 ($values) must have the same number of elements"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.bcmath">
  <title><link linkend="book.bcmath">bcmath</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>bcscale</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>scale</parameter>, argument number 1, is not
       between <literal>0</literal> and the maximal value of a C integer.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>bcadd</function>,
     <function>bcsub</function>,
     <function>bcmul</function>,
     <function>bcdiv</function>,
     <function>bcmod</function>, and
     <function>bccomp</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>num1</parameter>, argument number 1,
       or <parameter>num2</parameter>, argument number 2,
       are not well-formed.
      </member>
      <member>
       if <parameter>scale</parameter>, argument number 3, is not
       between <literal>0</literal> and the maximal value of a C integer.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>bcpowmod</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>num</parameter>, argument number 1,
       <parameter>exponent</parameter>, argument number 2,
       or <parameter>modulus</parameter>, argument number 3,
       are not well-formed, or have a fractional part.
      </member>
      <member>
       if <parameter>exponent</parameter>, argument number 2, is less
       than <literal>0</literal>.
      </member>
      <member>
       if <parameter>scale</parameter>, argument number 4, is not
       between <literal>0</literal> and the maximal value of a C integer.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>bcpow</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>num</parameter>, argument number 1,
       <parameter>exponent</parameter>, argument number 2,
       are not well-formed.
      </member>
      <member>
       if <parameter>exponent</parameter>, argument number 2, is less
       than <literal>0</literal>, has a fractional part, or is larger than
       the maximum value of a C long.
      </member>
      <member>
       if <parameter>scale</parameter>, argument number 3, is not
       between <literal>0</literal> and the maximal value of a C integer.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>bcsqrt</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>num</parameter>, argument number 1
       is not well-formed or less than <literal>0</literal>.
      </member>
      <member>
       if <parameter>scale</parameter>, argument number 2, is not
       between <literal>0</literal> and the maximal value of a C integer.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.bz2">
  <title><link linkend="book.bz2">bz2</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>bzread</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>bzopen</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must be either \"r\" or \"w\""</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.calendar">
  <title><link linkend="book.calendar">calendar</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>unixtojd</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>jdtounix</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "jday must be between 2440588 and " ZEND_LONG_FMT, ZEND_LONG_MAX / SECS_PER_DAY + 2440588</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>cal_info</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid calendar ID"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>cal_days_in_month</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Invalid date"</member>
      <member>if argument number (1) does no respect the following condition: "must be a valid calendar ID"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>cal_to_jd</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid calendar ID"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>cal_from_jd</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid calendar ID"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>jdtojewish</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Year out of range (0-9999)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>easter_date</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be between 1970 and 2037 (inclusive)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>easter_days</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be between 1970 and 2037 (inclusive)"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.com_dotnet">
  <title><link linkend="book.com_dotnet">com_dotnet</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>variant_date_from_timestamp</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not go past 23:59:59, December 31, 3000, UTC"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.curl">
  <title><link linkend="book.curl">curl</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>curl_init</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): cURL option must not contain any null bytes", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>curl_copy_handle</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): The provided file handle must be writable", get_active_function_name(</member>
      <member>if argument number (2) does no respect the following condition: "is not a valid cURL option"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>curl_setopt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): The provided file handle must be writable", get_active_function_name(</member>
      <member>if argument number (2) does no respect the following condition: "is not a valid cURL option"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>curl_setopt_array</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): The provided file handle must be writable", get_active_function_name(</member>
      <member>if argument number (2) does no respect the following condition: "contains an invalid cURL option"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>curl_multi_strerror</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is not a valid cURL multi option"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>curl_multi_setopt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is not a valid cURL multi option"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>curl_share_close</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is not a valid cURL share option"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>curl_share_setopt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is not a valid cURL share option"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.date">
  <title><link linkend="book.date">date</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>date_timestamp_get</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Epoch doesn't fit in a PHP integer"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>timezone_identifiers_list</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a two-letter ISO 3166-1 compatible country code "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>date_default_timezone_get</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING, or SUNFUNCS_RET_DOUBLE"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>date_sunrise</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING, or SUNFUNCS_RET_DOUBLE"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>date_sunset</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING, or SUNFUNCS_RET_DOUBLE"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.dom">
  <title><link linkend="book.dom">dom</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>DOMDocument::__construct</methodname>,
     <methodname>DOMDocument::validate</methodname>,
     <methodname>DOMDocument::schemaValidate</methodname>,
     <methodname>DOMDocument::schemaValidateSource</methodname>,
     <methodname>DOMDocument::load</methodname>,
     <methodname>DOMDocument::loadXML</methodname>,
     <methodname>DOMDocument::relaxNGValidate</methodname>, and
     <methodname>DOMDocument::relaxNGValidateSource</methodname>
     will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "Path to document must not contain any null bytes"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMDocument::save</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMDocument::loadHTML</methodname>, and
     <methodname>DOMDocument::loadHTMLFile</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMDocument::saveHTMLFile</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMImplementation::createDocumentType</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMImplementation::createDocument</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "is an invalid DocumentType object"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMElement::setAttribute</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid XML attribute"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMElement::setAttributeNode</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must have the node attribute"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMElement::setAttributeNS</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMNamedNodeMap::item</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be between 0 and %d", INT_MAX</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMNode::lookupNamespaceURI</methodname>,
     <methodname>DOMNode::C14N</methodname>, and
     <methodname>DOMNode::C14NFile</methodname>
     will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3 + mode) does no respect the following condition: "must have a \"query\" key"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>dom_import_simplexml</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "is not a valid node type"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>DOMText::splitText</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.enchant">
  <title><link linkend="book.enchant">enchant</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>enchant_broker_request_dict</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.exif">
  <title><link linkend="book.exif">exif</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>exif_read_data</function>, and
     <function>exif_thumbnail</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.ffi">
  <title><link linkend="book.ffi">ffi</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/ffi/ffi.g=458=attributes(zend_ffi_dcl *dcl):</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((arg_pos)) does no respect the following condition: "must be between %d and %d", INT_MIN, INT_MAX); \</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.fileinfo">
  <title><link linkend="book.fileinfo">fileinfo</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>finfo_set_flags</function>,
     <function>finfo_file</function>,
     <function>finfo_buffer</function>, and
     <function>mime_content_type</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Path cannot be empty"</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.filesystem">
  <title><link linkend="book.filesystem">filesystem</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>scandir</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SplFileObject::flock</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (operation_arg_num) does no respect the following condition: "must be one of LOCK_SH, LOCK_EX, or LOCK_UN"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>flock</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (operation_arg_num) does no respect the following condition: "must be one of LOCK_SH, LOCK_EX, or LOCK_UN"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>file_get_contents</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (5) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid flag value"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>popen</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of \"r\", \"rb\", \"w\", or \"wb\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>fgets</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ftruncate</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>fread</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>fputcsv</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be a single character"</member>
      <member>if argument number (5) does no respect the following condition: "must be empty or a single character"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>fgetcsv</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a greater than or equal to 0"</member>
      <member>if argument number (3) does no respect the following condition: "must be a single character"</member>
      <member>if argument number (5) does no respect the following condition: "must be empty or a single character"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>touch</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be null when argument #3 ($atime) is an integer"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.filter">
  <title><link linkend="book.filter">filter</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>filter_has_var</function>,
     <function>filter_input_array</function>,
     <function>filter_var_array</function>,
     <function>filter_input</function>, and
     <function>filter_var</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be an INPUT_* constant"</member>
      <member>if argument number (2) does no respect the following condition: "cannot contain empty keys"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/filter/logical_filters.c=548=void php_filter_validate_domain(PHP_INPUT_FILTER_PARAM_DECL) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): \"separator\" option must be one character long", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/filter/logical_filters.c=799=void php_filter_validate_ip(PHP_INPUT_FILTER_PARAM_DECL) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): \"thousand\" option cannot be empty", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/filter/logical_filters.c=146=static int php_filter_parse_octal(const char *str, size_t str_len, zend_long *ret) { /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): \"thousand\" option cannot be empty", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.ftp">
  <title><link linkend="book.ftp">ftp</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ftp_connect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ftp_ssl_connect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ftp_set_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of FTP_TIMEOUT_SEC, FTP_AUTOSEEK, or FTP_USEPASVADDRESS"</member>
      <member>if argument number (3) does no respect the following condition: "must be greater than 0 for the FTP_TIMEOUT_SEC option"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ftp_get_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of FTP_TIMEOUT_SEC, FTP_AUTOSEEK, or FTP_USEPASVADDRESS"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.gd">
  <title><link linkend="book.gd">gd</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>imagesetstyle</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagecreatetruecolor</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagetruecolortopalette</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than 0 and less than %d", INT_MAX</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagecolormatch</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be TrueColor"</member>
      <member>if argument number (2) does no respect the following condition: "must have at least one color"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagelayereffect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (argument_number) does no respect the following condition: "must be between 0 and %d (inclusive)", gd##name##Max); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagecreate</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagecolordeallocate</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be between 0 and %d", gdImageColorsTotal(im</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagecolorsforindex</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is out of range"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagegammacorrect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imageinterlace</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Trying to use %d points in array with only %d points", npoints, nelem/2</member>
      <member>if argument number (2) does no respect the following condition: "must have an even number of elements"</member>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 3"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagepolygon</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Trying to use %d points in array with only %d points", npoints, nelem/2</member>
      <member>if argument number (2) does no respect the following condition: "must have an even number of elements"</member>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 3"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imageopenpolygon</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Trying to use %d points in array with only %d points", npoints, nelem/2</member>
      <member>if argument number (2) does no respect the following condition: "must have an even number of elements"</member>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 3"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagefilledpolygon</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Trying to use %d points in array with only %d points", npoints, nelem/2</member>
      <member>if argument number (2) does no respect the following condition: "must have an even number of elements"</member>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 3"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagecopyresized</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imageconvolution</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a 3x3 array, matrix[%d][%d] cannot be found (missing integer key)", i, j</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imageflip</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of IMG_FLIP_VERTICAL, IMG_FLIP_HORIZONTAL, or IMG_FLIP_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagecrop</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must have a \"height\" key"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imagecropauto</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid mode"</member>
      <member>if argument number (4) does no respect the following condition: "must be greater than or equal to 0 when using the threshold mode"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imageaffine</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must have 6 elements"</member>
      <member>if argument number (3) does no respect the following condition: "must have a \"height\" key"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imageaffinematrixget</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid element type"</member>
      <member>if argument number (2) does no respect the following condition: "must have a \"y\" key"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imageaffinematrixconcat</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must have 6 elements"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.gettext">
  <title><link linkend="book.gettext">gettext</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>bindtextdomain</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.gmp">
  <title><link linkend="book.gmp">gmp</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>gmp_export</function>, and
     <function>gmp_init</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 1"</member>
      <member>if argument number (3) does no respect the following condition: "cannot use multiple endian options"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_import</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a multiple of argument #2 ($word_size)"</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 1"</member>
      <member>if argument number (3) does no respect the following condition: "cannot use multiple endian options"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_strval</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be between 2 and %d, or -2 and -36", GMP_MAX_BASE</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_div_qr</function>,
     <function>gmp_div_r</function>, and
     <function>gmp_div_q</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be one of GMP_ROUND_ZERO, GMP_ROUND_PLUSINF, or GMP_ROUND_MINUSINF"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_fact</function>,
     <function>gmp_sqrt</function>, and
     <function>gmp_sqrtrem</function>
     will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_binomial</function>,
     <function>gmp_pow</function>, and
     <function>gmp_powm</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_root</function>, and
     <function>gmp_rootrem</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be odd if argument #1 ($a) is negative"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_random_bits</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_random_range</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be less than argument #2 ($maximum)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_setbit</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be less than %d * %d", INT_MAX, GMP_NUMB_BITS</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>gmp_clrbit</function>,
     <function>gmp_testbit</function>,
     <function>gmp_scan0</function>,
     <function>gmp_scan1</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.hash">
  <title><link linkend="book.hash">hash</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/hash/hash.c=101=PHP_HASH_API const php_hash_ops *php_hash_fetch_ops(zend_string *algo) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>HashContext::__construct) {</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash_tiger.c=242=static int php_tiger_unserialize(php_hashcontext_object *hash, zend_long magic, const zval *zv)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=130=static inline size_t align_to(size_t pos, size_t alignment) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=135=static size_t parse_serialize_spec(</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=228=PHP_HASH_API int php_hash_serialize_spec(const php_hashcontext_object *hash, zval *zv, const char *spec) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=175=static uint64_t one_from_buffer(size_t sz, const unsigned char *buf) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=191=static void one_to_buffer(size_t sz, unsigned char *buf, uint64_t val) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=327=PHP_HASH_API int php_hash_serialize(const php_hashcontext_object *hash, zend_long *magic, zval *zv) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=273=PHP_HASH_API int php_hash_unserialize_spec(php_hashcontext_object *hash, const zval *zv, const char *spec) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=1385=static zend_object *php_hashcontext_clone(zend_object *zobj) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=338=PHP_HASH_API int php_hash_unserialize(php_hashcontext_object *hash, zend_long magic, const zval *zv) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=1368=static void php_hashcontext_dtor(zend_object *obj) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash_gost.c=307=static int php_gost_unserialize(php_hashcontext_object *hash, zend_long magic, const zval *zv)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=120=PHP_HASH_API int php_hash_copy(const void *ops, void *orig_context, void *dest_context) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mhash_keygen_s2k</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
      <member>if argument number (4) does no respect the following condition: "must be a greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=1355=static zend_object* php_hashcontext_create(zend_class_entry *ce) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>HashContext::__unserialize</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=111=PHP_HASH_API void php_hash_register_algo(const char *algo, const php_hash_ops *ops) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash_tiger.c=235=PHP_HASH_API void PHP_TIGER192Final(unsigned char digest[24], PHP_TIGER_CTX *context)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash_md.c=295=static void MD2_Transform(PHP_MD2_CTX *context, const unsigned char *block)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash_sha3.c=155=static void PHP_SHA3_Update(PHP_SHA3_CTX* ctx,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash_sha3.c=179=static void PHP_SHA3_Final(unsigned char* digest,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash_sha3.c=238=static int php_sha3##bits##_unserialize(php_hashcontext_object *hash, \</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash_snefru.c=192=static int php_snefru_unserialize(php_hashcontext_object *hash, zend_long magic, const zval *zv)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>hash</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>hash_file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=467=static inline void php_hash_hmac_prep_key(unsigned char *K, const php_hash_ops *ops, void *context, const unsigned char *key, const size_t key_len) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=460=static inline void php_hash_string_xor(unsigned char *out, const unsigned char *in, const unsigned char *xor_with, const size_t length) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=488=static void php_hash_do_hash_hmac(</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>hash_hkdf</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (3) does no respect the following condition: "must be less than or equal to %zd", ops->digest_size * 255</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>hash_pbkdf2</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
      <member>if argument number (3) does no respect the following condition: "must be less than or equal to INT_MAX - 4 bytes"</member>
      <member>if argument number (4) does no respect the following condition: "must be greater than 0"</member>
      <member>if argument number (5) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/hash/hash.c=481=static inline void php_hash_hmac_round(unsigned char *final, const php_hash_ops *ops, void *context, const unsigned char *key, const unsigned char *data, const zend_long data_size) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>hash_hmac</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>hash_hmac_file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mhash</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid cryptographic hashing algorithm"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>hash_init</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a cryptographic hashing algorithm if HMAC is requested"</member>
      <member>if argument number (3) does no respect the following condition: "cannot be empty when HMAC is requested"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.iconv">
  <title><link linkend="book.iconv">iconv</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=118=static php_iconv_err_t _php_iconv_substr(smart_str *pretval, const char *str, size_t nbytes, zend_long offset, zend_long len, const char *enc);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=120=static php_iconv_err_t _php_iconv_mime_encode(smart_str *pretval, const char *fname, size_t fname_nbytes, const char *fval, size_t fval_nbytes, size_t max_line_len, const char *lfchars, php_iconv_enc_scheme_t enc_scheme, const char *out_charset, const char *enc);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>iconv_mime_decode</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>iconv_mime_decode_headers</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=2627=static php_iconv_err_t php_iconv_stream_filter_register_factory(void)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=2584=static php_stream_filter *php_iconv_stream_filter_factory_create(const char *name, zval *params, uint8_t persistent)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=254=static const char *get_internal_encoding(void) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>iconv_get_encoding</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=261=static const char *get_input_encoding(void) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=127=static int php_iconv_output_conflict(const char *handler_name, size_t handler_name_len);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=292=static int php_iconv_output_handler(void **nothing, php_output_context *output_context)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=268=static const char *get_output_encoding(void) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=122=static php_iconv_err_t _php_iconv_mime_decode(smart_str *pretval, const char *str, size_t str_nbytes, const char *enc, const char **next_pos, int mode);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=124=static php_iconv_err_t php_iconv_stream_filter_register_factory(void);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=125=static php_iconv_err_t php_iconv_stream_filter_unregister_factory(void);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=276=static int php_iconv_output_conflict(const char *handler_name, size_t handler_name_len)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=111=static php_iconv_err_t _php_iconv_appendl(smart_str *d, const char *s, size_t l, iconv_t cd);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=348=static php_iconv_err_t _php_iconv_appendl(smart_str *d, const char *s, size_t l, iconv_t cd)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=405=static php_iconv_err_t _php_iconv_appendc(smart_str *d, const char c, iconv_t cd)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=116=static php_iconv_err_t _php_iconv_strlen(size_t *pretval, const char *str, size_t nbytes, const char *enc);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=615=static php_iconv_err_t _php_iconv_substr(smart_str *pretval,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=896=static php_iconv_err_t _php_iconv_mime_encode(smart_str *pretval, const char *fname, size_t fname_nbytes, const char *fval, size_t fval_nbytes, size_t max_line_len, const char *lfchars, php_iconv_enc_scheme_t enc_scheme, const char *out_charset, const char *enc)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=112=static php_iconv_err_t _php_iconv_appendc(smart_str *d, const char c, iconv_t cd);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>iconv_strlen</function>,
     <function>iconv_substr</function>,
     <function>iconv_strpos</function>, and
     <function>iconv_strrpos</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>iconv_mime_encode</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>iconv</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=430=PHP_ICONV_API php_iconv_err_t php_iconv_string(const char *in_p, size_t in_len, zend_string **out, const char *out_charset, const char *in_charset)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=114=static void _php_iconv_show_error(php_iconv_err_t err, const char *out_charset, const char *in_charset);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=540=static php_iconv_err_t _php_iconv_strlen(size_t *pretval, const char *str, size_t nbytes, const char *enc)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/iconv/iconv.c=746=static php_iconv_err_t _php_iconv_strpos(size_t *pretval,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.imap">
  <title><link linkend="book.imap">imap</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>imap_open</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 4, is not a bitmask of
       the <constant>OP_<replaceable>*</replaceable></constant> constants
       and <constant>CL_EXPUNGE</constant>.
      </member>
      <member>
       if <parameter>retries</parameter>, argument number 5,
       is less than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_reopen</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 3, is not a bitmask of
       the <constant>OP_READONLY</constant>, <constant>OP_READONLY</constant>
       and <constant>OP_HALFOPEN</constant> constants.
      </member>
      <member>
       if <parameter>retries</parameter>, argument number 4,
       is less than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_gc</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 2, is not a bitmask of
       the <constant>IMAP_GC_TEXTS</constant>, <constant>IMAP_GC_ELT</constant>
       and <constant>IMAP_GC_ENV</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_close</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 2, is not
       <constant>CL_EXPUNGE</constant> or <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_body</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 3, is not a bitmask of
       the <constant>FT_UID</constant>, <constant>FT_PEEK</constant>
       and <constant>FT_INTERNAL</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_mail_copy</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 4, is not a bitmask of
       the <constant>CP_UID</constant>, and <constant>CP_MOVE</constant>
       constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_mail_move</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 4, is not
       <constant>CP_UID</constant> or <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_delete</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 3, is not
       <constant>FT_UID</constant> or <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_headerinfo</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>from_length</parameter>, argument number 3,
       or <parameter>subject_length</parameter>, argument number 4,
       is less than <literal>0</literal> or greater than
       <constant>MAILTMPLEN</constant>, which is defined by the underlying C
       IMAP library.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_fetchstructure</function> and
     <function>imap_fetch_overview</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 3, is not
       <constant>FT_UID</constant> or <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_fetchbody</function> and
     <function>imap_fetchmime</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 4, is not a bitmask of
       the <constant>FT_UID</constant>, <constant>FT_PEEK</constant>
       and <constant>FT_INTERNAL</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_savebody</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 5, is not a bitmask of
       the <constant>FT_UID</constant>, <constant>FT_PEEK</constant>
       and <constant>FT_INTERNAL</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_setflag_full</function> and
     <function>imap_clearflag_full</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>options</parameter>, argument number 4, is not
       <constant>ST_UID</constant> or <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_sort</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>criteria</parameter>, argument number 2, is not one of
       the <constant>SORT<replaceable>*</replaceable></constant> constants.
      </member>
      <member>
       if <parameter>flags</parameter>, argument number 4, is not a bitmask of
       the <constant>SE_UID</constant>, and <constant>SE_NOPREFETCH</constant>
       constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_fetchheader</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 3, is not a bitmask of
       the <constant>FT_UID</constant>, <constant>FT_PREFETCHTEXT</constant>
       and <constant>FT_INTERNAL</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_msgno</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>message_uid</parameter>, argument number 2,
       is less or equal than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_status</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 3, is not a bitmask of
       the <constant>SA_<replaceable>*</replaceable></constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_mail_compose</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>bodies</parameter>, argument number 2, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_mail</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>to</parameter>, argument number 1, is empty.
      </member>
      <member>
       if <parameter>subject</parameter>, argument number 2, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_search</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 3, is not a bitmask of
       the <constant>SE_FREE</constant>, and <constant>SE_UID</constant>
       constants.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.intl">
  <title><link linkend="book.intl">intl</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/intl/breakiterator/breakiterator_methods.cpp=192=static void _breakiter_int32_ret_int32(</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be between %d and %d", INT32_MIN, INT32_MAX</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>IntlBreakIterator::isBoundary</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be between %d and %d", INT32_MIN, INT32_MAX</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>IntlBreakIterator::getPartsIterator</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of IntlPartsIterator::KEY_SEQUENTIAL, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>intlcal_get_locale</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (getThis() ? 1 : 2) does no respect the following condition: "must be either Locale::ACTUAL_LOCALE or Locale::VALID_LOCALE"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>intlcal_set_minimal_days_in_first_week</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (getThis() ? 1 : 2) does no respect the following condition: "must be between 1 and 7"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>intlcal_set_repeated_wall_time_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (getThis() ? 1 : 2) does no respect the following condition: "must be either IntlCalendar::WALLTIME_FIRST or "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>intlcal_set_skipped_wall_time_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (getThis() ? 1 : 2) does no respect the following condition: "must be one of IntlCalendar::WALLTIME_FIRST, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/intl/calendar/gregoriancalendar_methods.cpp=46=static void _php_intlgregcal_constructor_body(</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (getThis() ? (i-1) : i) does no respect the following condition: </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>intlgregcal_is_leap_year</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (getThis() ? 1 : 2) does no respect the following condition: "must be between %d and %d", INT32_MIN, INT32_MAX</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>UConverter::reasonText) {</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a UConverter::REASON_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function> numfmt_format</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be a NumberFormatter::TYPE_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function> numfmt_parse</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be a NumberFormatter::TYPE_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>grapheme_strpos</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>grapheme_stripos</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>grapheme_strrpos</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>grapheme_strripos</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>grapheme_substr</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is too large"</member>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>grapheme_extract</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is too large"</member>
      <member>if argument number (3) does no respect the following condition: "must be one of GRAPHEME_EXTR_COUNT, GRAPHEME_EXTR_MAXBYTES, or GRAPHEME_EXTR_MAXCHARS"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>grapheme_strstr</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>grapheme_stristr</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>locale_compose</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must contain a \"%s\" key", LOC_LANG_TAG</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function> normalizer_normalize</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a a valid normalization form"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function> normalizer_is_normalized</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a a valid normalization form"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ResourceBundle::getIterator</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is too long"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ResourceBundle::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is too long"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Spoofchecker::setRestrictionLevel</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of Spoofchecker::ASCII, Spoofchecker::SINGLE_SCRIPT_RESTRICTIVE, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function> transliterator_create</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be either Transliterator::FORWARD or Transliterator::REVERSE"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function> transliterator_transliterate</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (object ? 3 : 4) does no respect the following condition: "must be greater than or equal to -1"</member>
      <member>if argument number (object ? 2 : 3) does no respect the following condition: "must be less than or equal to argument #%d ($end)", object ? 3 : 4</member>
      <member>if argument number (2) does no respect the following condition: "must be either Transliterator::FORWARD or Transliterator::REVERSE"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function> transliterator_create_from_rules</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be either Transliterator::FORWARD or Transliterator::REVERSE"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.json">
  <title><link linkend="book.json">json</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>json_decode</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be less than %d", INT_MAX</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.ldap">
  <title><link linkend="book.ldap">ldap</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ldap_get_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_parse_result</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_exop_passwd</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_bind_ext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_unbind</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must have the same number of elements as the links array"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_read</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must have the same number of elements as the links array"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_list</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must have the same number of elements as the links array"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_search</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must have the same number of elements as the links array"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_dn2ufn</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_add</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_add_ext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_mod_replace</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_mod_replace_ext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_mod_add</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_mod_add_ext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_mod_del</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_mod_del_ext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays with consecutive integer indices starting from 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_delete</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_delete_ext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_modify_batch</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"" LDAP_MODIFY_BATCH_VALUES "\" must have consecutive integer indices starting from 0", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "must contain arrays only containing the \"" LDAP_MODIFY_BATCH_ATTRIB "\", \"" LDAP_MODIFY_BATCH_MODTYPE "\" and \"" LDAP_MODIFY_BATCH_VALUES "\" keys"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_compare</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_set_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
      <member>if argument number (3) does no respect the following condition: "is too large"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_parse_reference</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_rename</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_rename_ext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_exop</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Array value for VLV control must have either an \"attrvalue\" or an \"offset\" key", get_active_function_name(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_connect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
      <member>if argument number (2) does no respect the following condition: "must be between 1 and 65535"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_get_values_len</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_errno</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_error</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ldap_sasl_bind</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.libxml">
  <title><link linkend="book.libxml">libxml</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>libxml_set_external_entity_loader</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Path cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.math">
  <title><link linkend="book.math">math</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>log</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>rad2deg</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "An infinite value cannot be converted to base %d", base</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>base_convert</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "An infinite value cannot be converted to base %d", base</member>
      <member>if argument number (2) does no respect the following condition: "must be between 2 and 36 (inclusive)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>bindec</function>,
     <function>hexdec</function>,
     <function>octdec</function>,
     <function>decbin</function>,
     <function>decoct</function>, and
     <function>dechex</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "An infinite value cannot be converted to base %d", base</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mt_rand</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Type %c: integer overflow in format string", code); \</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to argument #1 ($min)"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.mbstring">
  <title><link linkend="book.mbstring">mbstring</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>mb_detect_order</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (1) does no respect the following condition: "must specify at least one encoding"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_convert_encoding</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (3) does no respect the following condition: "must specify at least one encoding"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_detect_encoding</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (2) does no respect the following condition: "must specify at least one encoding"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_convert_variables</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (2) does no respect the following condition: "must have a multiple of 4 elements"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_http_output</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (1) does no respect the following condition: "must be a valid encoding, \"%s\" given", name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_str_split</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_strlen</function>,
     <function>mb_strpos</function>,
     <function>mb_strrpos</function>,
     <function>mb_stripos</function>,
     <function>mb_strripos</function>,
     <function>mb_strstr</function>,
     <function>mb_strrchr</function>,
     <function>mb_stristr</function>, and
     <function>mb_strrichr</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (Unknown) does no respect the following condition: "mb_strpos(): Unknown error"</member>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #1 ($haystack)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_substr_count</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (2) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_substr</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_strcut</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_strwidth</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_strimwidth</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (2) does no respect the following condition: "is out of range"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_convert_case</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (2) does no respect the following condition: "must be one of the MB_CASE_* constants"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_strtoupper</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_strtolower</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_encoding_aliases</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_encode_mimeheader</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_convert_kana</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_encode_numericentity</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (2) does no respect the following condition: "must have a multiple of 4 elements"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_decode_numericentity</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (2) does no respect the following condition: "must have a multiple of 4 elements"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_check_encoding</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (Unknown) does no respect the following condition: "mb_ord() does not support the \"%s\" encoding", enc->name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ord</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (Unknown) does no respect the following condition: "mb_chr() does not support the \"%s\" encoding", enc->name</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_chr</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
      <member>if argument number (Unknown) does no respect the following condition: "mb_chr() does not support the \"%s\" encoding", enc->name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_scrub</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (arg_num) does no respect the following condition: "contains invalid encoding \"%s\"", ZSTR_VAL(encoding_str</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_language</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid language, \"%s\" given", ZSTR_VAL(name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_internal_encoding</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid encoding, \"%s\" given", name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_http_input</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_substitute_character</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "is not a valid codepoint"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_preferred_mime_name</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a valid encoding, \"%s\" given", name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_send_mail</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (4) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_regex_encoding</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_eregi</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_split</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_match</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_search_init</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_replace</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_eregi_replace</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_replace_callback</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_search</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_search_pos</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_search_regs</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_regex_set_options</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_search_getregs</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "A thread value other than 1 is not supported by this implementation"</member>
      <member>if argument number (1) does no respect the following condition: "must not be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_ereg_search_setpos</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "is out of range"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.mysqli">
  <title><link linkend="book.mysqli">mysqli</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>mysqli_result::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be either MYSQLI_STORE_RESULT or MYSQLI_USE_RESULT"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>mysqli_result::getIterator</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of MYSQLI_NUM, MYSQLI_ASSOC, or MYSQLI_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_fetch_row</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of MYSQLI_NUM, MYSQLI_ASSOC, or MYSQLI_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_fetch_array</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of MYSQLI_NUM, MYSQLI_ASSOC, or MYSQLI_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_fetch_assoc</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of MYSQLI_NUM, MYSQLI_ASSOC, or MYSQLI_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_fetch_object</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of MYSQLI_NUM, MYSQLI_ASSOC, or MYSQLI_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/mysqli/mysqli_result_iterator.c=77=static int php_mysqli_result_iterator_valid(zend_object_iterator *iter)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of MYSQLI_NUM, MYSQLI_ASSOC, or MYSQLI_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/mysqli/mysqli_result_iterator.c=113=static void php_mysqli_result_iterator_rewind(zend_object_iterator *iter)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of MYSQLI_NUM, MYSQLI_ASSOC, or MYSQLI_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_autocommit</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (num_extra_args) does no respect the following condition: "must only contain the \"b\", \"d\", \"i\", \"s\" type specifiers"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_stmt_bind_param</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (num_extra_args) does no respect the following condition: "must only contain the \"b\", \"d\", \"i\", \"s\" type specifiers"</member>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_data_seek</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_fetch_field_direct</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be less than the number of fields for this result set"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_field_seek</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be less than the number of fields for this result set"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_kill</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_stmt_send_long_data</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_stmt_data_seek</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_stmt_attr_set</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(3)) does no respect the following condition: "must be greater than 0 for attribute MYSQLI_STMT_ATTR_PREFETCH_ROWS"</member>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_stmt_attr_get</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_fetch_all</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of MYSQLI_FETCH_NUM, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_query</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (ERROR_ARG_POS(3)) does no respect the following condition: "must be either MYSQLI_USE_RESULT or MYSQLI_STORE_RESULT"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_poll</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (4) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_begin_transaction</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be one of the MYSQLI_TRANS_* constants"</member>
      <member>if argument number (ERROR_ARG_POS(3)) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_savepoint</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mysqli_release_savepoint</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.network">
  <title><link linkend="book.network">network</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>dns_check_record</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must be a valid DNS record type"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>dns_get_record</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be between 1 and 65535 when argument #5 ($raw) is true"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.oci8">
  <title><link linkend="book.oci8">oci8</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>oci_define_by_name</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_bind_array_by_name</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (4) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_lob_save</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(3)) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_lob_read</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_lob_truncate</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_lob_erase</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(2)) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_lob_copy</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_lob_export</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (ERROR_ARG_POS(3)) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_set_prefetch</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>oci_password_change</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.odbc">
  <title><link linkend="book.odbc">odbc</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/odbc/php_odbc.c=542=void odbc_sql_error(ODBC_SQL_ERROR_PARAMS)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>odbc_binmode</function>,
     <function>odbc_longreadlen</function>,
     <function>odbc_prepare</function>,
     <function>odbc_execute</function>,
     <function>odbc_exec</function>,
     <function>odbc_next_result</function>,
     <function>odbc_tables</function>,
     <function>odbc_columns</function>,
     <function>odbc_columnprivileges</function>,
     <function>odbc_foreignkeys</function>,
     <function>odbc_gettypeinfo</function>,
     <function>odbc_primarykeys</function>,
     <function>odbc_procedurecolumns</function>,
     <function>odbc_procedures</function>,
     <function>odbc_specialcolumns</function>,
     <function>odbc_statistics</function>,
     <function>odbc_tableprivileges</function>,
     <function>odbc_commit</function>,
     <function>odbc_rollback</function>,
     <function>odbc_cursor</function>,
     <function>odbc_fetch_object</function>,
     <function>odbc_fetch_array</function>,
     <function>odbc_fetch_into</function>,
     <function>odbc_result</function>,
     <function>odbc_result_all</function>,
     <function>odbc_autocommit</function>,
     <function>odbc_close_all</function>,
     <function>odbc_close</function>,
     <function>odbc_field_len</function>,
     <function>odbc_field_scale</function>,
     <function>odbc_field_name</function>, and
     <function>odbc_field_type</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>odbc_data_source</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be either SQL_FETCH_FIRST or SQL_FETCH_NEXT"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>odbc_pconnect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
      <member>if argument number (4) does no respect the following condition: "must be one of SQL_CUR_USE_IF_NEEDED, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>odbc_setoption</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be 1 for SQLSetConnectOption(), or 2 for SQLSetStmtOption()"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>odbc_connect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (4) does no respect the following condition: "must be one of SQL_CUR_USE_IF_NEEDED, "</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.openssl">
  <title><link linkend="book.openssl">openssl</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=324=static int DH_set0_pqg(DH *dh, BIGNUM *p, BIGNUM *q, BIGNUM *g)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=333=static void DH_get0_key(const DH *dh, const BIGNUM **pub_key, const BIGNUM **priv_key)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=3988=static zend_bool php_openssl_pkey_init_dh(DH *dh, zval *data)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=518=static EVP_PKEY *php_openssl_pkey_from_zval(zval *val, int public_key, char *passphrase, size_t passphrase_len);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=3775=static int php_openssl_is_private_key(EVP_PKEY* pkey)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkey_get_details</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkey_new</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=516=static X509 *php_openssl_x509_from_zval(zval *val, bool *free_cert);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=517=static X509_REQ *php_openssl_csr_from_param(zend_object *csr_obj, zend_string *csr_str);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_spki_new</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_check_private_key</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_verify</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkcs12_export_to_file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkcs12_export</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_csr_sign</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_csr_new</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=3470=static int php_openssl_pem_password_cb(char *buf, int size, int rwflag, void *userdata)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkey_export_to_file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkey_export</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkey_get_public</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkey_get_private</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkey_derive</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkcs7_sign</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkcs7_decrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_cms_sign</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_cms_decrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
      <member>if argument number (5) does no respect the following condition: "must be an OPENSSL_ENCODING_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_private_encrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_private_decrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_public_encrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_public_decrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_sign</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_verify</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_seal</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
      <member>if argument number (4) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (6) does no respect the following condition: "cannot be null for the chosen cipher algorithm"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_open</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
      <member>if argument number (6) does no respect the following condition: "cannot be null for the chosen cipher algorithm"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=3485=static EVP_PKEY *php_openssl_pkey_from_zval(zval *val, int public_key, char *passphrase, size_t passphrase_len)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=3644=static EVP_PKEY * php_openssl_generate_private_key(struct php_x509_request * req)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=520=static int php_openssl_is_private_key(EVP_PKEY* pkey);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_checkpurpose</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkcs7_verify</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_cms_verify</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_parse</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_csr_get_subject</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=522=static STACK_OF(X509) * php_openssl_load_all_certs_from_file(char *certfile);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=523=static EVP_PKEY * php_openssl_generate_private_key(struct php_x509_request * req);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_spki_export_challenge</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_get_cert_locations</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=1391=static X509 *php_openssl_x509_from_str(zend_string *cert_str) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_export_to_file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_export</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_fingerprint</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_read</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=1449=static X509 *php_openssl_x509_from_zval(zval *val, bool *free_cert)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=1438=static X509 *php_openssl_x509_from_param(zend_object *cert_obj, zend_string *cert_str) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_x509_free</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pkcs7_encrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_cms_encrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=3020=static X509_REQ *php_openssl_csr_from_param(zend_object *csr_obj, zend_string *csr_str)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_csr_export_to_file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_csr_export</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_csr_get_public_key</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=515=static X509 *php_openssl_x509_from_param(zend_object *cert_obj, zend_string *cert_str);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/openssl.c=2986=static X509_REQ *php_openssl_csr_from_str(zend_string *csr_str)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((_arg_num)) does no respect the following condition: #_name" is too long"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_pbkdf2</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_decrypt</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_cipher_iv_length</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>openssl_random_pseudo_bytes</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1079=static int php_openssl_get_proto_version_flags(int flags, int min, int max) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "A thread value other than 1 is not supported by this implementation"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1104=static void php_openssl_limit_handshake_reneg(const SSL *ssl) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1174=static void php_openssl_init_server_reneg_limit(php_stream *stream, php_openssl_netstream_data_t *sslsock) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "A thread value other than 1 is not supported by this implementation"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1605=static int php_openssl_server_alpn_callback(SSL *ssl_handle,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1621=int php_openssl_setup_crypto(php_stream *stream,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1235=static int php_openssl_set_server_dh_param(php_stream * stream, SSL_CTX *ctx) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1284=static int php_openssl_set_server_ecdh_curve(php_stream *stream, SSL_CTX *ctx) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1212=static RSA *php_openssl_tmp_rsa_cb(SSL *s, int is_export, int keylength)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1320=static int php_openssl_set_server_specific_opts(php_stream *stream, SSL_CTX *ctx) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1573=static unsigned char *php_openssl_alpn_protos_parse(unsigned short *outlen, const char *in) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "A thread value other than 1 is not supported by this implementation"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=2356=static int php_openssl_sockop_set_option(php_stream *stream, int option, int value, void *ptrparam)  /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "A thread value other than 1 is not supported by this implementation"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1388=static SSL_CTX *php_openssl_create_sni_server_ctx(char *cert_path, char *key_path)  /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "A thread value other than 1 is not supported by this implementation"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1416=static int php_openssl_enable_server_sni(php_stream *stream, php_openssl_netstream_data_t *sslsock)  /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1863=static int php_openssl_enable_crypto(php_stream *stream,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "A thread value other than 1 is not supported by this implementation"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=2279=static int php_openssl_sockop_flush(php_stream *stream) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "A thread value other than 1 is not supported by this implementation"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1165=static void php_openssl_info_callback(const SSL *ssl, int where, int ret) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=1543=static void php_openssl_enable_client_sni(php_stream *stream, php_openssl_netstream_data_t *sslsock) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=2285=static int php_openssl_sockop_stat(php_stream *stream, php_stream_statbuf *ssb) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/openssl/xp_ssl.c=2291=static inline int php_openssl_tcp_sockop_accept(php_stream *stream, php_openssl_netstream_data_t *sock,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.pcntl">
  <title><link linkend="book.pcntl">pcntl</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>pcntl_signal</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be less than %d", NSIG</member>
      <member>if argument number (2) does no respect the following condition: "must be either SIG_DFL or SIG_IGN when an integer value is given"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pcntl_signal_get_handler</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be between 1 and 32"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pcntl_getpriority</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of PRIO_PGRP, PRIO_USER, or PRIO_PROCESS"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pcntl_setpriority</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be one of PRIO_PGRP, PRIO_USER, or PRIO_PROCESS"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pcntl_unshare</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a combination of CLONE_* flags"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.pcre">
  <title><link linkend="book.pcre">pcre</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>imap_append</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (4) does no respect the following condition: "must be a PREG_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>preg_match_all</function>,
     <function>preg_match</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (4) does no respect the following condition: "must be a PREG_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/pcre/php_pcre.c=1117=static void php_do_pcre_match(INTERNAL_FUNCTION_PARAMETERS, int global) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (4) does no respect the following condition: "must be a PREG_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>RegexIterator::accept</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (4) does no respect the following condition: "must be a PREG_* constant"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.pdo">
  <title><link linkend="book.pdo">pdo</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>PDO::prepare</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "PDO::ATTR_STATEMENT_CLASS value must be an array with the format "</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDO::inTransaction</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "PDO::ATTR_STATEMENT_CLASS value must be an array with the format "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDO::setAttribute</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "PDO::ATTR_STATEMENT_CLASS value must be an array with the format "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDO::exec</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDO::query</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Can only use PDO::FETCH_FUNC in PDOStatement::fetchAll()"</member>
      <member>if argument number (mode_arg_num) does no respect the following condition: "must be one of the PDO::FETCH_* constants"</member>
      <member>if argument number (arg1_arg_num) does no respect the following condition: "must be greater than or equal to 0"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDOStatement::execute</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Can only use PDO::FETCH_FUNC in PDOStatement::fetchAll()"</member>
      <member>if argument number (mode_arg_num) does no respect the following condition: "must be a bitmask of PDO::FETCH_* constants"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDOStatement::fetchColumn</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Can only use PDO::FETCH_FUNC in PDOStatement::fetchAll()"</member>
      <member>if argument number (mode_arg_num) does no respect the following condition: "must be a bitmask of PDO::FETCH_* constants"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDOStatement::fetch</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Can only use PDO::FETCH_FUNC in PDOStatement::fetchAll()"</member>
      <member>if argument number (mode_arg_num) does no respect the following condition: "must be a bitmask of PDO::FETCH_* constants"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDOStatement::fetchObject</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Can only use PDO::FETCH_FUNC in PDOStatement::fetchAll()"</member>
      <member>if argument number (mode_arg_num) does no respect the following condition: "must be a bitmask of PDO::FETCH_* constants"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDOStatement::fetchAll</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Can only use PDO::FETCH_FUNC in PDOStatement::fetchAll()"</member>
      <member>if argument number (mode_arg_num) does no respect the following condition: "must be one of the PDO::FETCH_* constants"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDOStatement::getColumnMeta</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Can only use PDO::FETCH_FUNC in PDOStatement::fetchAll()"</member>
      <member>if argument number (mode_arg_num) does no respect the following condition: "must be one of the PDO::FETCH_* constants"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDOStatement::setFetchMode</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Can only use PDO::FETCH_FUNC in PDOStatement::fetchAll()"</member>
      <member>if argument number (mode_arg_num) does no respect the following condition: "must be one of the PDO::FETCH_* constants"</member>
      <member>if argument number (arg1_arg_num) does no respect the following condition: "must be greater than or equal to 0"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDOStatement::nextRowset</methodname>,
     <methodname>PDOStatement::closeCursor</methodname>,
     <methodname>PDOStatement::bindValue</methodname>,
     <methodname>PDOStatement::bindParam</methodname>,
     <methodname>PDOStatement::bindColumn</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SQLite3Stmt::getSQL</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 1"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.pdo_pgsql">
  <title><link linkend="book.pdo_pgsql">pdo_pgsql</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>PDO_PGSql_Ext::pgsqlCopyFromArray</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PDO_PGSql_Ext::pgsqlGetNotify</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of PDO::FETCH_BOTH, PDO::FETCH_ASSOC, or PDO::FETCH_NUM"</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.pgsql">
  <title><link linkend="book.pgsql">pgsql</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>pg_last_notice</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of PGSQL_NOTICE_LAST, PGSQL_NOTICE_ALL, or PGSQL_NOTICE_CLEAR"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_field_table</function>,
     <function>pg_field_name</function>,
     <function>pg_field_size</function>,
     <function>pg_field_type</function>, and
     <function>pg_field_type_oid</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be less than the number of fields for this result set"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_field_num</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Argument #%d must be less than the number of fields for this result set", arg_num</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_fetch_result</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Argument #%d must be less than the number of fields for this result set", arg_num</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
      <member>if argument number (3) does no respect the following condition: "must be one of PGSQL_ASSOC, PGSQL_NUM, or PGSQL_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_result_seek</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Argument #%d must be less than the number of fields for this result set", arg_num</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_field_prtlen</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Argument #%d must be less than the number of fields for this result set", arg_num</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_field_is_null</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Argument #%d must be less than the number of fields for this result set", arg_num</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_fetch_row</function>,
     <function>pg_fetch_assoc</function>,
     <function>pg_fetch_array</function>,
     <function>pg_fetch_object</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
      <member>if argument number (3) does no respect the following condition: "must be one of PGSQL_ASSOC, PGSQL_NUM, or PGSQL_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_fetch_all</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Array of values must be an associative array with string keys"</member>
      <member>if argument number (2) does no respect the following condition: "must be one of PGSQL_ASSOC, PGSQL_NUM, or PGSQL_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_fetch_all_columns</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be less than the number of fields for this result set"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_lo_create</function>,
     <function>pg_lo_unlink</function>,
     <function>pg_lo_open</function>,
     <function>pg_lo_import</function>,
     <function>pg_lo_export</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Invalid OID value passed"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_lo_write</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be less than or equal to the length of argument #2 ($buf)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_lo_seek</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be one of PGSQL_SEEK_SET, PGSQL_SEEK_CUR, or PGSQL_SEEK_END"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_result_status</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be either PGSQL_STATUS_LONG or PGSQL_STATUS_STRING"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_get_notify</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of PGSQL_ASSOC, PGSQL_NUM, or PGSQL_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_meta_data</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Array of values must be an associative array with string keys"</member>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_convert</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Array of values must be an associative array with string keys"</member>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (4) does no respect the following condition: "must be a valid bit mask of PGSQL_CONV_IGNORE_DEFAULT, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_insert</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Array of values must be an associative array with string keys"</member>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (4) does no respect the following condition: "must be a valid bit mask of PGSQL_CONV_FORCE_NULL, PGSQL_DML_NO_CONV, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_update</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Array of values must be an associative array with string keys"</member>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (5) does no respect the following condition: "must be a valid bit mask of PGSQL_CONV_FORCE_NULL, PGSQL_DML_NO_CONV, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_delete</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Array of values must be an associative array with string keys"</member>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (4) does no respect the following condition: "must be a valid bit mask of PGSQL_CONV_FORCE_NULL, PGSQL_DML_NO_CONV, "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pg_select</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (4) does no respect the following condition: "must be a valid bit mask of PGSQL_CONV_FORCE_NULL, PGSQL_DML_NO_CONV, "</member>
      <member>if argument number (5) does no respect the following condition: "must be one of PGSQL_ASSOC, PGSQL_NUM, or PGSQL_BOTH"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.phar">
  <title><link linkend="book.phar">phar</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/phar/func_interceptors.c=92=PHAR_FUNC(phar_file_get_contents) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (5) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PharFileInfo::chmod</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Path cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::setDefaultStub</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (index ? 1 : 2) does no respect the following condition: "must be null for a tar- or zip-based phar stub, string given"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=252=int phar_archive_delref(phar_archive_data *phar) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=338=static void destroy_phar_data(zval *zv) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=390=void destroy_phar_manifest_entry(zval *zv) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=398=int phar_entry_delref(phar_entry_data *idata) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=741=static int phar_parse_pharfile(php_stream *fp, char *fname, size_t fname_len, char *alias, size_t alias_len, zend_long halt_offset, phar_archive_data** pphar, uint32_t compression, char **error) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/dirstream.c=396=int phar_wrapper_mkdir(php_stream_wrapper *wrapper, const char *url_from, int mode, int options, php_stream_context *context) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=2540=int phar_flush(phar_archive_data *phar, char *user_stub, zend_long len, int convert, char **error) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::offsetGet</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::offsetSet</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::addFile</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::addFromString</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=675=void phar_metadata_tracker_copy(phar_metadata_tracker *dest, const phar_metadata_tracker *source, int persistent) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::copy</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=693=void phar_metadata_tracker_clone(phar_metadata_tracker *tracker) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=710=void phar_parse_metadata_lazy(const char *buffer, phar_metadata_tracker *tracker, uint32_t zip_metadata_len, int persistent) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/tar.c=127=int phar_open_or_create_tar(char *fname, size_t fname_len, char *alias, size_t alias_len, int is_data, uint32_t options, phar_archive_data** pphar, char **error) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=1391=int phar_create_or_parse_filename(char *fname, size_t fname_len, char *alias, size_t alias_len, zend_bool is_data, uint32_t options, phar_archive_data** pphar, char **error) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=3278=static zend_op_array *phar_compile_file(zend_file_handle *file_handle, int type) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::loadPhar</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::unlinkArchive</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PharFileInfo::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=1545=int phar_open_from_filename(char *fname, size_t fname_len, char *alias, size_t alias_len, uint32_t options, phar_archive_data** pphar, char **error) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/dirstream.c=528=int phar_wrapper_rmdir(php_stream_wrapper *wrapper, const char *url, int options, php_stream_context *context) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/phar.c=2241=int phar_split_fname(const char *filename, size_t filename_len, char **arch, size_t *arch_len, char **entry, size_t *entry_len, int executable, int for_create) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::webPhar</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::mapPhar</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/phar/tar.c=906=static int phar_tar_setupmetadata(zval *zv, void *argument) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>Phar::getMetadata</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>PharFileInfo::getMetadata</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.posix">
  <title><link linkend="book.posix">posix</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>posix_mknod</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "cannot be 0 for the POSIX_S_IFCHR and POSIX_S_IFBLK modes"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.reflection">
  <title><link linkend="book.reflection">reflection</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>ReflectionClassConstant::__toString</methodname>,
     <methodname>ReflectionFunctionAbstract::getAttributes</methodname>,
     <methodname>ReflectionParameter::getAttributes</methodname>,
     <methodname>ReflectionClassConstant::getAttributes</methodname>,
     <methodname>ReflectionClass::getAttributes</methodname>,
     <methodname>ReflectionProperty::getAttributes</methodname>,
     <methodname>ReflectionZendExtension::__toString</methodname>,
     <methodname>ReflectionClass::__toString</methodname>, and
     <methodname>ReflectionExtension::__toString</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid attribute filter flag"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/reflection/php_reflection.c=1165=static void reflect_attributes(INTERNAL_FUNCTION_PARAMETERS, HashTable *attributes,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid attribute filter flag"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ReflectionParameter::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ReflectionMethod::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be null when argument #1 ($objectOrMethod) is an object"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ReflectionMethod::getClosure</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be null for non-static methods"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.session">
  <title><link linkend="book.session">session</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>session_set_cookie_params</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must contain at least 1 valid key"</member>
      <member>if argument number (2) does no respect the following condition: "must be null when argument #1 ($lifetime_or_options) is an array"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>session_module_name</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be \"user\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/session/session.c=1221=static int php_session_cache_limiter(void) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.shmop">
  <title><link linkend="book.shmop">shmop</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>shmop_open</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid access mode"</member>
      <member>if argument number (4) does no respect the following condition: "is too large"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>shmop_read</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be between 0 and the segment size"</member>
      <member>if argument number (3) does no respect the following condition: "is out of range"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>shmop_write</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "is out of range"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.simplexml">
  <title><link linkend="book.simplexml">simplexml</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/simplexml/simplexml.c=1672=SXE_METHOD(addChild)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/simplexml/simplexml.c=1736=SXE_METHOD(addAttribute)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>simplexml_load_file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "is too large"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>simplexml_load_string</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "is too long"</member>
      <member>if argument number (3) does no respect the following condition: "is too large"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.snmp">
  <title><link linkend="book.snmp">snmp</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>SNMP::setSecurity</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmpget</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmpgetnext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmpwalk</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmprealwalk</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmpset</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp2_get</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp2_getnext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp2_walk</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp2_real_walk</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp2_set</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp3_get</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp3_getnext</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp3_walk</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp3_real_walk</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp3_set</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SNMP::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
      <member>if argument number (1) does no respect the following condition: "must be a valid SNMP protocol version"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SNMP::close</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SNMP::get</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SNMP::getnext</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SNMP::walk</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SNMP::set</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SNMP::getErrno</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SNMP::getError</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Security protocol must be \"DES\""</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/snmp/snmp.c=1839=PHP_SNMP_LONG_PROPERTY_READER_FUNCTION(exceptions_enabled)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "SNMP retrieval method must be a bitmask of SNMP_VALUE_LIBRARY, SNMP_VALUE_PLAIN, and SNMP_VALUE_OBJECT"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/snmp/snmp.c=1902=PHP_SNMP_BOOL_PROPERTY_WRITER_FUNCTION(oid_increasing_check)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "SNMP output print format must be an SNMP_OID_OUTPUT_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp_set_oid_output_format</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be an SNMP_OID_OUTPUT_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>snmp_set_valueretrieval</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be a bitmask of SNMP_VALUE_LIBRARY, SNMP_VALUE_PLAIN, and SNMP_VALUE_OBJECT"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.soap">
  <title><link linkend="book.soap">soap</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>SoapParam::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SoapHeader::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must be longer than 2 characters"</member>
      <member>if argument number (5) does no respect the following condition: "must be one of SOAP_ACTOR_NEXT, SOAP_ACTOR_NONE, or SOAP_ACTOR_UNLIMATERECEIVER"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SoapFault::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "is not a valid fault code"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SoapVar::__construct</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is not a valid encoding"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SoapServer::setPersistence</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number () does no respect the following condition: ext/soap/soap.c:978:			zend_argument_value_error(</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SoapServer::addFunction</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be SOAP_FUNCTIONS_ALL when an integer is passed"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.sockets">
  <title><link linkend="book.sockets">sockets</link></title>

  <!-- ext/sockets/multicast.c throws the following ValueError that need to be determined which functions throw:
      <member>if argument number (Unknown) does no respect the following condition: "Index must be between 0 and %u", UINT_MAX</member>
      <member>if argument number (Unknown) does no respect the following condition: "No key \"%s\" passed in optval", key</member>
      <member>if argument number (Unknown) does no respect the following condition: "Option %s is inapplicable to this socket type",</member>
  -->
  <!-- TODO Double check that functions in ext/sockets/sendrecvmsg.c that use LONG_CHECK_VALID_INT() have the corresponding 
   "must be between %d and %d", INT_MIN, INT_MAX); ValueError entry -->
  <itemizedlist>
   <listitem>
    <para>
     <function>socket_set_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Option %s is inapplicable to this socket type",</member>
      <member>if argument number (4) does no respect the following condition: "must have key \"%s\"", usec_key</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_connect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "No key \"%s\" passed in optval", key</member>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET, or AF_INET6"</member>
      <member>if argument number (2) does no respect the following condition: "must be less than %d", sizeof(s_un.sun_path</member>
      <member>if argument number (3) does no respect the following condition: "cannot be null when the socket type is AF_INET"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_bind</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "No key \"%s\" passed in optval", key</member>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET, or AF_INET6"</member>
      <member>if argument number (2) does no respect the following condition: "must be less than %d", sizeof(sa->sun_path</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_sendto</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "No key \"%s\" passed in optval", key</member>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET, or AF_INET6"</member>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 0"</member>
      <member>if argument number (6) does no respect the following condition: "cannot be null when the socket type is AF_INET6"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_recvmsg</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((arg_pos)) does no respect the following condition: "must be between %d and %d", INT_MIN, INT_MAX); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_sendmsg</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((arg_pos)) does no respect the following condition: "must be between %d and %d", INT_MIN, INT_MAX); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_get_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((arg_pos)) does no respect the following condition: "must be between %d and %d", INT_MIN, INT_MAX); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_cmsg_space</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number ((arg_pos)) does no respect the following condition: "must be between %d and %d", INT_MIN, INT_MAX); \</member>
      <member>if argument number (Unknown) does no respect the following condition: "Pair level " ZEND_LONG_FMT " and/or type " ZEND_LONG_FMT " is not supported",</member>
      <member>if argument number (3) does no respect the following condition: "is too large"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_select</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "socket_select(): At least one array argument must be passed"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_write</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_getsockname</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET, or AF_INET6"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_getpeername</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET, or AF_INET6"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_create</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET6, or AF_INET"</member>
      <member>if argument number (2) does no respect the following condition: "must be one of SOCK_STREAM, SOCK_DGRAM, SOCK_SEQPACKET,"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_send</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_recvfrom</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET, or AF_INET6"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_create_pair</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET6, or AF_INET"</member>
      <member>if argument number (2) does no respect the following condition: "must be one of SOCK_STREAM, SOCK_DGRAM, SOCK_SEQPACKET,"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_addrinfo_lookup</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must only contain array keys \"ai_flags\", \"ai_socktype\", "</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_addrinfo_bind</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be one of AF_UNIX, AF_INET, or AF_INET6"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>socket_addrinfo_connect</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "socket type must be one of AF_UNIX, AF_INET, or AF_INET6"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.spl">
  <title><link linkend="book.spl">SPL</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>spl_autoload_register</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>callback</parameter>, argument number 1,
       is the <function>spl_autoload_call</function> function.
      </member>
     </simplelist>
    </para>
   </listitem>
   <!-- TODO Need to split up for named arguments -->
   <listitem>
    <para>
     <methodname>SplFileInfo::__construct</methodname>,
     <methodname>SplFileInfo::getPathInfo</methodname>,
     <methodname>FilesystemIterator::current</methodname>,
     <methodname>SplFileInfo::openFile</methodname>,
     <methodname>SplFileInfo::getFileInfo</methodname>,
     <methodname>RecursiveDirectoryIterator::hasChildren</methodname>,
     <methodname>SplFileInfo::__debugInfo</methodname>,
     <methodname>SplFileInfo::getPathname</methodname>,
     <methodname>DirectoryIterator::__construct</methodname>,
     <methodname>FilesystemIterator::__construct</methodname>,
     <methodname>RecursiveDirectoryIterator::__construct</methodname>,
     <methodname>GlobIterator::__construct</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if argument number 1, is an empty string.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SplFileObject::fgetcsv</methodname>, and
     <methodname>SplFileObject::setCsvControl</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>separator</parameter>, argument number 1,
       is not a single character.
      </member>
      <member>
       if <parameter>enclosure</parameter>, argument number 2,
       is not a single character.
      </member>
      <member>
       if <parameter>escape</parameter>, argument number 3,
       is not a single character or the empty string.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SplFileObject::fputcsv</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>separator</parameter>, argument number 2,
       is not a single character.
      </member>
      <member>
       if <parameter>enclosure</parameter>, argument number 3,
       is not a single character.
      </member>
      <member>
       if <parameter>escape</parameter>, argument number 4,
       is not a single character or the empty string.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SplFileObject::fread</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      if <parameter>length</parameter>, argument number 1,
      is less than <literal>0</literal>.
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SplFileObject::seek</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>offset</parameter>, argument number 1,
       is less than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>SplFileObject::setMaxLineLen</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>maxLength</parameter>, argument number 1,
       is less than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>

   <listitem>
    <para>
     <methodname>SplFixedArray::__construct</methodname>, and
     <methodname>SplFixedArray::setSize</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>size</parameter>, argument number 1,
       is less than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>

  <para>
   Iterators:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <methodname>RecursiveIteratorIterator::setMaxDepth</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>maxDepth</parameter>, argument number 1,
       is less than <literal>-1</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>RecursiveTreeIterator::setPrefixPart</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>part</parameter>, argument number 1, is not one of the
       <constant>RecursiveTreeIterator::PREFIX_<replaceable>*</replaceable></constant>
       constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>LimitIterator::__construct</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>offset</parameter>, argument number 2,
       is less than <literal>0</literal>.
      </member>
      <member>
       if <parameter>limit</parameter>, argument number 3,
       is less than <literal>-1</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>RegexIterator::__construct</methodname>, and
     <methodname>RecursiveRegexIterator::__construct</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>mode</parameter>, argument number 3, is not one of the
       <constant>RegexIterator::MATCH</constant>,
       <constant>RegexIterator::GET_MATCH</constant>,
       <constant>RegexIterator::ALL_MATCHES</constant>,
       <constant>RegexIterator::SPLIT</constant>, or
       <constant>RegexIterator::REPLACE</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>RegexIterator::setMode</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>mode</parameter>, argument number 1, is not one of the
       <constant>RegexIterator::MATCH</constant>,
       <constant>RegexIterator::GET_MATCH</constant>,
       <constant>RegexIterator::ALL_MATCHES</constant>,
       <constant>RegexIterator::SPLIT</constant>, or
       <constant>RegexIterator::REPLACE</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>CachingIterator::__construct</methodname>, and
     <methodname>RecursiveCachingIterator::__construct</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 2, doesn't contain just one of the
       <constant>CachingIterator::CALL_TOSTRING</constant>,
       <constant>CachingIterator::TOSTRING_USE_KEY</constant>,
       <constant>CachingIterator::TOSTRING_USE_CURRENT</constant>, or
       <constant>CachingIterator::TOSTRING_USE_INNER</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>CachingIterator::setFlags</methodname> will throw a ValueError in the following conditions:
     <simplelist>
      <member>
       if <parameter>flags</parameter>, argument number 1, doesn't contain just one of the
       <constant>CachingIterator::CALL_TOSTRING</constant>,
       <constant>CachingIterator::TOSTRING_USE_KEY</constant>,
       <constant>CachingIterator::TOSTRING_USE_CURRENT</constant>, or
       <constant>CachingIterator::TOSTRING_USE_INNER</constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.standard">
  <title><link linkend="book.standard">standard</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>assert_options</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be an ASSERT_* constant"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>putenv</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must have a valid syntax"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>sleep</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>usleep</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>time_nanosleep</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Nanoseconds was not in the range 0 to 999 999 999 or seconds was negative"</member>
      <member>if argument number (1) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>error_log</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>parse_ini_file</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>exec</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>system</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>passthru</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>escapeshellcmd</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>escapeshellarg</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>shell_exec</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ftok</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
      <member>if argument number (2) does no respect the following condition: "must be a single character"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>header_remove</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): option \"%s\" is invalid", get_active_function_name(), ZSTR_VAL(key</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/info.c=89=static ZEND_COLD void php_info_print_stream_hash(const char *name, HashTable *ht) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/info.c=55=static ZEND_COLD int php_info_print_html_esc(const char *str, size_t len) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): option \"%s\" is invalid", get_active_function_name(), ZSTR_VAL(key</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/info.c=67=static ZEND_COLD int php_info_printf(const char *fmt, ...) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>setcookie</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): option \"%s\" is invalid", get_active_function_name(), ZSTR_VAL(key</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>setrawcookie</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): option \"%s\" is invalid", get_active_function_name(), ZSTR_VAL(key</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/head.c:94:		zend_argument_value_error(1, "cannot contain \"=\", " ILLEGAL_COOKIE_CHARACTER);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): \"expires\" option cannot have a year greater than 9999",</member>
      <member>if argument number (2) does no respect the following condition: "cannot contain " ILLEGAL_COOKIE_CHARACTER</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>exif_imagetype</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>image_type_to_extension</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>getimagesize</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>getimagesizefromstring</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>iptcembed</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "is too large"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_savebody</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>imap_timeout</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mb_send_mail</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/mail.c=421=PHPAPI int php_mail(const char *to, const char *subject, const char *message, const char *headers, const char *extra_cmd)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/pageinfo.c=51=PHPAPI void php_statpage(void)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>getmyuid</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>mail</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
      <member>if argument number (4) does no respect the following condition: "must not contain any null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>getmygid</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>getmyinode</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>getlastmod</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/mail.c=86=static zend_bool php_mail_build_headers_check_field_name(zend_string *key)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Header \"%s\" has invalid format, or contains invalid characters", ZSTR_VAL(key</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/mail.c=60=static zend_bool php_mail_build_headers_check_field_value(zval *val)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Header \"%s\" has invalid format, or contains invalid characters", ZSTR_VAL(key</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/mail.c=58=extern zend_long php_getuid(void);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/mail.c=103=static void php_mail_build_headers_elem(smart_str *s, zend_string *key, zval *val)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Header \"%s\" has invalid format, or contains invalid characters", ZSTR_VAL(key</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/pageinfo.c=79=zend_long php_getgid(void)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "The additional headers cannot contain the \"Subject\" header"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>pack</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "64-bit format codes are not available for 32-bit versions of PHP"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>unpack</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Invalid format type %c", type</member>
      <member>if argument number (3) does no respect the following condition: "must be contained in argument #2 ($data)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=81=static zend_string* php_password_make_salt(size_t length) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Invalid bcrypt cost parameter specified: " ZEND_LONG_FMT, cost</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=110=static zend_string* php_password_get_salt(zval *unused_, size_t required_salt_len, HashTable *options) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Invalid bcrypt cost parameter specified: " ZEND_LONG_FMT, cost</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=140=static zend_bool php_password_bcrypt_needs_rehash(const zend_string *hash, zend_array *options) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Invalid bcrypt cost parameter specified: " ZEND_LONG_FMT, cost</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=279=static zend_bool php_password_argon2_needs_rehash(const zend_string *hash, zend_array *options) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s", argon2_error_message(status</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=305=static zend_string *php_password_argon2_hash(const zend_string *password, zend_array *options, argon2_type type) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s", argon2_error_message(status</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=120=static zend_bool php_password_bcrypt_valid(const zend_string *hash) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Invalid bcrypt cost parameter specified: " ZEND_LONG_FMT, cost</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=264=static int php_password_argon2_get_info(zval *return_value, const zend_string *hash) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Generated salt too short"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=241=static int extract_argon2_parameters(const zend_string *hash,</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s", argon2_error_message(status</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/password.c=126=static int php_password_bcrypt_get_info(zval *return_value, const zend_string *hash) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Invalid bcrypt cost parameter specified: " ZEND_LONG_FMT, cost</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>password_hash</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid password hashing algorithm"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/php_fopen_wrapper.c=149=static void php_stream_apply_filter_list(php_stream *stream, char *filterlist, int read_chain, int write_chain) /* {{{ */</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/proc_open.c=519=static char *create_win_command_from_args(HashTable *args)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Command array element %d contains a null byte", elem_num</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/proc_open.c=472=static zend_string *get_valid_arg_string(zval *zv, int elem_num) {</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Command array element %d contains a null byte", elem_num</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/proc_open.c=496=static void append_win_escaped_arg(smart_string *str, char *arg)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Command array element %d contains a null byte", elem_num</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>proc_open</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Redirection target must be of type int, %s given", zend_zval_type_name(ztarget</member>
      <member>if argument number (1) does no respect the following condition: "must have at least one element"</member>
      <member>if argument number (2) does no respect the following condition: "must only contain arrays and streams"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/proc_open.c=559=static void init_startup_info(STARTUPINFOW *si, descriptorspec_item *descriptors, int ndesc)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Command array element %d contains a null byte", elem_num</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/proc_open.c=614=static char* get_command_from_array(HashTable *array, char ***argv, int num_elems)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Command array element %d contains a null byte", elem_num</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/proc_open.c=488=static void append_backslashes(smart_string *str, size_t num_bs)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Command array element %d contains a null byte", elem_num</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ftp_set_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/proc_open.c=548=static int get_option(zval *other_options, char *opt_name)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/standard/proc_open.c=680=static int set_proc_descriptor_to_pty(descriptorspec_item *desc, int *master_fd, int *slave_fd)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Missing %s", param_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>random_bytes</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>random_int</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "must be less than or equal to argument #2 ($max)"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>settype</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Cannot convert to resource type"</member>
      <member>if argument number (2) does no respect the following condition: "must be a valid type"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>parse_url</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be a valid URL component identifier, " ZEND_LONG_FMT " given", key</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>serialize</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>unserialize</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "%s(): Option \"max_depth\" must be greater than or equal to 0", function_name</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>version_compare</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be a valid comparison operator"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.stream">
  <title><link linkend="book.standard">Streams</link></title>
  <itemizedlist>
   <listitem>
    <para>
     <function>stream_select</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "No stream arrays were passed"</member>
      <member>if argument number (4) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_context_set_option</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Unexpected failure hashing password"</member>
      <member>if argument number (3) does no respect the following condition: "cannot be null when argument #2 ($wrapper_or_options) is a string"</member>
      <member>if argument number (4) does no respect the following condition: "cannot be provided when argument #2 ($wrapper_or_options) is an array"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_context_get_default</function>, and
     <function>stream_context_set_default</function>
     <simplelist>
      <member>
       if <parameter>options</parameter>, argument number 1, specify a thread
       value other than <literal>1</literal> on incompatible platforms.
       "Options should have the form [\"wrappername\"][\"optionname\"] = $value"
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_socket_recvfrom</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_get_contents</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to -1"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_get_line</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_set_chunk_size</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "is too large"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_socket_enable_crypto</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be specified when enabling encryption"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_socket_shutdown</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must be one of STREAM_SHUT_RD, STREAM_SHUT_WR, or STREAM_SHUT_RDWR"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_bucket_append</function>, and
     <function>stream_bucket_prepend</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>bucket</parameter>, argument number 1,
       is an object that does not have a property named
       <varname>bucket</varname>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>stream_filter_register</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>filter_name</parameter>, argument number 1,
       is an empty string.
      </member>
      <member>
       if <parameter>class</parameter>, argument number 2,
       is an empty string.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.string">
  <title><link linkend="book.string">string</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>printf</function>,
     <function>sprintf</function>,
     <function>fprintf</function>,
     <function>vprintf</function>,
     <function>vsprintf</function>, and
     <function>vfprintf</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if the argument number specifier used in a format placeholder is
       less than <literal>1</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>vprintf</function>, and
     <function>vsprintf</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>$values</parameter>, argument number 2,
       does not contain the same amount of items than the amount of
       placeholders in the format string.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>vfprintf</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>$values</parameter>, argument number 3,
       does not contain the same amount of items than the amount of
       placeholders in the format string.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>metaphone</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>max_phonemes</parameter>, argument number 2,
       is less than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>wordwrap</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>break</parameter>, argument number 3,
       is an empty string.
      </member>
      <member>
       if <parameter>cut_long_words</parameter>, argument number 4,
       is &true; when <parameter>width</parameter>, argument 2,
       is <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>explode</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>separator</parameter>, argument number 1,
       is an empty string.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>dirname</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>levels</parameter>, argument number 2,
       is less than <literal>1</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>strpos</function>,
     <function>stripos</function>,
     <function>strrpos</function>, and
     <function>strripos</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>offset</parameter>, argument number 3,
       is not contained withing <parameter>haystack</parameter>, argument 1.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>chunk_split</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>length</parameter>, argument number 2,
       is less than or equal to <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>str_repeat</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>times</parameter>, argument number 2,
       is less than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>count_chars</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>mode</parameter>, argument number 2,
       is not a valid mode (<literal>0</literal>, <literal>1</literal>,
       <literal>2</literal>, <literal>3</literal>, or <literal>4</literal>).
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>substr_count</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>needle</parameter>, argument number 2,
       is an empty string.
      </member>
      <member>
       if <parameter>offset</parameter>, argument number 3,
       is not contained withing <parameter>haystack</parameter>, argument 1.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>str_pad</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>pad_string</parameter>, argument number 3,
       is an empty string.
      </member>
      <member>
       if <parameter>pad_type</parameter>, argument number 1, is not
       <constant>STR_PAD_LEFT</constant>, <constant>STR_PAD_RIGHT</constant>,
       or <constant>STR_PAD_BOTH</constant>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>str_word_count</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>format</parameter>, argument number 2, is not a valid
       format (<literal>0</literal>, <literal>1</literal>,
       or <literal>2</literal>).
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>str_split</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>length</parameter>, argument number 2,
       is less than or equal to <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>strpbrk</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>characters</parameter>, argument number 2,
       is an empty string.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>substr_compare</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>offset</parameter>, argument number 3,
       is not contained withing <parameter>haystack</parameter>, argument 1.
      </member>
      <member>
       if <parameter>length</parameter>, argument number 4,
       is less than <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.sysvmsg">
  <title><link linkend="book.sysvmsg">sysvmsg</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>msg_receive</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>max_message_size</parameter>, argument number 4,
       is less than or equal to <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.sysvshm">
  <title><link linkend="book.sysvshm">sysvshm</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>shm_attach</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>size</parameter>, argument number 2,
       is less than or equal to <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.tidy">
  <title><link linkend="book.tidy">tidy</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>tidy_parse_string</function>,
     <methodname>tidy::parseString</methodname>,
     <function>tidy_repair_string</function>, and
     <methodname>tidy::repairString</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>string</parameter>, argument number 1, is longer than 4GB.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>tidy::__construct</methodname>,
     <function>tidy_parse_file</function>,
     <methodname>tidy::parseFile</methodname>,
     <function>tidy_repair_file</function>, and
     <methodname>tidy::repairFile</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if the file pointed to by <parameter>filename</parameter>,
       argument number 1, is larger than 4GB.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>tidy_getopt</function>, and
     <function>tidy_get_opt_doc</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>option</parameter>, argument number 2,
       is not a valid configuration option.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>tidy::getOpt</methodname>, and
     <methodname>tidy::getOptDoc</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>option</parameter>, argument number 1,
       is not a valid configuration option.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.xml">
  <title><link linkend="book.xml">xml</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>xml_parser_create</function>, and
     <function>xml_parser_create_ns</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>encoding</parameter>, argument number 1,
       is not a supported source encoding.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>xml_parser_set_option</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>option</parameter>, argument number 2, is not one of the
       <constant>XML_OPTION_<replaceable>*</replaceable></constant> constants.
      </member>
      <member>
       if <parameter>encoding</parameter>, argument number 3,
       is not a supported target encoding.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>xml_parser_get_option</function> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>option</parameter>, argument number 2, is not one of the
       <constant>XML_OPTION_<replaceable>*</replaceable></constant> constants.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.xmlreader">
  <title><link linkend="book.xmlreader">xmlreader</link></title>

  <itemizedlist>
   <!-- TODO Need to split up again to be able to properly set the named argument -->
   <listitem>
    <para>
     <methodname>XMLReader::close</methodname>,
     <methodname>XMLReader::open</methodname>,
     <methodname>XMLReader::XML</methodname>,
     <methodname>XMLReader::getAttribute</methodname>,
     <methodname>XMLReader::lookupNamespace</methodname>,
     <methodname>XMLReader::isValid</methodname>,
     <methodname>XMLReader::moveToElement</methodname>,
     <methodname>XMLReader::moveToFirstAttribute</methodname>,
     <methodname>XMLReader::moveToNextAttribute</methodname>,
     <methodname>XMLReader::readInnerXml</methodname>,
     <methodname>XMLReader::readOuterXml</methodname>,
     <methodname>XMLReader::readString</methodname>,
     <methodname>XMLReader::setRelaxNGSchema</methodname>,
     <methodname>XMLReader::setRelaxNGSchemaSource</methodname>,
     <methodname>XMLReader::getAttributeNs</methodname>,
     <methodname>XMLReader::moveToAttribute</methodname>,
     <methodname>XMLReader::moveToAttributeNs</methodname>, and
     <methodname>XMLReader::setSchema</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if argument number 1, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>XMLReader::getParserProperty</methodname>, and
     <methodname>XMLReader::setParserProperty</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>property</parameter>, argument number 1, is not a valid
       parser property.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <!-- TODO Script missed nearly all cases of XMLW_NAME_CHK being used which throw a ValueError -->
 <sect2 xml:id="migration80.incompatible.value-errors.xmlwriter">
  <title><link linkend="book.xmlwriter">xmlwriter</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>xmlwriter_open_uri</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (__arg_no) does no respect the following condition: "must be a valid %s, \"%s\" given", __subject, name);	\</member>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>xmlwriter_open_memory</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (__arg_no) does no respect the following condition: "must be a valid %s, \"%s\" given", __subject, name);	\</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.xsl">
  <title><link linkend="book.xsl">xsl</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>XSLTProcessor::importStylesheet</methodname>,
     <methodname>XSLTProcessor::transformToDoc</methodname>,
     <methodname>XSLTProcessor::transformToUri</methodname>, and
     <methodname>XSLTProcessor::transformToXml</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>document</parameter>, argument number 1,
       is not a valid XML node.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>XSLTProcessor::setParameter</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>value</parameter>, argument number 3, is &null; when
       <parameter>name</parameter>, argument number 2, is a <type>string</type>.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.zip">
  <title><link linkend="book.zip">zip</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>ZipArchive::addEmptyDir</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>dirname</parameter>, argument number 1, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ZipArchive::addGlob</methodname>, and
     <methodname>ZipArchive::addPattern</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>pattern</parameter>, argument number 1, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>zip_open</function>, and
     <methodname>ZipArchive::open</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>filename</parameter>, argument number 1, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ZipArchive::addFile</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>filepath</parameter>, argument number 1, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ZipArchive::replaceFile</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>filepath</parameter>, argument number 1, is empty.
      </member>
      <member>
       if <parameter>index</parameter>, argument number 2, is less than
       <literal>0</literal>.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ZipArchive::setArchiveComment</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>comment</parameter>, argument number 1, is longer than
       <literal>65535</literal> bytes.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ZipArchive::setCommentName</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>name</parameter>, argument number 1, is empty.
      </member>
      <member>
       if <parameter>comment</parameter>, argument number 2, is longer than
       <literal>65535</literal> bytes.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ZipArchive::setCommentIndex</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>comment</parameter>, argument number 2, is longer than
       <literal>65535</literal> bytes.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ZipArchive::setExternalAttributesName</methodname>,
     <methodname>ZipArchive::getExternalAttributesName</methodname>,
     <methodname>ZipArchive::setEncryptionName</methodname>,
     <methodname>ZipArchive::getCommentName</methodname>,
     <methodname>ZipArchive::setCompressionName</methodname>, and
     <methodname>ZipArchive::setMtimeName</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>name</parameter>, argument number 1, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ZipArchive::renameIndex</methodname>, and
     <methodname>ZipArchive::renameName</methodname> will throw a
     <classname>ValueError</classname> in the following conditions:
     <simplelist>
      <member>
       if <parameter>new_name</parameter>, argument number 1, is empty.
      </member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.incompatible.value-errors.zlib">
  <title><link linkend="book.zlib">zlib</link></title>

  <itemizedlist>
   <listitem>
    <para>
     <function>ext/zlib/zlib.c=359=static void php_zlib_output_compression_start(void)</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (1) does no respect the following condition: "cannot be empty"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>name</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (default_encoding ? 2 : 3) does no respect the following condition: "must be between -1 and 9"); \</member>
      <member>if argument number (default_encoding ? 3 : 2) does no respect the following condition: "must be one of ZLIB_ENCODING_RAW, ZLIB_ENCODING_GZIP, or ZLIB_ENCODING_DEFLATE"); \</member>
      <member>if argument number (2) does no respect the following condition: "must be greater than or equal to 0"); \</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>ext/zlib/zlib.c=788=PHP_ZLIB_DECODE_FUNC(gzuncompress, PHP_ZLIB_ENCODING_DEFLATE);</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (2) does no respect the following condition: "must not contain strings with null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>inflate_init</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "Encoding mode must be ZLIB_ENCODING_RAW, ZLIB_ENCODING_GZIP or ZLIB_ENCODING_DEFLATE"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain strings with null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>deflate_init</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (Unknown) does no respect the following condition: "deflate_init(): \"strategy\" option must be one of ZLIB_FILTERED, ZLIB_HUFFMAN_ONLY, ZLIB_RLE, ZLIB_FIXED, or ZLIB_DEFAULT_STRATEGY"</member>
      <member>if argument number (1) does no respect the following condition: "must be one of ZLIB_ENCODING_RAW, ZLIB_ENCODING_GZIP, or ZLIB_ENCODING_DEFLATE"</member>
      <member>if argument number (2) does no respect the following condition: "must not contain strings with null bytes"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>inflate_add</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be one of ZLIB_NO_FLUSH, ZLIB_PARTIAL_FLUSH, ZLIB_SYNC_FLUSH, ZLIB_FULL_FLUSH, ZLIB_BLOCK, or ZLIB_FINISH"</member>
     </simplelist>
    </para>
   </listitem>
   <listitem>
    <para>
     <function>deflate_add</function> will throw a ValueError in the following conditions:
     <simplelist>
      <member>if argument number (3) does no respect the following condition: "must be one of ZLIB_NO_FLUSH, ZLIB_PARTIAL_FLUSH, ZLIB_SYNC_FLUSH, ZLIB_FULL_FLUSH, ZLIB_BLOCK, or ZLIB_FINISH"</member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

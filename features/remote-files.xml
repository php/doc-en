<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
 <chapter xml:id="features.remote-files" xmlns="http://docbook.org/ns/docbook">
  <title>Using remote files</title>

  <para>
   As long as <option>allow_url_fopen</option> is enabled in
   &php.ini;, you can use <acronym>HTTP</acronym> and <acronym>FTP</acronym> 
   URLs with most of the functions
   that take a filename as a parameter.  In addition, URLs can be
   used with the <function>include</function>,
   <function>include_once</function>, <function>require</function> and
   <function>require_once</function> statements 
   (<option>allow_url_include</option> must be enabled for these).
   See <xref linkend="wrappers"/> for more information about the protocols
   supported by PHP.
  </para>
  <para>
   For example, you can use this to open a file on a remote web server,
   parse the output for the data you want, and then use that data in a
   database query, or simply to output it in a style matching the rest
   of your website.
  </para>
  <para>
   <example>
    <title>Getting the title of a remote page</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = fopen ("http://www.example.com/", "r");
if (!$file) {
    echo "<p>Unable to open remote file.\n";
    exit;
}
while (!feof ($file)) {
    $line = fgets ($file, 1024);
    /* This only works if the title and its tags are on one line */
    if (preg_match ("@\<title\>(.*)\</title\>@i", $line, $out)) {
        $title = $out[1];
        break;
    }
}
fclose($file);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   You can also write to files on an FTP server (provided that you
   have connected as a user with the correct access rights). You
   can only create new files using this method; if you try to overwrite
   a file that already exists, the <function>fopen</function> call will
   fail.
  </para>
  <para>
   To connect as a user other than 'anonymous', you need to specify
   the username (and possibly password) within the URL, such as
   '<literal>ftp://user:password@ftp.example.com/path/to/file</literal>'.
   (You can use the same sort of syntax to access files via
   <acronym>HTTP</acronym> when they require Basic authentication.)
  </para>
  <para>
   <example>
    <title>Storing data on a remote server</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = fopen ("ftp://ftp.example.com/incoming/outputfile", "w");
if (!$file) {
    echo "<p>Unable to open remote file for writing.\n";
    exit;
}
/* Write the data here. */
fwrite ($file, $_SERVER['HTTP_USER_AGENT'] . "\n");
fclose ($file);
?>
]]>  
    </programlisting>
   </example>
  </para>
  <para>
   <note>
    <para>
     You might get the idea from the example above that you can use
     this technique to write to a remote log file. Unfortunately
     that would not work because the <function>fopen</function> call will
     fail if the remote file already exists. To do distributed logging
     like that, you should take a look at <function>syslog</function>.
    </para> 
   </note>
  </para>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

 <chapter id="configuration">
  <title>Configuration</title>

  <sect1 id="configuration.file">
   <title>The configuration file</title>

   <simpara>
    The configuration file (called <filename>php3.ini</filename> in
    PHP 3.0, and simply <filename>php.ini</filename> as of PHP 4.0)
    is read when PHP starts up. For the server module versions of PHP,
    this happens only once when the web server is started.  For the
    <acronym>CGI</acronym> version, it happens on every invocation.</simpara>

   <simpara>
    When using PHP as an Apache module, you can also change the
    configuration settings using directives in Apache configuration
    files and .htaccess files.</simpara>

   <simpara>
    With PHP 3.0, there are Apache directives that correspond to each
    configuration setting in the <filename>php3.ini</filename> name,
    except the name is prefixed by "php3_".</simpara>

   <para>
    With PHP 4.0, there are just a few Apache directives that allow you
    to change the PHP configuration settings.
    <variablelist>
     <varlistentry>
      <term>
       <systemitem role="directive">php_value</systemitem>
       <parameter>name</parameter>
       <parameter>value</parameter>
      </term>
      <listitem>
       <para>
        This sets the value of the specified variable.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_flag</systemitem>
       <parameter>name</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        This is used to set a Boolean configuration option.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_value</systemitem>
       <parameter>name</parameter>
       <parameter>value</parameter>
      </term>
      <listitem>
       <para>
        This sets the value of the specified variable. "Admin"
        configuration settings can only be set from within the
        main Apache configuration files, and not from .htaccess
        files.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_flag</systemitem>
       <parameter>name</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        This is used to set a Boolean configuration option.</para>
      </listitem>
     </varlistentry>
    </variablelist></para>

   <simpara>
    You can view the settings of the configuration values in
    the output of <function>phpinfo</function>. You can also
    access the values of individial configuration settings using
    <function>get_cfg_var</function>.</simpara>
   
   <sect2 id="ini.sect.general">
    <title>General Configuration Directives</title>
    <para>
     <variablelist>
	  
	  <varlistentry id="ini.asp-tags">
	   <term>
		<parameter>asp_tags</parameter>
		<type>boolean</type>
	   </term>
	   <listitem>
		<simpara>
		 Enables the use of ASP-like &lt;% %&gt; tags in addition to
		 the usual &lt;?php ?&gt; tags. This includes the
		 variable-value printing shorthand of &lt;%= $value %&gt;. For 
		 more information, see <link linkend="language.basic-syntax.phpmode">Escaping from HTML</link>.
		</simpara>

		<note>
		 <para>Support for ASP-style tags was added in 3.0.4.</para>
		</note>

	   </listitem>
	  </varlistentry>
      
      <varlistentry id="ini.auto-append-file">
       <term>
	<parameter>auto_append_file</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 Specifies the name of a file that is automatically parsed
	 after the main file.  The file is included as if it was
	 called with the <function>include</function> function, so
	 <link linkend="ini.include-path">include_path</link> is used.</para>
	<para>
	 The special value <systemitem class="constant">none</systemitem> disables auto-appending.
	 <note>
	  <simpara>
	   If the script is terminated with <function>exit</function>,
	   auto-append will <emphasis>not</emphasis> occur.</simpara>
	 </note></para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-prepend-file">
       <term>
	<parameter>auto_prepend_file</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 Specifies the name of a file that is automatically parsed
	 before the main file.  The file is included as if it was
	 called with the <function>include</function> function, so
	 <link linkend="ini.include-path">include_path</link> is used.</para>
	<para>
	 The special value <systemitem class="constant">none</systemitem> disables auto-prepending.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi-ext">
       <term>
	<parameter>cgi_ext</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.display-errors">
       <term>
	<parameter>display_errors</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 This determines whether errors should be printed to the screen
	 as part of the HTML output or not.
	</para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.doc-root">
       <term>
	<parameter>doc_root</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 PHP's "root directory" on the server.  Only used if
	 non-empty.  If PHP is configured with <link linkend="ini.safe-mode">safe mode</link>, no files outside
	 this directory are served.
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.engine">
       <term>
	<parameter>engine</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 This directive is really only useful in the Apache module
	 version of PHP.  It is used by sites that would like to turn
	 PHP parsing on and off on a per-directory or per-virtual
	 server basis.  By putting <userinput>engine
	 off</userinput> in the appropriate places in the
	 <filename>httpd.conf</filename> file, PHP can be enabled or
	 disabled.
	</para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.error-log">
       <term>
	<parameter>error_log</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 Name of file where script errors should be logged.  If the
	 special value <literal>syslog</literal> is used, the errors
	 are sent to the system logger instead.  On UNIX, this means
	 syslog(3) and on Windows NT it means the event log.  The
	 system logger is not supported on Windows 95.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.error-reporting">
       <term>
	<parameter>error_reporting</parameter>
	<type>integer</type>
       </term>
       <listitem>
	<para>
	 Set the error reporting level.  The parameter is an integer
	 representing a bit field.  Add the values of the error
	 reporting levels you want.
	 <table>
	  <title>Error Reporting Levels</title>
	  <tgroup cols="2">
	   <thead>
	    <row>
	     <entry>bit value</entry>
	     <entry>enabled reporting</entry>
	    </row>
	   </thead>
	   <tbody>
	    <row>
	     <entry>1</entry>
	     <entry>normal errors</entry>
	    </row>
	    <row>
	     <entry>2</entry>
	     <entry>normal warnings</entry>
	    </row>
	    <row>
	     <entry>4</entry>
	     <entry>parser errors</entry>
	    </row>
	    <row>
	     <entry>8</entry>
	     <entry>non-critical style-related warnings</entry>
	    </row>
	   </tbody>
	  </tgroup>
	 </table>
	 The default value for this directive is 7 (normal errors,
	 normal warnings and parser errors are shown).
	</para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.open-basedir">
       <term>
	<parameter>open_basedir</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 Limit the files that can be opened by PHP to the specified
	 directory-tree.
	</para>
	<para>
	 When a script tries to open a file with,
	 for example, fopen or gzopen, the location of the file is
	 checked. When the file is outside the specified directory-tree,
	 PHP will refuse to open it. All symbolic links are resolved,
	 so it's not possible to avoid this restriction with a symlink.
	</para>
	<para>
	 The special value <systemitem class="constant">.</systemitem>
	 indicates that the directory in which the script is stored will
	 be used as base-directory.
	</para>
	<para>
	 Under Windows, separate the directories with a semicolon. On all
	 other systems, separate the directories with a colon. As an Apache
	 module, open_basedir paths from parent directories are now
	 automatically inherited.
	</para>
        <note>
         <para>Support for multiple directories was added in 3.0.7.</para>
        </note>
	<para>
	 The default is to allow all files to be opened.
	</para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.gpc-order">
       <term>
	<parameter>gpc_order</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 Set the order of GET/POST/COOKIE variable parsing.  The
	 default setting of this directive is "GPC".  Setting this to
	 "GP", for example, will cause PHP to completely ignore cookies
	 and to overwrite any GET method variables with POST-method
	 variables of the same name.
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.ignore-user-abort">
       <term>
	<parameter>ignore_user_abort</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 On by default.  If changed to Off scripts will be terminated as
     soon as they try to output something after a client has aborted
     their connection.
	 <function>ignore_user_abort</function>.
	</para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.include-path">
       <term>
	<parameter>include_path</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 Specifies a list of directories where the
	 <function>require</function>, <function>include</function>
	 and <function>fopen_with_path</function> functions look for
	 files.  The format is like the system's <envar>PATH</envar>
	 environment variable: a list of directories separated with a
	 colon in UNIX or semicolon in Windows.
	 <example>
	  <title>UNIX include_path</title>
	  <programlisting role="php3.ini">
include_path=.:/home/httpd/php-lib
</programlisting>
	 </example>
	 <example>
	  <title>Windows include_path</title>
	  <programlisting role="php3.ini">
include_path=".;c:\www\phplib"
</programlisting>
	 </example>
	 The default value for this directive is <literal>.</literal>
	 (only the current directory).</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.isapi-ext">
       <term>
	<parameter>isapi_ext</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.log-errors">
       <term>
	<parameter>log_errors</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 Tells whether script error messages should be logged to the
	 server's error log.  This option is thus server-specific.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.magic-quotes-gpc">
       <term>
	<parameter>magic_quotes_gpc</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 Sets the magic_quotes state for GPC (Get/Post/Cookie)
	 operations.  When magic_quotes are on, all ' (single-quote),
	 &quot; (double quote), \ (backslash) and NUL's are escaped
	 with a backslash automatically.  If magic_quotes_sybase is
	 also on, a single-quote is escaped with a single-quote
	 instead of a backslash.
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.magic-quotes-runtime">
       <term>
	<parameter>magic_quotes_runtime</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 If <parameter>magic_quotes_runtime</parameter> is enabled,
	 most functions that return data from any sort of external
	 source including databases and text files will have quotes
	 escaped with a backslash.  If
	 <parameter>magic_quotes_sybase</parameter> is also on, a
	 single-quote is escaped with a single-quote instead of a
	 backslash.
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.magic-quotes-sybase">
       <term>
	<parameter>magic_quotes_sybase</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
         If <parameter>magic_quotes_sybase</parameter> is also on, a
         single-quote is escaped with a single-quote instead of a
         backslash if <parameter>magic_quotes_gpc</parameter> or
         <parameter>magic_quotes_runtime</parameter> is enabled.
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.max-execution-time">
       <term>
	<parameter>max_execution_time</parameter>
	<type>integer</type>
       </term>
       <listitem>
	<para>
	 This sets the maximum time in seconds a script is allowed to
	 take before it is terminated by the parser.  This helps
	 prevent poorly written scripts from tieing up the server.
	</para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.memory-limit">
       <term>
	<parameter>memory_limit</parameter>
	<type>integer</type>
       </term>
       <listitem>
	<para>
	 This sets the maximum amount of memory in bytes that a script
	 is allowed to allocate.  This helps prevent poorly written
	 scripts for eating up all available memory on a server.
	</para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.nsapi-ext">
       <term>
	<parameter>nsapi_ext</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.short-open-tag">
       <term>
	<parameter>short_open_tag</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 Tells whether the short form (<userinput>&lt;? ?&gt;</userinput>of
	 PHP's open tag should be allowed.  If you want to use PHP in
	 combination with XML, you have to disable this option.  If
	 disabled, you must use the long form of the open tag
	 (<userinput>&lt;?php ?&gt;</userinput>).</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.sql.safe-mode">
       <term>
	<parameter>sql.safe_mode</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.track-errors">
       <term>
	<parameter>track_errors</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 If enabled, the last error message will always be present in the
	 global variable <symbol>$php_errormsg</symbol>.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.track-vars">
       <term>
	<parameter>track_vars</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 If enabled, GET, POST and cookie input can be found in the
	 global associative arrays <symbol>$HTTP_GET_VARS</symbol>,
	 <symbol>$HTTP_POST_VARS</symbol> and
	 <symbol>$HTTP_COOKIE_VARS</symbol>, respectively.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-tmp-dir">
       <term>
	<parameter>upload_tmp_dir</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 The temporary directory used for storing files when doing
	 file upload.  Must be writable by whatever user PHP is
	 running as.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.user-dir">
       <term>
	<parameter>user_dir</parameter>
	<type>string</type>
       </term>
       <listitem>
	<para>
	 The base name of the directory used on a user's home
	 directory for PHP files, for example
	 <literal>public_html</literal>.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.warn-plus-overloading">
       <term>
	<parameter>warn_plus_overloading</parameter>
	<type>boolean</type>
       </term>
       <listitem>
	<para>
	 If enabled, this option makes PHP output a warning when the
	 plus (<literal>+</literal>) operator is used on strings.
	 This is to make it easier to find scripts that need to be
	 rewritten to using the string concatenator instead
	 (<literal>.</literal>).</para>
       </listitem>
      </varlistentry>

     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sect.mail">
    <title>Mail Configuration Directives</title>
    <variablelist>

     <varlistentry id="ini.smtp">
      <term>
       <parameter>SMTP</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	DNS name or IP address of the SMTP server PHP under Windows
	should use for mail sent with the <function>mail</function>
	function.</para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.sendmail-from">
      <term>
       <parameter>sendmail_from</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	Which "From:" mail address should be used in mail sent from
	PHP under Windows.</para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.sendmail-path">
      <term>
       <parameter>sendmail_path</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	Where the <command>sendmail</command> program can be found,
	usually <filename>/usr/sbin/sendmail</filename> or
	<filename>/usr/lib/sendmail</filename>
	<command>configure</command> does an honest attempt of
	locating this one for you and set a default, but if it fails,
	you can set it here.</para>
       <para>
	Systems not using sendmail should set this directive to the
	sendmail wrapper/replacement their mail system offers, if any.
	For example, <ulink url="&url.qmail;">Qmail</ulink>
	users can normally set it to
	<filename>/var/qmail/bin/sendmail</filename>.</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

   <sect2 id="ini.sect.safe-mode">
    <title>Safe Mode Configuration Directives</title>
    <variablelist>

     <varlistentry id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
	Whether to enable PHP's safe mode. Read the <link linkend="security">Security chapter</link> for more
	more information.</para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	If PHP is used in safe mode, <function>system</function> and
	the other functions executing system programs refuse to start
	programs that are not in this directory.</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

   <sect2 id="ini.sect.debugger">
    <title>Debugger Configuration Directives</title>
    <variablelist>

     <varlistentry id="ini.debugger.host">
      <term>
       <parameter>debugger.host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	DNS name or IP address of host used by the debugger.</para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.port">
      <term>
       <parameter>debugger.port</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	Port number used by the debugger.</para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.enabled">
      <term>
       <parameter>debugger.enabled</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
	Whether the debugger is enabled.</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

   <sect2 id="ini.sect.extension">
    <title>Extension Loading Directives</title>
    <variablelist>
     
     <varlistentry id="ini.enable-dl">
      <term>
	<parameter>enable_dl</parameter>
	<type>boolean</type>
      </term>
      <listitem>
	<para>
	 This directive is really only useful in the Apache module
	 version of PHP. You can turn dynamic loading of PHP
	 extensions with <function>dl</function> on and off per
	 virtual server or per directory.
	</para>
	<para>
	 The main reason for turning dynamic loading off is
	 security. With dynamic loading, it's possible to ignore all
	 the safe_mode and open_basedir restrictions.
	</para>
	<para>
	 The default is to allow dynamic loading, except when using
	 safe-mode.  In safe-mode, it's always imposible to use
	 <function>dl</function>.
	</para>
      </listitem>
     </varlistentry>
      
     <varlistentry id="ini.extension-dir">
      <term>
       <parameter>extension_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	In what directory PHP should look for dynamically loadable
	extensions.</para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.extension">
      <term>
       <parameter>extension</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	Which dynamically loadable extensions to load when PHP starts
	up.</para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.mysql">
    <title>MySQL Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.mysql.allow-persistent">
      <term>
       <parameter>mysql.allow_persistent</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
		Whether to allow persistent MySQL connections.</para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.mysql.default-host">
      <term>
       <parameter>mysql.default_host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
		The default server host to use when connecting to the database
		server if no other host is specified.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.mysql.default-user">
      <term>
       <parameter>mysql.default_user</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
		The default user name to use when connecting to the database
		server if no other name is specified.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.mysql.default-password">
      <term>
       <parameter>mysql.default_password</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
		The default password to use when connecting to the database
		server if no other password is specified.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.mysql.max-persistent">
      <term>
       <parameter>mysql.max_persistent</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
		The maximum number of persistent MySQL connections per
		process.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.mysql.max-links">
      <term>
       <parameter>mysql.max_links</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
		The maximum number of MySQL connections per process, including
		persistent connections.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.msql">
    <title>mSQL Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.msql.allow-persistent">
      <term>
       <parameter>msql.allow_persistent</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
	Whether to allow persistent mSQL connections.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.msql.max-persistent">
      <term>
       <parameter>msql.max_persistent</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of persistent mSQL connections per process.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.msql.max-links">
      <term>
       <parameter>msql.max_links</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of mSQL connections per process, including
	persistent connections.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.pgsql">
    <title>Postgres Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.pgsql.allow-persistent">
      <term>
       <parameter>pgsql.allow_persistent</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
	Whether to allow persistent Postgres connections.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.pgsql.max-persistent">
      <term>
       <parameter>pgsql.max_persistent</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of persistent Postgres connections per
	process.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.pgsql.max-links">
      <term>
       <parameter>pgsql.max_links</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of Postgres connections per process,
	including persistent connections.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.sybase">
    <title>Sybase Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.sybase.allow-persistent">
      <term>
       <parameter>sybase.allow_persistent</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
	Whether to allow persistent Sybase connections.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybase.max-persistent">
      <term>
       <parameter>sybase.max_persistent</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of persistent Sybase connections per
	process.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybase.max-links">
      <term>
       <parameter>sybase.max_links</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of Sybase connections per process,
	including persistent connections.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.sybct">
    <title>Sybase-CT Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.sybct.allow-persistent">
      <term>
       <parameter>sybct.allow_persistent</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
	Whether to allow persistent Sybase-CT connections.
	The default is on.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybct.max-persistent">
      <term>
       <parameter>sybct.max_persistent</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of persistent Sybase-CT connections per
	process.  The default is -1 meaning unlimited.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybct.max-links">
      <term>
       <parameter>sybct.max_links</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of Sybase-CT connections per process,
	including persistent connections.  The default is -1 meaning
	unlimited.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybct.min-server-severity">
      <term>
       <parameter>sybct.min_server_severity</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        Server messages with severity greater than or equal to
        sybct.min_server_severity will be reported as warnings.  This
        value can also be set from a script by calling
        <function>sybase_min_server_severity</function>.  The default
        is 10 which reports errors of information severity or greater.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybct.min-client-severity">
      <term>
       <parameter>sybct.min_client_severity</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        Client library messages with severity greater than or equal to
        sybct.min_client_severity will be reported as warnings.  This
        value can also be set from a script by calling
        <function>sybase_min_client_severity</function>.  The default
        is 10 which effectively disables reporting.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybct.login-timeout">
      <term>
       <parameter>sybct.login_timeout</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        The maximum time in seconds to wait for a connection attempt
        to succeed before returning failure.  Note that if
        max_execution_time has been exceeded when a connection attempt
        times out, your script will be terminated before it can take
        action on failure.  The default is one minute.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybct.timeout">
      <term>
       <parameter>sybct.timeout</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        The maximum time in seconds to wait for a select_db or query
        operation to succeed before returning failure.  Note that if
        max_execution_time has been exceeded when am operation times
        out, your script will be terminated before it can take action
        on failure.  The default is no limit.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sybct.hostname">
      <term>
       <parameter>sybct.hostname</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        The name of the host you claim to be connecting from, for
        display by sp_who.  The default is none.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.informix">
    <title>Informix Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.ifx.allow-persistent">
      <term>
       <parameter>ifx.allow_persistent</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Whether to allow persistent Informix connections.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.ifx.max-persistent">
      <term>
       <parameter>ifx.max_persistent</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        The maximum number of persistent Informix connections per
        process.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.ifx.max-links">
      <term>
       <parameter>ifx.max_links</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        The maximum number of Informix connections per process, including
        persistent connections.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.ifx.default-host">
      <term>
       <parameter>ifx.default_host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        The default host to connect to when no host is specified
        in <function>ifx_connect</function> or 
        <function>ifx_pconnect</function>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.ifx.default-user">
      <term>
       <parameter>ifx.default_user</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        The default user id to use when none is specified 
        in <function>ifx_connect</function> or 
        <function>ifx_pconnect</function>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.ifx.default-password">
      <term>
       <parameter>ifx.default_password</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        The default password to use when none is specified 
        in <function>ifx_connect</function> or 
        <function>ifx_pconnect</function>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.ifx.blobinfile">
      <term>
       <parameter>ifx.blobinfile</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Set to true if you want to return blob columns
        in a file, false if you want them in memory. You can
        override the setting at runtime 
        with <function>ifx_blobinfile_mode</function>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.ifx.textasvarchar">
      <term>
       <parameter>ifx.textasvarchar</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Set to true if you want to return TEXT columns
        as normal strings in select statements,
        false if you want to use blob id parameters. You can
        override the setting at runtime with 
       <function>ifx_textasvarchar</function>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.ifx.byteasvarchar">
      <term>
       <parameter>ifx.byteasvarchar</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Set to true if you want to return BYTE columns
        as normal strings in select queries, 
        false if you want to use blob id parameters. You can
        override the setting at runtime with 
        <function>ifx_textasvarchar</function>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.ifx.charasvarchar">
      <term>
       <parameter>ifx.charasvarchar</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Set to true if you want to trim trailing spaces
        from CHAR columns when fetching them.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.ifx.nullformat">
      <term>
       <parameter>ifx.nullformat</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Set to true if you want to return NULL columns
        as the literal string "NULL", false if you want
        them returned as the empty string "". You can
        override this setting at runtime with 
        <function>ifx_nullformat</function>.
       </para>
      </listitem>
     </varlistentry>


    </variablelist>
   </sect2>

   <sect2 id="ini.sect.bcmath">
    <title>BC Math Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.bcmath.scale">
      <term>
       <parameter>bcmath.scale</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	Number of decimal digits for all bcmath functions.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.browscap">
    <title>Browser Capability Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.browscap">
      <term>
       <parameter>browscap</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
		Name of browser capabilities file. See also
		<function>get_browser</function>.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.uodbc">
    <title>Unified ODBC Configuration Directives</title>
    <variablelist>
     
     <varlistentry id="ini.uodbc.default-db">
      <term>
       <parameter>uodbc.default_db</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	ODBC data source to use if none is specified in
	<function>odbc_connect</function> or
	<function>odbc_pconnect</function>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.uodbc.default-user">
      <term>
       <parameter>uodbc.default_user</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	User name to use if none is specified in
	<function>odbc_connect</function> or
	<function>odbc_pconnect</function>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.uodbc.default-pw">
      <term>
       <parameter>uodbc.default_pw</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
	Password to use if none is specified in
	<function>odbc_connect</function> or
	<function>odbc_pconnect</function>.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.uodbc.allow-persistent">
      <term>
       <parameter>uodbc.allow_persistent</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
	Whether to allow persistent ODBC connections.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.uodbc.max-persistent">
      <term>
       <parameter>uodbc.max_persistent</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of persistent ODBC connections per process.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.uodbc.max-links">
      <term>
       <parameter>uodbc.max_links</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
	The maximum number of ODBC connections per process, including
	persistent connections.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

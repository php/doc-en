<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 1.24.2.1 $ -->
<reference id="ref.dir">
  <title>Directory functions</title>
  <titleabbrev>Directories</titleabbrev>

  <partintro>
  
   <simpara>
    For related functions such as <function>dirname</function>,  
    <function>is_dir</function>, <function>mkdir</function>, and 
    <function>rmdir</function>, see the 
    <link linkend="ref.filesystem">Filesystem</link> section.
   </simpara>
  
  </partintro>
  
  <refentry id="function.chroot">
   <refnamediv>
    <refname>chroot</refname>
    <refpurpose>change the root directory</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>bool</type><methodname>chroot</methodname>
      <methodparam><type>string</type><parameter>directory</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Changes the root directory of the current process to
     <parameter>directory</parameter>.  Returns &false; if unable to
     change the root directory, &true; otherwise.
    </para>
    <note>
     <para>
      It's not wise to use this function when running in a webserver
      environment, because it's not possible to reset the root
      directory to / again at the end of the request. This function
      will only function correct when running as CGI this way.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.chdir">
   <refnamediv>
    <refname>chdir</refname>
    <refpurpose>change directory</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>bool</type><methodname>chdir</methodname>
      <methodparam><type>string</type><parameter>directory</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Changes PHP's current directory to
     <parameter>directory</parameter>.  Returns &false; if unable to
     change directory, &true; otherwise.
    </para>
   </refsect1>
  </refentry>

  <refentry id="class.dir">
   <refnamediv>
    <refname>dir</refname>
    <refpurpose>directory class</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>object</type><methodname>dir</methodname>
      <methodparam><type>string</type><parameter>directory</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     A pseudo-object oriented mechanism for reading a directory.  The
     given <parameter>directory</parameter> is opened.  Two properties
     are available once the directory has been opened.  The handle
     property can be used with other directory functions such as
     <function>readdir</function>, <function>rewinddir</function> and
     <function>closedir</function>.  The path property is set to path
     the directory that was opened.  Three methods are available:
     read, rewind and close.
     <example>
      <title><function>dir</function> example</title>
      <programlisting role="php">
$d = dir("/etc");
echo "Handle: ".$d->handle."&lt;br>\n";
echo "Path: ".$d->path."&lt;br>\n";
while ($entry = $d->read()) {
    echo $entry."&lt;br>\n";
}
$d->close();
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.closedir">
   <refnamediv>
    <refname>closedir</refname>
    <refpurpose>close directory handle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>void</type><methodname>closedir</methodname>
      <methodparam><type>resource</type><parameter>dir_handle</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Closes the directory stream indicated by
     <parameter>dir_handle</parameter>. The stream must have previously
     been opened by <function>opendir</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getcwd">
   <refnamediv>
    <refname>getcwd</refname>
    <refpurpose>gets the current working directory</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>string</type><methodname>getcwd</methodname>
      <void/>
     
    </methodsynopsis>
    <para>
     Returns the current working directory.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.opendir">
   <refnamediv>
    <refname>opendir</refname>
    <refpurpose>open directory handle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>resource</type><methodname>opendir</methodname>
      <methodparam><type>string</type><parameter>path</parameter></methodparam>
     
    </methodsynopsis>
    <para> 
     Returns a directory handle to be used in subsequent
     <function>closedir</function>, <function>readdir</function>, and
     <function>rewinddir</function> calls.
    </para>
    <para>
     If <parameter>path</parameter> is not a valid directory or the
     directory can not be opened due to permission restrictions or
     filesystem errors, <function>opendir</function> returns &false; and
     generates a PHP error.  You can suppress the error output of
     <function>opendir</function> by prepending `@' to the front of
     the function name.
    </para>
    <para>
     <example>
      <title><function>opendir</function> example</title>
      <programlisting role="php">
&lt;?php

if ($dir = @opendir("/tmp")) {
  while (($file = readdir($dir)) !== false) {
    echo "$file\n";
  }  
  closedir($dir);
}

?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readdir">
   <refnamediv>
    <refname>readdir</refname>
    <refpurpose>read entry from directory handle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>string</type><methodname>readdir</methodname>
      <methodparam><type>resource</type><parameter>dir_handle</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Returns the filename of the next file from the directory. The
     filenames are not returned in any particular order.
     <example>
      <title>List all files in the current directory</title>
      <programlisting role="php">
// Note that !== did not exist until 4.0.0-RC2
&lt;?php
$handle=opendir('.');
echo "Directory handle: $handle\n";
echo "Files:\n";
while (false !== ($file = readdir($handle))) { 
    echo "$file\n";
}
closedir($handle); 
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Note that <function>readdir</function> will return the <literal>.</literal> 
     and
     <literal>..</literal> entries.  If you don't want these, simply strip 
     them out:
     <example>
      <title>
       List all files in the current directory and strip out <literal>.</literal> 
       and <literal>..</literal>
      </title>
      <programlisting role="php">
&lt;?php 
$handle = opendir('.'); 
while (false !== ($file = readdir($handle))) { 
    if ($file != "." &amp;&amp; $file != "..") { 
        echo "$file\n"; 
    } 
}
closedir($handle); 
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.rewinddir">
   <refnamediv>
    <refname>rewinddir</refname>
    <refpurpose>rewind directory handle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>void</type><methodname>rewinddir</methodname>
      <methodparam><type>resource</type><parameter>dir_handle</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Resets the directory stream indicated by
     <parameter>dir_handle</parameter> to the beginning of the
     directory.
    </para>

   </refsect1>
  </refentry>

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

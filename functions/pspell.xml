<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 1.20.2.1 $ -->

<!-- pspell currently (2001-08-14) doesn't use resources -->
<reference id="ref.pspell">
  <title>Pspell Functions</title>
  <titleabbrev>Pspell</titleabbrev>

  <partintro>
   <simpara>
    These functions allow you to check the spelling of a word and offer
    suggestions.
   </simpara>
   <simpara>
    You need the aspell and pspell libraries, available from <ulink url="&url.aspell;">&url.aspell;</ulink> and
    <ulink url="&url.pspell;">&url.pspell;</ulink> respectively, and
    add the <option role="configure">--with-pspell[=dir]</option> option
    when compiling php.
   </simpara>
  </partintro>

  <refentry id="function.pspell-add-to-personal">
   <refnamediv>
    <refname>pspell_add_to_personal</refname>
    <refpurpose>Add the word to a personal wordlist</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_add_to_personal</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>string</type><parameter>word</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_add_to_personal</function> adds a word to the personal 
     wordlist. If you used <function>pspell_new_config</function> with
     <function>pspell_config_personal</function> to open the dictionary,
     you can save the wordlist later with
     <function>pspell_save_wordlist</function>. Please, note that this function
     will not work unless you have pspell .11.2 and aspell .32.5 or later.
    </simpara>
    <para>
     <example>
      <title><function>pspell_add_to_personal</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_personal ($pspell_config, "/var/dictionaries/custom.pws");
$pspell_link = pspell_new_config ($pspell_config);

pspell_add_to_personal ($pspell_link, "Vlad");
pspell_save_wordlist ($pspell_link);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-add-to-session">
   <refnamediv>
    <refname>pspell_add_to_session</refname>
    <refpurpose>Add the word to the wordlist in the current session
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_add_to_session</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>string</type><parameter>word</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_add_to_session</function> adds a word to the wordlist
     associated with the current session. It is very similar to
     <function>pspell_add_to_personal</function>
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-check">
   <refnamediv>
    <refname>pspell_check</refname>
    <refpurpose>Check a word</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>bool</type><methodname>pspell_check</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>string</type><parameter>word</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_check</function> checks the spelling of a word
     and returns &true; if the spelling is correct, &false; if not.
    </simpara>
    <para>
     <example>
      <title><function>pspell_check</function></title>
      <programlisting role="php">
$pspell_link = pspell_new ("en");

if (pspell_check ($pspell_link, "testt")) {
    echo "This is a valid spelling";
} else {
    echo "Sorry, wrong spelling";
}
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-clear-session">
   <refnamediv>
    <refname>pspell_clear_session</refname>
    <refpurpose>Clear the current session</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_clear_session</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_clear_session</function> clears the current session.
     The current wordlist becomes blank, and, for example, if you try to save
     it with <function>pspell_save_wordlist</function>, nothing happens.
    </simpara>
    <para>
     <example>
      <title><function>pspell_add_to_personal</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_personal ($pspell_config, "/var/dictionaries/custom.pws");
$pspell_link = pspell_new_config ($pspell_config);

pspell_add_to_personal ($pspell_link, "Vlad");
pspell_clear_session ($pspell_link);
pspell_save_wordlist ($pspell_link);    //"Vlad" will not be saved
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-config-create">
   <refnamediv>
    <refname>pspell_config_create</refname>
    <refpurpose>Create a config used to open a dictionary</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_config_create</methodname>
      <methodparam><type>string</type><parameter>language</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        spelling
       </parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        jargon
       </parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        encoding
       </parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_config_create</function> has a very similar syntax to
     <function>pspell_new</function>. In fact, using 
     <function>pspell_config_create</function> immediatelly followed by 
     <function>pspell_new_config</function> will produce the exact same result.
     However, after creating a new config, you can also use
     <function>pspell_config_*</function> functions before calling
     <function>pspell_new_config</function> to take advantage of some
     advanced functionality.
    </simpara>
    <para>
     The language parameter is the language code which consists of the
     two letter ISO 639 language code and an optional two letter ISO
     3166 country code after a dash or underscore. 
    </para>
    <para>
     The spelling parameter is the requested spelling for languages
     with more than one spelling such as English. Known values are
     'american', 'british', and 'canadian'.
    </para>
    <para>
     The jargon parameter contains extra information to distinguish
     two different words lists that have the same language and
     spelling parameters.
    </para>
    <para>
     The encoding parameter is the encoding that words are expected to
     be in.  Valid values are 'utf-8', 'iso8859-*', 'koi8-r',
     'viscii', 'cp1252', 'machine unsigned 16', 'machine unsigned
     32'. This parameter is largely untested, so be careful when
     using.
    </para>
    <para>
     The mode parameter is the mode in which spellchecker will work.
     There are several modes available:
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>PSPELL_FAST</constant> - Fast mode (least number of
        suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_NORMAL</constant> - Normal mode (more suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_BAD_SPELLERS</constant> - Slow mode (a lot of
        suggestions)
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     For more information and examples, check out inline manual pspell
     website:<ulink url="&url.pspell;">&url.pspell;</ulink>.
    </para>
    <para>
     <example>
      <title><function>pspell_config_create</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_personal ($pspell_config, "/var/dictionaries/custom.pws");
pspell_config_repl ($pspell_config, "/var/dictionaries/custom.repl");
$pspell_link = pspell_new_personal ($pspell_config, "en");
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-config-ignore">
   <refnamediv>
    <refname>pspell_config_ignore</refname>
    <refpurpose>Ignore words less than N characters long</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_config_ignore</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_config_ignore</function> should be used on a config
     before calling <function>pspell_new_config</function>. This function
     allows short words to be skipped by the spellchecker. Words less then
     n characters will be skipped.
    </simpara>
    <para>
     <example>
      <title><function>pspell_config_ignore</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_ignore($pspell_config, 5);
$pspell_link = pspell_new_config($pspell_config);
pspell_check($pspell_link, "abcd");    //will not result in an error
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-config-mode">
   <refnamediv>
    <refname>pspell_config_mode</refname>
    <refpurpose>Change the mode number of suggestions returned</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_config_mode</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>int</type><parameter>mode</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_config_mode</function> should be used on a config
     before calling <function>pspell_new_config</function>. This function
     determines how many suggestions will be returned by 
     <function>pspell_suggest</function>.
    </simpara>
    <para>
     The mode parameter is the mode in which spellchecker will work.
     There are several modes available:
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>PSPELL_FAST</constant> - Fast mode (least number of
        suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_NORMAL</constant> - Normal mode (more suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_BAD_SPELLERS</constant> - Slow mode (a lot of
        suggestions)
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title><function>pspell_config_mode</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_mode($pspell_config, PSPELL_FAST);
$pspell_link = pspell_new_config($pspell_config);
pspell_check($pspell_link, "thecat");
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-config-personal">
   <refnamediv>
    <refname>pspell_config_personal</refname>
    <refpurpose>Set a file that contains personal wordlist</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_config_personal</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>string</type><parameter>file</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_config_personal</function> should be used on a config
     before calling <function>pspell_new_config</function>. The personal
     wordlist will be loaded and used in addition to the standard one after
     you call <function>pspell_new_config</function>. If the file does not
     exist, it will be created. The file is also the file where
     <function>pspell_save_wordlist</function> will save personal wordlist to.
     The file should be writable by whoever php runs as (e.g. nobody). Please,
     note that this function will not work unless you have pspell .11.2 and
     aspell .32.5 or later.
    </simpara>
    <para>
     <example>
      <title><function>pspell_config_personal</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_personal ($pspell_config, "/var/dictionaries/custom.pws");
$pspell_link = pspell_new_config ($pspell_config);
pspell_check ($pspell_link, "thecat");
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-config-repl">
   <refnamediv>
    <refname>pspell_config_repl</refname>
    <refpurpose>Set a file that contains replacement pairs</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_config_repl</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>string</type><parameter>file</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_config_repl</function> should be used on a config
     before calling <function>pspell_new_config</function>. The replacement
     pairs improve the quality of the spellchecker. When a word is misspelled,
     and a proper suggestion was not found in the list,
     <function>pspell_store_replacement</function> can be used to store a 
     replacement pair and then <function>pspell_save_wordlist</function> to
     save the wordlist along with the replacement pairs. The file should be
     writable by whoever php runs as (e.g. nobody). Please, note that this
     function will not work unless you have pspell .11.2 and aspell .32.5 or
     later.
    </simpara>
    <para>
     <example>
      <title><function>pspell_config_repl</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_personal ($pspell_config, "/var/dictionaries/custom.pws");
pspell_config_repl ($pspell_config, "/var/dictionaries/custom.repl");
$pspell_link = pspell_new_config ($pspell_config);
pspell_check ($pspell_link, "thecat");
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-config-runtogether">
   <refnamediv>
    <refname>pspell_config_runtogether</refname>
    <refpurpose>Consider run-together words as valid compounds</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_config_runtogether</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>bool</type><parameter>flag</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_config_runtogether</function> should be used on a config
     before calling <function>pspell_new_config</function>. This function
     determines whether run-together words will be treated as legal
     compounds.  That is, "thecat" will be a legal compound,
     athough there should be a space between the two
     words. Changing this setting only affects the results returned
     by <function>pspell_check</function>;
     <function>pspell_suggest</function> will still return suggestions.
    </simpara>
    <para>
     <example>
      <title><function>pspell_config_runtogether</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_runtogether ($pspell_config, true);
$pspell_link = pspell_new_config ($pspell_config);
pspell_check ($pspell_link, "thecat");
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-config-save-repl">
   <refnamediv>
    <refname>pspell_config_save_repl</refname>
    <refpurpose>Determine whether to save a replacement pairs list
    along with the wordlist</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_config_save_repl</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>bool</type><parameter>flag</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_config_save_repl</function> should be used on a config
     before calling <function>pspell_new_config</function>. It determines
     whether <function>pspell_save_wordlist</function> will save the
     replacement pairs along with the wordlist. Usually there is no need to use
     this function because if <function>pspell_config_repl</function> is used,
     the replacement pairs will be saved by 
     <function>pspell_save_wordlist</function> anyway, and if it is not,
     the replacement pairs will not be saved. Please, note that this function
     will not work unless you have pspell .11.2 and aspell .32.5 or later.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-new">
   <refnamediv>
    <refname>pspell_new</refname>
    <refpurpose>Load a new dictionary</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_new</methodname>
      
<!-- not yet resource... -->

      <methodparam><type>string</type><parameter>language</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        spelling
       </parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        jargon
       </parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        encoding
       </parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        mode
       </parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_new</function> opens up a new dictionary and
     returns the dictionary link identifier for use in other pspell
     functions.
    </simpara>
    <para>
     The language parameter is the language code which consists of the
     two letter ISO 639 language code and an optional two letter ISO
     3166 country code after a dash or underscore. 
    </para>
    <para>
     The spelling parameter is the requested spelling for languages
     with more than one spelling such as English. Known values are
     'american', 'british', and 'canadian'.
    </para>
    <para>
     The jargon parameter contains extra information to distinguish
     two different words lists that have the same language and
     spelling parameters.
    </para>
    <para>
     The encoding parameter is the encoding that words are expected to
     be in.  Valid values are 'utf-8', 'iso8859-*', 'koi8-r',
     'viscii', 'cp1252', 'machine unsigned 16', 'machine unsigned
     32'. This parameter is largely untested, so be careful when
     using.
    </para>
    <para>
     The mode parameter is the mode in which spellchecker will work.
     There are several modes available:
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>PSPELL_FAST</constant> - Fast mode (least number of
        suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_NORMAL</constant> - Normal mode (more suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_BAD_SPELLERS</constant> - Slow mode (a lot of
        suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_RUN_TOGETHER</constant> - Consider run-together words
        as legal compounds.  That is, "thecat" will be a legal compound,
        athough there should be a space between the two words. Changing this
        setting only affects the results returned by
        <function>pspell_check</function>; <function>pspell_suggest</function>
        will still return suggestions.
       </simpara>
      </listitem>
     </itemizedlist>
     Mode is a bitmask constructed from different constants listed above.
     However, <constant>PSPELL_FAST</constant>,
     <constant>PSPELL_NORMAL</constant> and
     <constant>PSPELL_BAD_SPELLERS</constant> are mutually exclusive, so you
     should select only one of them.
    </para>
    <para>
     For more information and examples, check out inline manual pspell
     website:<ulink url="&url.pspell;">&url.pspell;</ulink>.
    </para>
    <para>
     <example>
      <title><function>pspell_new</function></title>
      <programlisting role="php">
$pspell_link = pspell_new ("en", "", "", "", 
                           (PSPELL_FAST|PSPELL_RUN_TOGETHER));
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-new-config">
   <refnamediv>
    <refname>pspell_new_config</refname>
    <refpurpose>Load a new dictionary with settings based on a given config
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_new_config</methodname>
      <methodparam><type>int</type><parameter>config</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_new_config</function> opens up a new dictionary with
     settings specified in a config, created with with
     <function>pspell_config_create</function> and modified with
     <function>pspell_config_*</function> functions. This method provides you
     with the most flexibility and has all the functionality provided by
     <function>pspell_new</function> and 
     <function>pspell_new_personal</function>.
    </simpara>
    <para>
     The config parameter is the one returned by
     <function>pspell_config_create</function> when the config was created.
    </para>
    <para>
     <example>
      <title><function>pspell_new_config</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_personal ($pspell_config, "/var/dictionaries/custom.pws");
pspell_config_repl ($pspell_config, "/var/dictionaries/custom.repl");
$pspell_link = pspell_new_config ($pspell_config);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-new-personal">
   <refnamediv>
    <refname>pspell_new_personal</refname>
    <refpurpose>Load a new dictionary with personal wordlist</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_new_personal</methodname>
      <methodparam><type>string</type><parameter>personal</parameter></methodparam>
      <methodparam><type>string</type><parameter>language</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        spelling
       </parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        jargon
       </parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        encoding
       </parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        mode
       </parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_new_personal</function> opens up a new dictionary with
     a personal wordlist and returns the dictionary link identifier for use
     in other pspell functions. The wordlist can be modified and saved with
     <function>pspell_save_wordlist</function>, if desired. However, the
     replacement pairs are not saved. In order to save replacement pairs, you
     should create a config using <function>pspell_config_create</function>,
     set the personal wordlist file with 
     <function>pspell_config_personal</function>, 
     set the file for replacement pairs with 
     <function>pspell_config_repl</function>, and open a new dictionary with
     <function>pspell_new_config</function>.
    </simpara>
    <para>
     The personal parameter specifies the file where words added to the
     personal list will be stored. It should be an absolute filename
     beginning with '/' because otherwise it will be relative to $HOME,
     which is "/root" for most systems, and is probably not what you want.
    </para>
    <para>
     The language parameter is the language code which consists of the
     two letter ISO 639 language code and an optional two letter ISO
     3166 country code after a dash or underscore. 
    </para>
    <para>
     The spelling parameter is the requested spelling for languages
     with more than one spelling such as English. Known values are
     'american', 'british', and 'canadian'.
    </para>
    <para>
     The jargon parameter contains extra information to distinguish
     two different words lists that have the same language and
     spelling parameters.
    </para>
    <para>
     The encoding parameter is the encoding that words are expected to
     be in.  Valid values are 'utf-8', 'iso8859-*', 'koi8-r',
     'viscii', 'cp1252', 'machine unsigned 16', 'machine unsigned
     32'. This parameter is largely untested, so be careful when
     using.
    </para>
    <para>
     The mode parameter is the mode in which spellchecker will work.
     There are several modes available:
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>PSPELL_FAST</constant> - Fast mode (least number of
        suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_NORMAL</constant> - Normal mode (more suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_BAD_SPELLERS</constant> - Slow mode (a lot of
        suggestions)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>PSPELL_RUN_TOGETHER</constant> - Consider run-together words
        as legal compounds.  That is, "thecat" will be a legal compound,
        athough there should be a space between the two words. Changing this
        setting only affects the results returned by
        <function>pspell_check</function>; <function>pspell_suggest</function>
        will still return suggestions.
       </simpara>
      </listitem>
     </itemizedlist>
     Mode is a bitmask constructed from different constants listed above.
     However, <constant>PSPELL_FAST</constant>,
     <constant>PSPELL_NORMAL</constant> and
     <constant>PSPELL_BAD_SPELLERS</constant> are mutually exclusive, so you
     should select only one of them.
    </para>
    <para>
     For more information and examples, check out inline manual pspell
     website:<ulink url="&url.pspell;">&url.pspell;</ulink>.
    </para>
    <para>
     <example>
      <title><function>pspell_new_personal</function></title>
      <programlisting role="php">
$pspell_link = pspell_new_personal ("/var/dictionaries/custom.pws", 
        "en", "", "", "", PSPELL_FAST|PSPELL_RUN_TOGETHER));
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-save-wordlist">
   <refnamediv>
    <refname>pspell_save_wordlist</refname>
    <refpurpose>Save the personal wordlist to a file</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_save_wordlist</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_save_wordlist</function> saves the personal wordlist
     from the current session. The dictionary has to be open with
     <function>pspell_new_personal</function>, and the location of files to be
     saved specified with <function>pspell_config_personal</function> and 
     (optionally) <function>pspell_config_repl</function>. Please, note that
     this function will not work unless you have pspell .11.2 and aspell .32.5
     or later.
    </simpara>
    <para>
     <example>
      <title><function>pspell_add_to_personal</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_personal ($pspell_config, "/tmp/dicts/newdict");
$pspell_link = pspell_new_config ($pspell_config);

pspell_add_to_personal ($pspell_link, "Vlad");
pspell_save_wordlist ($pspell_link);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-store-replacement">
   <refnamediv>
    <refname>pspell_store_replacement</refname>
    <refpurpose>Store a replacement pair for a word</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>pspell_store_replacement</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>string</type><parameter>misspelled</parameter></methodparam>
      <methodparam><type>string</type><parameter>correct</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_store_replacement</function> stores a replacement pair for
     a word, so that replacement can be returned by
     <function>pspell_suggest</function> later. In order to be able to take
     advantage of this function, you have to use 
     <function>pspell_new_personal</function> to open the dictionary. In order
     to permanently save the replacement pair, you have to
     use <function>pspell_config_personal</function> and
     <function>pspell_config_repl</function> to set the path where to save your
     custom wordlists, and then use <function>pspell_save_wordlist</function>
     for the changes to be written to disk. Please, note that this function
     will not work unless you have pspell .11.2 and aspell .32.5 or later.
    </simpara>
    <para>
     <example>
      <title><function>pspell_store_replacement</function></title>
      <programlisting role="php">
$pspell_config = pspell_config_create ("en");
pspell_config_personal ($pspell_config, "/var/dictionaries/custom.pws");
pspell_config_repl ($pspell_config, "/var/dictionaries/custom.repl");
$pspell_link = pspell_new_config ($pspell_config);

pspell_store_replacement ($pspell_link, $misspelled, $correct);
pspell_save_wordlist ($pspell_link);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pspell-suggest">
   <refnamediv>
    <refname>pspell_suggest</refname>
    <refpurpose>Suggest spellings of a word</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>array</type><methodname>pspell_suggest</methodname>
      <methodparam><type>int</type><parameter>dictionary_link</parameter></methodparam>
      <methodparam><type>string</type><parameter>word</parameter></methodparam>
     
    </methodsynopsis>
    <simpara>
     <function>pspell_suggest</function> returns an array of possible
     spellings for the given word.
    </simpara>
    <para>
     <example>
      <title><function>pspell_suggest</function></title>
      <programlisting role="php">
$pspell_link = pspell_new ("en");

if (!pspell_check ($pspell_link, "testt")) {
    $suggestions = pspell_suggest ($pspell_link, "testt");

    foreach ($suggestions as $suggestion) {
        echo "Possible spelling: $suggestion&lt;br>"; 
    }
}
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 1.60.2.2 $ -->
<reference id="ref.image">
 <title>Image functions</title>
 <titleabbrev>Image</titleabbrev>
 
 <partintro>
  <simpara>
   You can use the image functions in PHP to get the size of
   <acronym>JPEG</acronym>, <acronym>GIF</acronym>,
   <acronym>PNG</acronym>, and <acronym>SWF</acronym> images, and if
   you have the <acronym>GD</acronym> library (available at <ulink url="&url.gd;">&url.gd;</ulink>) you will also be able to create
   and manipulate images.
  </simpara>
  <simpara>
   The format of images you are able to manipulate depend on the
   version of gd you install, and any other libraries gd might need
   to access those image formats. Versions of gd older than gd-1.6
   support gif format images, and do not support png, where versions
   greater than gd-1.6 support png, not gif.
  </simpara>
  <simpara>
   In order to read and write images in jpeg format, you will need to
   obtain and install jpeg-6b (available at
   <ulink url="&url.jpeg;">&url.jpeg;</ulink>), and then recompile gd to
   make use of jpeg-6b. You will also have to compile PHP with
   <option role="configure">--with-jpeg-dir=/path/to/jpeg-6b</option>.
  </simpara>
  <simpara>
   To add support for Type 1 fonts, you can install t1lib (available
   at <ulink url="&url.t1lib;">&url.t1lib;</ulink>), and then add
   <option role="configure">--with-t1lib[=dir]</option>.
  </simpara>
 </partintro>
 
 <refentry id="function.getimagesize">
  <refnamediv>
   <refname>GetImageSize</refname>
   <refpurpose>Get the size of a GIF, JPEG, PNG or SWF image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>array</type><methodname>getimagesize</methodname>
     <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     <methodparam choice="opt"><type>array</type><parameter>imageinfo</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    The <function>GetImageSize</function> function will determine the
    size of any <acronym>GIF</acronym>, <acronym>JPG</acronym>,
    <acronym>PNG</acronym> or <acronym>SWF</acronym> image file and
    return the dimensions along with the file type and a height/width
    text string to be used inside a normal <acronym>HTML</acronym>
    <sgmltag>IMG</sgmltag> tag.
   </para>
   <para>
    Returns an array with 4 elements.  Index 0 contains the width of
    the image in pixels.  Index 1 contains the height.  Index 2 a
    flag indicating the type of the image.  1 = GIF, 2 = JPG, 3 =
    PNG, 4 = SWF.  Index 3 is a text string with the correct
    "height=xxx width=xxx" string that can be used directly in an IMG
    tag.
    <example>
     <title>GetImageSize (file)</title>
     <programlisting role="php">
&lt;?php $size = GetImageSize ("img/flag.jpg"); ?>
&lt;IMG SRC="img/flag.jpg" &lt;?php echo $size[3]; ?>
     </programlisting>
    </example>
   </para>
   <para>
    <example>
     <title>GetImageSize (URL)</title>
     <programlisting role="php">
&lt;?php $size = GetImageSize ("http://www.php.net/gifs/logo.gif"); ?>
     </programlisting>
    </example>
   </para>
   <para>
    With <acronym>JPEG</acronym> images, two extras index are returned : 
    <literal>channel</literal> and <literal>bits</literal>. 
    <literal>channel</literal> will be 3 for RGB pictures, and 4 for CMYK 
    pictures. <literal>bits</literal> is the number of bits for each color.
   </para>
   <para>
    If accessing the <parameter>filename</parameter> image is impossible,
    or if it isn't a valid picture, <function>getimagesize</function>
    will return &null; and generate a warning.
   </para>
   <para>
    The optional <parameter>imageinfo</parameter> parameter allows
    you to extract some extended information from the image
    file. Currently this will return the different
    <acronym>JPG</acronym> APP markers in an associative Array. Some
    Programs use these APP markers to embedd text information in
    images. A very common one in to embed <acronym>IPTC</acronym>
    <ulink url="&url.iptc;">&url.iptc;</ulink> information in the
    APP13 marker. You can use the <function>iptcparse</function>
    function to parse the binary APP13 marker into something
    readable.
    <example>
     <title>GetImageSize returning IPTC</title>
     <programlisting>
&lt;?php
    $size = GetImageSize ("testimg.jpg",&amp;$info);
    if (isset ($info["APP13"])) {
        $iptc = iptcparse ($info["APP13"]);
        var_dump ($iptc);
    }
?&gt;
     </programlisting>
    </example>
    <note>
     <simpara>
      This function does not require the GD image library.
     </simpara>
    </note>
    <note>
     <simpara>
      URL support was added in PHP 4.0.5
     </simpara>
    </note>
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagealphablending">
  <refnamediv>
   <refname>ImageAlphaBlending</refname>
   <refpurpose>Set the blending mode for an image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagealphablending</methodname>
     <methodparam><type>resource</type><parameter>im</parameter></methodparam>
     <methodparam><type>bool</type><parameter>blendmode</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageAlphaBlending</function> allows for two different
    modes of drawing on truecolor images.  In blending mode, the
    alpha channel component of the color supplied to all drawing function,
    such as <function>ImageSetPixel</function> determines how much of the
    underlying color should be allowed to shine through.  As a result, gd
    automatically blends the existing color at that point with the drawing color,
    and stores the result in the image.  The resulting pixel is opaque.  In
    non-blending mode, the drawing color is copied literally with its alpha channel
    information, replacing the destination pixel.  Blending mode is not available
    when drawing on palette images.
    If <parameter>blendmode</parameter> is &true;, then blending mode is enabled, otherwise
    disabled.
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1</para></note>
  </refsect1>
 </refentry>
 
 
 <refentry id="function.imagearc">
  <refnamediv>
   <refname>ImageArc</refname>
   <refpurpose>Draw a partial ellipse</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagearc</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>cx</parameter></methodparam>
     <methodparam><type>int</type><parameter>cy</parameter></methodparam>
     <methodparam><type>int</type><parameter>w</parameter></methodparam>
     <methodparam><type>int</type><parameter>h</parameter></methodparam>
     <methodparam><type>int</type><parameter>s</parameter></methodparam>
     <methodparam><type>int</type><parameter>e</parameter></methodparam>
     <methodparam><type>int</type><parameter>col</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageArc</function> draws a partial ellipse centered at
    <parameter>cx</parameter>, <parameter>cy</parameter> (top left is
    0, 0) in the image represented by <parameter>im</parameter>.
    <parameter>W</parameter>
    and <parameter>h</parameter> specifies the ellipse's width and
    height respectively while the start and end points are specified
    in degrees indicated by the <parameter>s</parameter> and
    <parameter>e</parameter>.  arguments.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagefilledarc">
  <refnamediv>
   <refname>ImageFilledArc</refname>
   <refpurpose>Draw a partial ellipse and fill it</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagefilledarc</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>cx</parameter></methodparam>
     <methodparam><type>int</type><parameter>cy</parameter></methodparam>
     <methodparam><type>int</type><parameter>w</parameter></methodparam>
     <methodparam><type>int</type><parameter>h</parameter></methodparam>
     <methodparam><type>int</type><parameter>s</parameter></methodparam>
     <methodparam><type>int</type><parameter>e</parameter></methodparam>
     <methodparam><type>int</type><parameter>col</parameter></methodparam>
     <methodparam><type>int</type><parameter>style</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageFilledArc</function> draws a partial ellipse centered at
    <parameter>cx</parameter>, <parameter>cy</parameter> (top left is
    0, 0) in the image represented by <parameter>im</parameter>.
    <parameter>W</parameter>
    and <parameter>h</parameter> specifies the ellipse's width and
    height respectively while the start and end points are specified
    in degrees indicated by the <parameter>s</parameter> and
    <parameter>e</parameter> arguments.
    <parameter>style</parameter> is a bitwise OR of the following possibilities:
    <orderedlist>
     <listitem><simpara><literal>IMG_ARC_PIE</literal></simpara></listitem>
     <listitem><simpara><literal>IMG_ARC_CHORD</literal></simpara></listitem>
     <listitem><simpara><literal>IMG_ARC_NOFILL</literal></simpara></listitem>
     <listitem><simpara><literal>IMG_ARC_EDGED</literal></simpara></listitem>
    </orderedlist>
    <literal>IMG_ARC_PIE</literal> and <literal>IMG_ARC_CHORD</literal> are mutually exclusive; <literal>IMG_ARC_CHORD</literal> just
    connects the starting and ending angles with a straight line, while
    <literal>IMG_ARC_PIE</literal> produces a rounded edge.  <literal>IMG_ARC_NOFILL</literal> indicates that the arc
    or chord should be outlined, not filled.  <literal>IMG_ARC_EDGED</literal>, used together with
    <literal>IMG_ARC_NOFILL</literal>, indicates that the beginning and ending angles should be
    connected to the center - this is a good way to outline (rather than fill)
    a 'pie slice'.
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1</para></note>
  </refsect1>
 </refentry>
 
 
 
 <refentry id="function.imageellipse">
  <refnamediv>
   <refname>ImageEllipse</refname>
   <refpurpose>Draw an ellipse</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imageellipse</methodname>
     <methodparam><type>resource</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>cx</parameter></methodparam>
     <methodparam><type>int</type><parameter>cy</parameter></methodparam>
     <methodparam><type>int</type><parameter>w</parameter></methodparam>
     <methodparam><type>int</type><parameter>h</parameter></methodparam>
     <methodparam><type>int</type><parameter>col</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageEllipse</function> draws an ellipse centered at
    <parameter>cx</parameter>, <parameter>cy</parameter> (top left is
    0, 0) in the image represented by <parameter>im</parameter>.
    <parameter>W</parameter> and <parameter>h</parameter> specifies the
    ellipse's width and height respectively. The color of the ellipse is
    specified by <parameter>color</parameter>.
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.2 or later</para></note>
  </refsect1>
 </refentry>
 
 
 <refentry id="function.imagefilledellipse">
  <refnamediv>
   <refname>ImageFilledEllipse</refname>
   <refpurpose>Draw a filled ellipse</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagefilledellipse</methodname>
     <methodparam><type>resource</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>cx</parameter></methodparam>
     <methodparam><type>int</type><parameter>cy</parameter></methodparam>
     <methodparam><type>int</type><parameter>w</parameter></methodparam>
     <methodparam><type>int</type><parameter>h</parameter></methodparam>
     <methodparam><type>int</type><parameter>col</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageFilledEllipse</function> draws an ellipse centered at
    <parameter>cx</parameter>, <parameter>cy</parameter> (top left is
    0, 0) in the image represented by <parameter>im</parameter>.
    <parameter>W</parameter> and <parameter>h</parameter> specifies the
    ellipse's width and height respectively. The ellipse is filled using
    <parameter>color</parameter>
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1 or later</para></note>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagechar">
  <refnamediv>
   <refname>ImageChar</refname>
   <refpurpose>Draw a character horizontally</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagechar</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>font</parameter></methodparam>
     <methodparam><type>int</type><parameter>x</parameter></methodparam>
     <methodparam><type>int</type><parameter>y</parameter></methodparam>
     <methodparam><type>string</type><parameter>c</parameter></methodparam>
     <methodparam><type>int</type><parameter>col</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageChar</function> draws the first character of
    <parameter>c</parameter> in the image identified by
    <parameter>id</parameter> with its upper-left at
    <parameter>x</parameter>,<parameter>y</parameter> (top left is 0,
    0) with the color <parameter>col</parameter>. If <parameter>font</parameter>
    is 1, 2, 3, 4 or 5, a built-in font is used (with higher numbers
    corresponding to larger fonts).
   </para>
   <para>
    See also <function>imageloadfont</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecharup">
  <refnamediv>
   <refname>ImageCharUp</refname>
   <refpurpose>Draw a character vertically</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecharup</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>font</parameter></methodparam>
     <methodparam><type>int</type><parameter>x</parameter></methodparam>
     <methodparam><type>int</type><parameter>y</parameter></methodparam>
     <methodparam><type>string</type><parameter>c</parameter></methodparam>
     <methodparam><type>int</type><parameter>col</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageCharUp</function> draws the character
    <parameter>c</parameter> vertically in the image identified by
    <parameter>im</parameter> at coordinates
    <parameter>x</parameter>, <parameter>y</parameter> (top left is
    0, 0) with the color <parameter>col</parameter>.
    If <parameter>font</parameter> is 1, 2, 3, 4 or 5, a built-in font is
    used.
   </para>
   <para>
    See also <function>imageloadfont</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorallocate">
  <refnamediv>
   <refname>ImageColorAllocate</refname>
   <refpurpose>Allocate a color for an image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorallocate</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageColorAllocate</function> returns a color
    identifier representing the color composed of the given
    <acronym>RGB</acronym> components.  The <parameter>im</parameter>
    argument is the return from the <function>imagecreate</function>
    function.  <parameter>Red</parameter>, <parameter>green</parameter> and
    blue are the values of the red, green and blue component of the requested
    color respectively.  These parameters are integers between 0 and 255.
    <function>ImageColorAllocate</function> must be called
    to create each color that is to be used in the image represented
    by <parameter>im</parameter>.
    <informalexample>
     <programlisting role="php">
$white = ImageColorAllocate ($im, 255, 255, 255);
$black = ImageColorAllocate ($im, 0, 0, 0);
     </programlisting>
    </informalexample>
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolordeallocate">
  <refnamediv>
   <refname>ImageColorDeAllocate</refname>
   <refpurpose>
    De-allocate a color for an image
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolordeallocate</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>index</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    The <function>ImageColorDeAllocate</function> function
    de-allocates a color previously allocated with the
    <function>ImageColorAllocate</function> function.
    <informalexample>
     <programlisting role="php">
$white = ImageColorAllocate($im, 255, 255, 255);
ImageColorDeAllocate($im, $white);
     </programlisting>
    </informalexample>
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorat">
  <refnamediv>
   <refname>ImageColorAt</refname>
   <refpurpose>Get the index of the color of a pixel</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorat</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>x</parameter></methodparam>
     <methodparam><type>int</type><parameter>y</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    Returns the index of the color of the pixel at the
    specified location in the image.
   </para>
   <para>
    See also <function>imagecolorset</function> and
    <function>imagecolorsforindex</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorclosest">
  <refnamediv>
   <refname>ImageColorClosest</refname>
   <refpurpose>
    Get the index of the closest color to the specified color
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorclosest</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    Returns the index of the color in the palette of the image which
    is "closest" to the specified <acronym>RGB</acronym> value.
   </para>
   <para>
    The "distance" between the desired color and each color in the
    palette is calculated as if the <acronym>RGB</acronym> values
    represented points in three-dimensional space.
   </para>
   <para>
    See also <function>imagecolorexact</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorclosestalpha">
  <refnamediv>
   <refname>ImageColorClosestAlpha</refname>
   <refpurpose>
    Get the index of the closest color to the specified color + alpha
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorclosestalpha</methodname>
     <methodparam><type>resource</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    Returns the index of the color in the palette of the image which
    is "closest" to the specified <acronym>RGB</acronym> value and <parameter>alpha</parameter> level.
   </para>
   <para>
    See also <function>imagecolorexactalpha</function>.
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1</para></note>
  </refsect1>
 </refentry>
 
 
 
 <refentry id="function.imagecolorexact">
  <refnamediv>
   <refname>ImageColorExact</refname>
   <refpurpose>Get the index of the specified color</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorexact</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    Returns the index of the specified color in the palette of the
    image.
   </para>
   <para>
    If the color does not exist in the image's palette, -1 is
    returned.
   </para>
   <para>
    See also <function>imagecolorclosest</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorexactalpha">
  <refnamediv>
   <refname>ImageColorExactAlpha</refname>
   <refpurpose>Get the index of the specified color + alpha</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorexactalpha</methodname>
     <methodparam><type>resource</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    Returns the index of the specified color+alpha in the palette of the
    image.
   </para>
   <para>
    If the color does not exist in the image's palette, -1 is
    returned.
   </para>
   <para>
    See also <function>imagecolorclosestalpha</function>.
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1 or later</para></note>
  </refsect1>
 </refentry>
 
 
 <refentry id="function.imagecolorresolve">
  <refnamediv>
   <refname>ImageColorResolve</refname>
   <refpurpose>
    Get the index of the specified color or its closest possible
    alternative
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorresolve</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    This function is guaranteed to return a color index for a
    requested color, either the exact color or the closest possible
    alternative.
   </para>
   <para>
    See also <function>imagecolorclosest</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorresolvealpha">
  <refnamediv>
   <refname>ImageColorResolveAlpha</refname>
   <refpurpose>
    Get the index of the specified color + alpha or its closest possible
    alternative
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorresolvealpha</methodname>
     <methodparam><type>resource</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    This function is guaranteed to return a color index for a
    requested color, either the exact color or the closest possible
    alternative.
   </para>
   <para>
    See also <function>imagecolorclosestalpha</function>.
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1</para></note>
  </refsect1>
 </refentry>
 
 
 
 <refentry id="function.imagegammacorrect">
  <refnamediv>
   <refname>ImageGammaCorrect</refname>
   <refpurpose>
    Apply a gamma correction to a GD image
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagegammacorrect</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>float</type><parameter>inputgamma</parameter></methodparam>
     <methodparam><type>float</type><parameter>outputgamma</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    The <function>ImageGammaCorrect</function> function applies gamma
    correction to a gd image stream (<parameter>im</parameter>) given
    an input gamma, the parameter <parameter>inputgamma</parameter>
    and an output gamma, the parameter
    <parameter>outputgamma</parameter>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorset">
  <refnamediv>
   <refname>ImageColorSet</refname>
   <refpurpose>
    Set the color for the specified palette index
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>bool</type><methodname>imagecolorset</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>index</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    This sets the specified index in the palette to the specified
    color. This is useful for creating flood-fill-like effects in
    paletted images without the overhead of performing the actual
    flood-fill.
   </para>
   <para>
    See also <function>imagecolorat</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorsforindex">
  <refnamediv>
   <refname>ImageColorsForIndex</refname>
   <refpurpose>Get the colors for an index</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>array</type><methodname>imagecolorsforindex</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam><type>int</type><parameter>index</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    This returns an associative array with red, green, and blue keys
    that contain the appropriate values for the specified color
    index.
   </para>
   <para>
    See also <function>imagecolorat</function> and
    <function>imagecolorexact</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolorstotal">
  <refnamediv>
   <refname>ImageColorsTotal</refname>
   <refpurpose>
    Find out the number of colors in an image's palette
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolorstotal</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    This returns the number of colors in the specified image's
    palette.
   </para>
   <para>
    See also <function>imagecolorat</function> and
    <function>imagecolorsforindex</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecolortransparent">
  <refnamediv>
   <refname>ImageColorTransparent</refname>
   <refpurpose>Define a color as transparent</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecolortransparent</methodname>
     <methodparam><type>int</type><parameter>im</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>col</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageColorTransparent</function> sets the transparent
    color in the <parameter>im</parameter> image to
    <parameter>col</parameter>.  <parameter>Im</parameter> is the
    image identifier returned by <function>ImageCreate</function> and
    <parameter>col</parameter> is a color identifier returned by
    <function>ImageColorAllocate</function>.
   </para>
   <para>
    The identifier of the new (or current, if none is specified)
    transparent color is returned.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecopy">
  <refnamediv>
   <refname>ImageCopy</refname>
   <refpurpose>
    Copy part of an image
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>ImageCopy</methodname>
     <methodparam><type>resource</type><parameter>dst_im</parameter></methodparam>
     <methodparam><type>resource</type><parameter>src_im</parameter></methodparam>
     <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
     <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_w</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_h</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    Copy a part of <parameter>src_im</parameter> onto
    <parameter>dst_im</parameter> starting at the x,y coordinates
    <parameter>src_x</parameter>, <parameter>src_y </parameter> with
    a width of <parameter>src_w</parameter> and a height of
    <parameter>src_h</parameter>.  The portion defined will be copied
    onto the x,y coordinates, <parameter>dst_x</parameter> and
    <parameter>dst_y</parameter>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecopymerge">
  <refnamediv>
   <refname>ImageCopyMerge</refname>
   <refpurpose>
    Copy and merge part of an image
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>ImageCopyMerge</methodname>
     <methodparam><type>resource</type><parameter>dst_im</parameter></methodparam>
     <methodparam><type>resource</type><parameter>src_im</parameter></methodparam>
     <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
     <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_w</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_h</parameter></methodparam>
     <methodparam><type>int</type><parameter>pct</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    Copy a part of <parameter>src_im</parameter> onto
    <parameter>dst_im</parameter> starting at the x,y coordinates
    <parameter>src_x</parameter>, <parameter>src_y </parameter> with
    a width of <parameter>src_w</parameter> and a height of
    <parameter>src_h</parameter>.  The portion defined will be copied
    onto the x,y coordinates, <parameter>dst_x</parameter> and
    <parameter>dst_y</parameter>.
    The two images will be merged according to <parameter>pct</parameter>
    which can range from 0 to 100.  When <parameter>pct</parameter> = 0,
    no action is taken, when 100 this function behaves identically
    to <function>ImageCopy</function>.
   </para>
   <note><para>This function was added in PHP 4.0.6</para></note>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecopymergegray">
  <refnamediv>
   <refname>ImageCopyMergeGray</refname>
   <refpurpose>
    Copy and merge part of an image with gray scale
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>ImageCopyMergeGray</methodname>
     <methodparam><type>resource</type><parameter>dst_im</parameter></methodparam>
     <methodparam><type>resource</type><parameter>src_im</parameter></methodparam>
     <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
     <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_w</parameter></methodparam>
     <methodparam><type>int</type><parameter>src_h</parameter></methodparam>
     <methodparam><type>int</type><parameter>pct</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageCopyMergeGray</function> copy a part of <parameter>src_im</parameter> onto
    <parameter>dst_im</parameter> starting at the x,y coordinates
    <parameter>src_x</parameter>, <parameter>src_y </parameter> with
    a width of <parameter>src_w</parameter> and a height of
    <parameter>src_h</parameter>.  The portion defined will be copied
    onto the x,y coordinates, <parameter>dst_x</parameter> and
    <parameter>dst_y</parameter>.
    The two images will be merged according to <parameter>pct</parameter>
    which can range from 0 to 100.  When <parameter>pct</parameter> = 0,
    no action is taken, when 100 this function behaves identically
    to <function>ImageCopy</function>.
   </para>
   <para>
    This function is identical to <function>ImageCopyMerge</function> except
    that when merging it preservese the hue of the source by converting
    the destination pixels to gray scale before the copy operation.
   </para>
   <note><para>This function was added in PHP 4.0.6</para></note>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecopyresized">
  <refnamediv>
   <refname>ImageCopyResized</refname>
   <refpurpose>Copy and resize part of an image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecopyresized</methodname>
     <methodparam><type>resource</type><parameter>dst_im</parameter></methodparam>
     <methodparam><type>resource</type><parameter>src_im</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstX</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstY</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcX</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcY</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstW</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstH</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcW</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcH</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageCopyResized</function> copies a rectangular
    portion of one image to another image.
    <parameter>Dst_im</parameter> is the destination image,
    <parameter>src_im</parameter> is the source image identifier.  If
    the source and destination coordinates and width and heights
    differ, appropriate stretching or shrinking of the image fragment
    will be performed.  The coordinates refer to the upper left
    corner.  This function can be used to copy regions within the
    same image (if <parameter>dst_im</parameter> is the same as
    <parameter>src_im</parameter>) but if the regions overlap the
    results will be unpredictable.
   </para>
   <para>
    See also <function>ImageCopyResampled</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecopyresampled">
  <refnamediv>
   <refname>ImageCopyResampled</refname>
   <refpurpose>Copy and resize part of an image with resampling</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecopyresampled</methodname>
     <methodparam><type>resource</type><parameter>dst_im</parameter></methodparam>
     <methodparam><type>resource</type><parameter>src_im</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstX</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstY</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcX</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcY</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstW</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstH</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcW</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcH</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageCopyResampled</function> copies a rectangular
    portion of one image to another image, smoothly interpolating pixel
    values so that, in particular, reducing the size of an image still
    retains a great deal of clarity.
    <parameter>Dst_im</parameter> is the destination image,
    <parameter>src_im</parameter> is the source image identifier.  If
    the source and destination coordinates and width and heights
    differ, appropriate stretching or shrinking of the image fragment
    will be performed.  The coordinates refer to the upper left
    corner.  This function can be used to copy regions within the
    same image (if <parameter>dst_im</parameter> is the same as
    <parameter>src_im</parameter>) but if the regions overlap the
    results will be unpredictable.
   </para>
   <para>
    See also <function>ImageCopyResized</function>.
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1 or later</para></note>
  </refsect1>
 </refentry>

 <refentry id="function.imagecreate">
  <refnamediv>
   <refname>ImageCreate</refname>
   <refpurpose>Create a new palette based image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>int</type><methodname>imagecreate</methodname>
     <methodparam><type>int</type><parameter>x_size</parameter></methodparam>
     <methodparam><type>int</type><parameter>y_size</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageCreate</function> returns an image identifier
    representing a blank image of size <parameter>x_size</parameter>
    by <parameter>y_size</parameter>.
    <example>
     <title>
      Creating a new GD image stream and outputting an image.
     </title>
     <programlisting role="php">
&lt;?php
header ("Content-type: image/png");
$im = @ImageCreate (50, 100)
    or die ("Cannot Initialize new GD image stream");
$background_color = ImageColorAllocate ($im, 255, 255, 255);
$text_color = ImageColorAllocate ($im, 233, 14, 91);
ImageString ($im, 1, 5, 5,  "A Simple Text String", $text_color);
ImagePng ($im);
?>
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.imagecreatetruecolor">
  <refnamediv>
   <refname>ImageCreateTrueColor</refname>
   <refpurpose>Create a new &true; color image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    
     <type>resource</type><methodname>imagecreatetruecolor</methodname>
     <methodparam><type>int</type><parameter>x_size</parameter></methodparam>
     <methodparam><type>int</type><parameter>y_size</parameter></methodparam>
    
   </methodsynopsis>
   <para>
    <function>ImageCreateTrueColor</function> returns an image identifier
    representing a black image of size <parameter>x_size</parameter>
    by <parameter>y_size</parameter>.
   </para>
   <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1 or later</para></note>   </refsect1>
  </refentry>
  
  <refentry id="function.imagetruecolortopalette">
   <refnamediv>
    <refname>ImageTrueColorToPalette</refname>
    <refpurpose>Convert a &true; color image to a palette image</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>void</type><methodname>imagetruecolortopalette</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>bool</type><parameter>dither</parameter></methodparam>
      <methodparam><type>int</type><parameter>ncolors</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageTrueColorToPalette</function> converts a truecolor image
     to a palette image. The code for this function was originally drawn from
     the Independent JPEG Group library code, which is excellent. The code
     has been modified to preserve as much alpha channel information as
     possible in the resulting palette, in addition to preserving colors as
     well as possible. This does not work as well as might be hoped. It is
     usually best to simply produce a truecolor output image instead, which
     guarantees the highest output quality.
    </para>
    <para>
     <parameter>dither</parameter> indicates if the image should be dithered -
     if it is &true; then dithering will be used which will result in a more
     speckled image but with better color approximation.
    </para>
    <para>
     <parameter>ncolors</parameter> sets the maximum number of colors that
     should be retained in the palette.
    </para>
    <note>
     <para>
      This function was added in PHP 4.0.6 and requires GD 2.0.1 or later
     </para>
    </note>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagecreatefromgif">
   <refnamediv>
    <refname>ImageCreateFromGIF</refname>
    <refpurpose>Create a new image from file or URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagecreatefromgif</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageCreateFromGif</function> returns an image identifier
     representing the image obtained from the given filename.
    </para>
    <para>
     <function>ImageCreateFromGif</function> returns an empty string
     on failure. It also outputs an error message, which unfortunately
     displays as a broken link in a browser.  To ease debugging the
     following example will produce an error GIF:
     <example>
      <title>
       Example to handle an error during creation (courtesy
       vic@zymsys.com)
      </title>
      <programlisting role="php">
function LoadGif ($imgname) {
    $im = @ImageCreateFromGIF ($imgname); /* Attempt to open */
    if (!$im) { /* See if it failed */
        $im = ImageCreate (150, 30); /* Create a blank image */
        $bgc = ImageColorAllocate ($im, 255, 255, 255);
        $tc  = ImageColorAllocate ($im, 0, 0, 0);
        ImageFilledRectangle ($im, 0, 0, 150, 30, $bgc);
        /* Output an errmsg */
        ImageString($im, 1, 5, 5, "Error loading $imgname", $tc);
    }
    return $im;
}
      </programlisting>
     </example>
     <note>
      <para>
       Since all GIF support was removed from the GD library in
       version 1.6, this function is not available if you are using
       that version of the GD library.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagecreatefromjpeg">
   <refnamediv>
    <refname>ImageCreateFromJPEG</refname>
    <refpurpose>Create a new image from file or URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagecreatefromjpeg</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageCreateFromJPEG</function> returns an image identifier
     representing the image obtained from the given filename.
    </para>
    <para>
     <function>ImagecreateFromJPEG</function> returns an empty string
     on failure. It also outputs an error message, which unfortunately
     displays as a broken link in a browser.  To ease debugging the
     following example will produce an error <acronym>JPEG</acronym>:
     <example>
      <title>
       Example to handle an error during creation (courtesy
       vic@zymsys.com )
      </title>
      <programlisting role="php">
function LoadJpeg ($imgname) {
    $im = @ImageCreateFromJPEG ($imgname); /* Attempt to open */
    if (!$im) { /* See if it failed */
        $im = ImageCreate (150, 30); /* Create a blank image */
        $bgc = ImageColorAllocate ($im, 255, 255, 255);
        $tc  = ImageColorAllocate ($im, 0, 0, 0);
        ImageFilledRectangle ($im, 0, 0, 150, 30, $bgc);
        /* Output an errmsg */
        ImageString ($im, 1, 5, 5, "Error loading $imgname", $tc);
    }
    return $im;
}
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagecreatefrompng">
   <refnamediv>
    <refname>ImageCreateFromPNG</refname>
    <refpurpose>Create a new image from file or URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagecreatefrompng</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageCreateFromPNG</function> returns an image identifier
     representing the image obtained from the given filename.
    </para>
    <para>
     <function>ImageCreateFromPNG</function> returns an empty string
     on failure. It also outputs an error message, which unfortunately
     displays as a broken link in a browser.  To ease debugging the
     following example will produce an error <acronym>PNG</acronym>:
     <example>
      <title>
       Example to handle an error during creation (courtesy
       vic@zymsys.com)
      </title>
      <programlisting role="php">
function LoadPNG ($imgname) {
    $im = @ImageCreateFromPNG ($imgname); /* Attempt to open */
    if (!$im) { /* See if it failed */
        $im  = ImageCreate (150, 30); /* Create a blank image */
        $bgc = ImageColorAllocate ($im, 255, 255, 255);
        $tc  = ImageColorAllocate ($im, 0, 0, 0);
        ImageFilledRectangle ($im, 0, 0, 150, 30, $bgc);
        /* Output an errmsg */
        ImageString ($im, 1, 5, 5, "Error loading $imgname", $tc);
    }
    return $im;
}
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagecreatefromwbmp">
   <refnamediv>
    <refname>ImageCreateFromWBMP</refname>
    <refpurpose>Create a new image from file or URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagecreatefromwbmp</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageCreateFromWBMP</function> returns an image identifier
     representing the image obtained from the given filename.
    </para>
    <para>
     <function>ImageCreateFromWBMP</function> returns an empty string
     on failure. It also outputs an error message, which unfortunately
     displays as a broken link in a browser.  To ease debugging the
     following example will produce an error <acronym>WBMP</acronym>:
     <example>
      <title>
       Example to handle an error during creation (courtesy
       vic@zymsys.com)
      </title>
      <programlisting role="php">
function LoadWBMP ($imgname) {
    $im = @ImageCreateFromWBMP ($imgname); /* Attempt to open */
    if (!$im) { /* See if it failed */
        $im  = ImageCreate (20, 20); /* Create a blank image */
        $bgc = ImageColorAllocate ($im, 255, 255, 255);
        $tc  = ImageColorAllocate ($im, 0, 0, 0);
        ImageFilledRectangle ($im, 0, 0, 10, 10, $bgc);
        /* Output an errmsg */
        ImageString ($im, 1, 5, 5, "Error loading $imgname", $tc);
    }
    return $im;
}
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagecreatefromstring">
   <refnamediv>
    <refname>ImageCreateFromString</refname>
    <refpurpose>Create a new image from the image stream in the string</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagecreatefromstring</methodname>
      <methodparam><type>string</type><parameter>image</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageCreateFromString</function> returns an image identifier
     representing the image obtained from the given string.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagedashedline">
   <refnamediv>
    <refname>ImageDashedLine</refname>
    <refpurpose>Draw a dashed line</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagedashedline</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     This function is deprecated. Use combination of 
     <function>ImageSetStyle</function> and <function>ImageLine</function>
     instead.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagedestroy">
   <refnamediv>
    <refname>ImageDestroy</refname>
    <refpurpose>Destroy an image</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagedestroy</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageDestroy</function> frees any memory associated
     with image <parameter>im</parameter>.  <parameter>Im</parameter>
     is the image identifier returned by the
     <function>ImageCreate</function> function.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagefill">
   <refnamediv>
    <refname>ImageFill</refname>
    <refpurpose>Flood fill</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagefill</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageFill</function> performs a flood fill starting at
     coordinate <parameter>x</parameter>, <parameter>y</parameter>
     (top left is 0, 0) with color <parameter>col</parameter> in the
     image <parameter>im</parameter>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagefilledpolygon">
   <refnamediv>
    <refname>ImageFilledPolygon</refname>
    <refpurpose>Draw a filled polygon</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagefilledpolygon</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>array</type><parameter>points</parameter></methodparam>
      <methodparam><type>int</type><parameter>num_points</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageFilledPolygon</function> creates a filled polygon
     in image <parameter>im</parameter>.
     <parameter>Points</parameter> is a PHP array containing the
     polygon's vertices, ie. points[0] = x0, points[1] = y0, points[2]
     = x1, points[3] = y1, etc.  <parameter>Num_points</parameter> is
     the total number of vertices.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagefilledrectangle">
   <refnamediv>
    <refname>ImageFilledRectangle</refname>
    <refpurpose>Draw a filled rectangle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagefilledrectangle</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageFilledRectangle</function> creates a filled
     rectangle of color <parameter>col</parameter> in image
     <parameter>im</parameter> starting at upper left coordinates
     <parameter>x1</parameter>, <parameter>y1</parameter> and ending
     at bottom right coordinates <parameter>x2</parameter>,
     <parameter>y2</parameter>.  0, 0 is the top left corner of the
     image.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagefilltoborder">
   <refnamediv>
    <refname>ImageFillToBorder</refname>
    <refpurpose>Flood fill to specific color</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagefilltoborder</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>border</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageFillToBorder</function> performs a flood fill
     whose border color is defined by <parameter>border</parameter>.
     The starting point for the fill is <parameter>x</parameter>,
     <parameter>y</parameter> (top left is 0, 0) and the region is
     filled with color <parameter>col</parameter>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagefontheight">
   <refnamediv>
    <refname>ImageFontHeight</refname>
    <refpurpose>Get font height</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagefontheight</methodname>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Returns the pixel height of a character in the specified font.
    </para>
    <para>
     See also <function>ImageFontWidth</function> and
     <function>ImageLoadFont</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagefontwidth">
   <refnamediv>
    <refname>ImageFontWidth</refname>
    <refpurpose>Get font width</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagefontwidth</methodname>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Returns the pixel width of a character in font.
    </para>
    <para>
     See also <function>ImageFontHeight</function> and
     <function>ImageLoadFont</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagegif">
   <refnamediv>
    <refname>ImageGIF</refname>
    <refpurpose>Output image to browser or file</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagegif</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageGIF</function> creates the <acronym>GIF</acronym>
     file in filename from the image <parameter>im</parameter>. The
     <parameter>im</parameter> argument is the return from the
     <function>imagecreate</function> function.
    </para>
    <para>
     The image format will be <acronym>GIF87a</acronym> unless the
     image has been made transparent with
     <function>ImageColorTransparent</function>, in which case the
     image format will be <acronym>GIF89a</acronym>.
    </para>
    <para>
     The filename argument is optional, and if left off, the raw image
     stream will be output directly.  By sending an image/gif
     content-type using <function>header</function>, you can create a
     PHP script that outputs <acronym>GIF</acronym> images directly.
     <note>
      <para>
       Since all <acronym>GIF</acronym> support was removed from the
       <acronym>GD</acronym> library in version 1.6, this function is
       not available if you are using that version of the GD library.
      </para>
      <para>
       The following code snippet allows you to write more
       portable PHP applications by auto-detecting the
       type of GD support which is available. Replace
       the sequence <literal>Header("Content-type: image/gif");
       ImageGIF($im);</literal> by the more flexible sequence:
       <informalexample>
        <programlisting role="php">
&lt;?php
  if (function_exists("imagegif")) {
    Header("Content-type: image/gif");
    ImageGIF($im);
  }
  elseif (function_exists("imagejpeg")) {
    Header("Content-type: image/jpeg");
    ImageJPEG($im, "", 0.5);
  }
  elseif (function_exists("imagepng")) {
    Header("Content-type: image/png");
    ImagePNG($im);
  }
  elseif (function_exists("imagewbmp")) {
    Header("Content-type: image/vnd.wap.wbmp");
    ImageWBMP($im);
  }
  else
    die("No image support in this PHP server");
?&gt;
        </programlisting>
       </informalexample>
      </para>
     </note>
     <note>
      <para>
       As of version 3.0.18 and 4.0.2 you can use the function
       <function>imagetypes</function> in place of
       <function>function_exists</function> for checking
       the presence of the various supported image formats:
       <informalexample>
        <programlisting role="php">
if (ImageTypes() &amp; IMG_GIF) {
    Header("Content-type: image/gif");
    ImageGif($im);
}
elseif (ImageTypes() &amp; IMG_JPG) {
        ... etc.</programlisting>
       </informalexample>
      </para>
     </note>
    </para>
    <para>
     See also <function>ImagePNG</function>, <function>ImageWBMP</function>,
     <function>ImageJPEG</function>, <function>ImageTypes</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagepng">
   <refnamediv>
    <refname>ImagePNG</refname>
    <refpurpose>
     Output a PNG image to either the browser or a file
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagepng</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     The <function>ImagePNG</function> outputs a GD image stream
     (<parameter>im</parameter>) in PNG format to standard output
     (usually the browser) or, if a filename is given by the
     <parameter>filename</parameter> it outputs the image to the file.
     <informalexample>
      <programlisting role="php">
&lt;?php
$im = ImageCreateFromPng("test.png");
ImagePng($im);
?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     See also <function>ImageGIF</function>, <function>ImageWBMP</function>,
     <function>ImageJPEG</function>, <function>ImageTypes</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagejpeg">
   <refnamediv>
    <refname>ImageJPEG</refname>
    <refpurpose>Output image to browser or file</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagejpeg</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>quality</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageJPEG</function> creates the
     <acronym>JPEG</acronym> file in filename from the image
     <parameter>im</parameter>. The <parameter>im</parameter> argument
     is the return from the <function>ImageCreate</function> function.
    </para>
    <para>
     The filename argument is optional, and if left off, the raw image
     stream will be output directly.  To skip the filename argument in
     order to provide a quality argument just use an empty string
     ('').  By sending an image/jpeg content-type using
     <function>header</function>, you can create a PHP script that
     outputs JPEG images directly.
     <note>
      <para>
       JPEG support is only available in PHP if PHP was compiled
       against GD-1.8 or later.
      </para>
     </note>
    </para>
    <para>
     <parameter>quality</parameter> is optional, and ranges from
     0 (worst quality, smaller file) to 100 (best quality, biggest file).
     Default is to 100.
    </para>
    <para>
     If you want to output Progressive JPEGs, you need to set interlacing
     on with the <function>ImageInterlace</function>.
    </para>
    <para>
     See also 
     <function>ImagePNG</function>,
     <function>ImageGIF</function>,
     <function>ImageWBMP</function>,
     <function>ImageInterlace</function> and
     <function>ImageTypes</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagewbmp">
   <refnamediv>
    <refname>ImageWBMP</refname>
    <refpurpose>Output image to browser or file</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imageWBMP</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageWBMP</function> creates the
     <acronym>WBMP</acronym> file in filename from the image
     <parameter>im</parameter>. The <parameter>im</parameter> argument
     is the return from the <function>ImageCreate</function> function.
    </para>
    <para>
     The filename argument is optional, and if left off, the raw image
     stream will be output directly.
     By sending an <acronym>image/vnd.wap.wbmp</acronym> content-type
     using <function>header</function>, you can create
     a PHP script that outputs WBMP images directly.
     <note>
      <para>
       WBMP support is only available in PHP if PHP was compiled
       against GD-1.8 or later.
      </para>
     </note>
    </para>
    <para>
     See also <function>ImagePNG</function>, <function>ImageGIF</function>,
     <function>ImageJPEG</function>, <function>ImageTypes</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imageinterlace">
   <refnamediv>
    <refname>ImageInterlace</refname>
    <refpurpose>Enable or disable interlace</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imageinterlace</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>interlace</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageInterlace</function> turns the interlace bit on or off.
     If interlace is 1 the im image will be interlaced, and if interlace
     is 0 the interlace bit is turned off.
    </para>
    <para>
     If the interlace bit is set and the image is used as a JPEG image,
     the image is created as a progressive JPEG. 
    </para>
    <para>
     This function returns whether the interlace bit is set for the
     image.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imageline">
   <refnamediv>
    <refname>ImageLine</refname>
    <refpurpose>Draw a line</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imageline</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageLine</function> draws a line from
     <parameter>x1</parameter>, <parameter>y1</parameter> to
     <parameter>x2</parameter>, <parameter>y2</parameter> (top left is
     0, 0) in image im of color <parameter>col</parameter>.
    </para>
    <para>
     See also <function>ImageCreate</function> and
     <function>ImageColorAllocate</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imageloadfont">
   <refnamediv>
    <refname>ImageLoadFont</refname>
    <refpurpose>Load a new font</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imageloadfont</methodname>
      <methodparam><type>string</type><parameter>file</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageLoadFont</function> loads a user-defined bitmap
     font and returns an identifier for the font (that is always
     greater than 5, so it will not conflict with the built-in fonts).
    </para>
    <para>
     The font file format is currently binary and architecture
     dependent.  This means you should generate the font files on the
     same type of CPU as the machine you are running PHP on.
    </para>
    <para>
     <table>
      <title>Font file format</title>
      <tgroup cols="3">
       <thead>
       <row>
        <entry>byte position</entry>
        <entry>C data type</entry>
        <entry>description</entry>
       </row>
       </thead>
       <tbody>
        <row>
         <entry>byte 0-3</entry>
         <entry>int</entry>
         <entry>number of characters in the font</entry>
        </row>
        <row>
         <entry>byte 4-7</entry>
         <entry>int</entry>
         <entry>
          value of first character in the font (often 32 for space)
         </entry>
        </row>
        <row>
         <entry>byte 8-11</entry>
         <entry>int</entry>
         <entry>pixel width of each character</entry>
        </row>
        <row>
         <entry>byte 12-15</entry>
         <entry>int</entry>
         <entry>pixel height of each character</entry>
        </row>
        <row>
         <entry>byte 16-</entry>
         <entry>char</entry>
         <entry>
          array with character data, one byte per pixel in each
          character, for a total of (nchars*width*height) bytes.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     See also <function>ImageFontWidth</function> and
     <function>ImageFontHeight</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagepolygon">
   <refnamediv>
    <refname>ImagePolygon</refname>
    <refpurpose>Draw a polygon</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagepolygon</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>array</type><parameter>points</parameter></methodparam>
      <methodparam><type>int</type><parameter>num_points</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImagePolygon</function> creates a polygon in image id.
     <parameter>Points</parameter> is a PHP array containing the
     polygon's vertices, ie. points[0] = x0, points[1] = y0, points[2]
     = x1, points[3] = y1, etc.  <parameter>Num_points</parameter> is
     the total number of vertices.
    </para>
    <para>
     See also <function>imagecreate</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagepsbbox">
   <refnamediv>
    <refname>ImagePSBBox</refname>
    <refpurpose>
     Give the bounding box of a text rectangle using PostScript Type1
     fonts
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>array</type><methodname>imagepsbbox</methodname>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>space</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>tightness</parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>angle</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <parameter>Size</parameter> is expressed in pixels.
    </para>
    <para>
     <parameter>Space</parameter> allows you to change the default
     value of a space in a font.  This amount is added to the normal
     value and can also be negative.
    </para>
    <para>
     <parameter>Tightness</parameter> allows you to control the amount
     of white space between characters. This amount is added to the
     normal character width and can also be negative.
    </para>
    <para>
     <parameter>Angle</parameter> is in degrees.
    </para>
    <para>
     Parameters <parameter>space</parameter> and
     <parameter>tightness</parameter> are expressed in character space
     units, where 1 unit is 1/1000th of an em-square.
    </para>
    <para>
     Parameters <parameter>space</parameter>,
     <parameter>tightness</parameter>, and <parameter>angle</parameter>
     are optional.
    </para>
    <para>
     The bounding box is calculated using information available from
     character metrics, and unfortunately tends to differ slightly
     from the results achieved by actually rasterizing the text. If
     the angle is 0 degrees, you can expect the text to need 1 pixel
     more to every direction.
    </para>
    <para>
     This function returns an array containing the following elements:
     <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry>0</entry>
        <entry>lower left x-coordinate</entry>
       </row>
       <row>
        <entry>1</entry>
        <entry>lower left y-coordinate</entry>
       </row>
       <row>
        <entry>2</entry>
        <entry>upper right x-coordinate</entry>
       </row>
       <row>
        <entry>3</entry>
        <entry>upper right y-coordinate</entry>
       </row>
      </tbody>
     </tgroup>
     </informaltable>
    </para>
    <para>
     See also <function>imagepstext</function>.
    </para>
   </refsect1>
  </refentry>
  
  

<!-- The function in t1lib which this function uses seems to be buggy...
  Currently, just comment out everywhere in the docs and source until time
  permits to find a solution.
  
  <refentry id="function.imagepscopyfont">
   <refnamediv>
    <refname>ImagePSCopyFont</refname>
    <refpurpose>
     Make a copy of an already loaded font for further modification
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepscopyfont</function></funcdef>
      <paramdef>int <parameter>fontindex</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Use this function if you need make further modifications to the
     font, for example extending/condensing, slanting it or changing
     it's character encoding vector, but need to keep the original
     along as well. Note that the font you want to copy must be one
     obtained using <function>ImagePSLoadFont</function>, not a font
     that is itself a copied one. You can although make modifications
     to it before copying.
    </para>
    <para>
     If you use this function, you <emphasis>must</emphasis> free the
     fonts obtained this way yourself and in reverse order. Otherwise
     your script <emphasis>will</emphasis> hang.
    </para>
    <para>
     In the case everything went right, a valid font index will be
     returned and can be used for further purposes. Otherwise the
     function returns &false; and prints a message describing what went
     wrong.
    </para>
    <para>
     See also <function>ImagePSLoadFont</function>.
    </para>
   </refsect1>
  </refentry>
  -->


  
  <refentry id="function.imagepsencodefont">
   <refnamediv>
    <refname>ImagePSEncodeFont</refname>
    <refpurpose>
     Change the character encoding vector of a font
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagepsencodefont</methodname>
      <methodparam><type>int</type><parameter>font_index</parameter></methodparam>
      <methodparam><type>string</type><parameter>encodingfile</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Loads a character encoding vector from from a file and changes
     the fonts encoding vector to it. As a PostScript fonts default
     vector lacks most of the character positions above 127, you'll
     definitely want to change this if you use an other language than
     english. The exact format of this file is described in T1libs
     documentation. T1lib comes with two ready-to-use files,
     IsoLatin1.enc and IsoLatin2.enc.
    </para>
    <para>
     If you find yourself using this function all the time, a much
     better way to define the encoding is to set ps.default_encoding in
     the <link linkend="configuration.file">configuration file</link>
     to point to the right encoding file and all fonts you load will
     automatically have the right encoding.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagepsfreefont">
   <refnamediv>
    <refname>ImagePSFreeFont</refname>
    <refpurpose>Free memory used by a PostScript Type 1 font</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>void</type><methodname>imagepsfreefont</methodname>
      <methodparam><type>int</type><parameter>fontindex</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     See also <function>ImagePSLoadFont</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagepsloadfont">
   <refnamediv>
    <refname>ImagePSLoadFont</refname>
    <refpurpose>Load a PostScript Type 1 font from file</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagepsloadfont</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     In the case everything went right, a valid font index will be
     returned and can be used for further purposes. Otherwise the
     function returns &false; and prints a message describing what went
     wrong, which you cannot read directly, while the output type is image.
    </para>
    <para>
     <programlisting role="php">
&lt;?php
Header ("Content-type: image/jpeg");
$im = ImageCreate (350, 45);
$black = ImageColorAllocate ($im, 0, 0, 0);
$white = ImageColorAllocate ($im, 255, 255, 255);
$font=ImagePsLoadFont("bchbi.pfb");
// or locate your .pfb files on your machine
ImagePsText($im, "Testing... It worked!",
$font, 32, $white, $black, 32, 32);
ImagePsFreeFont($font); 
ImageJpeg($im, "", 100);//for best quality... your mileage may vary
ImageDestroy ($im);
?&gt;
     </programlisting>
    </para>
    <para>
     See also <function>ImagePSFreeFont</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagepsextendfont">
   <refnamediv>
    <refname>ImagePsExtendFont</refname>
    <refpurpose>
     Extend or condense a font
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>bool</type><methodname>imagepsextendfont</methodname>
      <methodparam><type>int</type><parameter>font_index</parameter></methodparam>
      <methodparam><type>float</type><parameter>extend</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Extend or condense a font (<parameter>font_index</parameter>), if
     the value of the <parameter>extend</parameter> parameter is less
     than one you will be condensing the font.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagepsslantfont">
   <refnamediv>
    <refname>ImagePsSlantFont</refname>
    <refpurpose>
     Slant a font
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>bool</type><methodname>imagepsslantfont</methodname>
      <methodparam><type>int</type><parameter>font_index</parameter></methodparam>
      <methodparam><type>float</type><parameter>slant</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     Slant a font given by the <parameter>font_index</parameter>
     parameter with a slant of the value of the
     <parameter>slant</parameter> parameter.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagepstext">
   <refnamediv>
    <refname>ImagePSText</refname>
    <refpurpose>
     To draw a text string over an image using PostScript Type1 fonts
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>array</type><methodname>imagepstext</methodname>
      <methodparam><type>int</type><parameter>image</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>foreground</parameter></methodparam>
      <methodparam><type>int</type><parameter>background</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
       space
       </parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
       tightness
       </parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>
       angle
       </parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
       antialias_steps
       </parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <parameter>Size</parameter> is expressed in pixels.
    </para>
    <para>
     <parameter>Foreground</parameter> is the color in which the text
     will be painted.  <parameter>Background</parameter> is the color
     to which the text will try to fade in with antialiasing. No
     pixels with the color <parameter>background</parameter> are
     actually painted, so the background image does not need to be of
     solid color.
    </para>
    <para>
     The coordinates given by <parameter>x</parameter>,
     <parameter>y</parameter> will define the origin (or reference
     point) of the first character (roughly the lower-left corner of
     the character).  This is different from the
     <function>ImageString</function>, where <parameter>x</parameter>,
     <parameter>y</parameter> define the upper-right corner of the
     first character. Refer to PostScipt documentation about fonts and
     their measuring system if you have trouble understanding how this
     works.
    </para>
    <para>
     <parameter>Space</parameter> allows you to change the default
     value of a space in a font.  This amount is added to the normal
     value and can also be negative.
    </para>
    <para>
     <parameter>Tightness</parameter> allows you to control the amount
     of white space between characters. This amount is added to the
     normal character width and can also be negative.
    </para>
    <para>
     <parameter>Angle</parameter> is in degrees.
    </para>
    <para>
     <parameter>Antialias_steps</parameter> allows you to control the
     number of colours used for antialiasing text. Allowed values are
     4 and 16. The higher value is recommended for text sizes lower
     than 20, where the effect in text quality is quite visible.  With
     bigger sizes, use 4. It's less computationally intensive.
    </para>
    <para>
     Parameters <parameter>space</parameter> and
     <parameter>tightness</parameter> are expressed in character space
     units, where 1 unit is 1/1000th of an em-square.
    </para>
    <para>
     Parameters <parameter>space</parameter>,
     <parameter>tightness</parameter>, <parameter>angle</parameter>
     and <parameter>antialias</parameter> are optional.
    </para>
    <para>
     This function returns an array containing the following elements:
     <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry>0</entry>
        <entry>lower left x-coordinate</entry>
       </row>
       <row>
        <entry>1</entry>
        <entry>lower left y-coordinate</entry>
       </row>
       <row>
        <entry>2</entry>
        <entry>upper right x-coordinate</entry>
       </row>
       <row>
        <entry>3</entry>
        <entry>upper right y-coordinate</entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable></para>
    <para>
     See also <function>imagepsbbox</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagerectangle">
   <refnamediv>
    <refname>ImageRectangle</refname>
    <refpurpose>Draw a rectangle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagerectangle</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageRectangle</function> creates a rectangle of color
     col in image im starting at upper left coordinate x1, y1 and
     ending at bottom right coordinate x2, y2.  0, 0 is the top left
     corner of the image.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagesetpixel">
   <refnamediv>
    <refname>ImageSetPixel</refname>
    <refpurpose>Set a single pixel</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagesetpixel</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageSetPixel</function> draws a pixel at
     <parameter>x</parameter>, <parameter>y</parameter> (top left is
     0, 0) in image <parameter>im</parameter> of color
     <parameter>col</parameter>.
    </para>
    <para>
     See also <function>ImageCreate</function> and
     <function>ImageColorAllocate</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagesetbrush">
   <refnamediv>
    <refname>ImageSetBrush</refname>
    <refpurpose>Set the brush image for line drawing</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagesetbrush</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>resource</type><parameter>brush</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageSetBrush</function> sets the brush image to be
     used by all line drawing functions (such as <function>ImageLine</function>
     and <function>ImagePolygon</function>) when drawing with the special
     colors <literal>IMG_COLOR_BRUSHED</literal> or <literal>IMG_COLOR_STYLEDBRUSHED</literal>.
    </para>
    <note>
     <para>You need not take special action when you are finished with a brush, but if you
      destroy the brush image, you must not use the <literal>IMG_COLOR_BRUSHED</literal> or <literal>IMG_COLOR_STYLEDBRUSHED</literal>
     colors until you have set a new brush image!</para>
    </note>
    <note><para>This function was added in PHP 4.0.6</para></note>
   </refsect1>
  </refentry>

  <refentry id="function.imagesetstyle">
   <refnamediv>
    <refname>ImageSetStyle</refname>
    <refpurpose>Set the style for line drawing
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagesetstyle</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>array</type><parameter>style</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageSetStyle</function> sets the style to be used by all 
     line drawing functions (such as <function>ImageLine</function>
     and <function>ImagePolygon</function>) when drawing with the special
     color <literal>IMG_COLOR_STYLED</literal> or lines of images with color
     <literal>IMG_COLOR_STYLEDBRUSHED</literal>.
    </para>
    <para>
     The <parameter>style</parameter> parameter is an array of pixels.
     Following example script draws a dashed line from upper left to 
     lower right corner of the canvas:
     <example>
      <title>ImageSetStyle</title>
      <programlisting role="php">
&lt;?php
Header ("Content-type: image/png");
$im  = imagecreate (100, 100);
$w   = ImageColorAllocate ($im, 255, 255, 255);
$red = ImageColorAllocate ($im, 255, 0, 0);
     
/* Draw a dashed line, 5 red pixels, 5 white pixels */
$style=array($red,$red,$red,$red,$red,$w,$w,$w,$w,$w);
ImageSetStyle($im, $style);
ImageLine($im, 0, 0, 100, 100, IMG_COLOR_STYLED);

/* Draw a line of happy faces using ImageSetBrush() with ImageSetStyle */
$style=array($w,$w,$w,$w,$w,$w,$w,$w,$w,$w,$w,$w,$red);
ImageSetStyle($im, $style);

$brush=ImageCreateFromPng("http://www.libpng.org/pub/png/images/smile.happy.png");
ImageColorTransparent($brush, $w);
ImageSetBrush($im, $brush);
ImageLine($im, 100, 0, 0, 100, IMG_COLOR_STYLEDBRUSHED);

ImagePng($im);
ImageDestroy ($im);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     See also <function>ImageSetBrush</function>, <function>ImageLine</function>.
    </para>
    <note><para>This function was added in PHP 4.0.6</para></note>
   </refsect1>
  </refentry>

  <refentry id="function.imagesettile">
   <refnamediv>
    <refname>ImageSetTile</refname>
    <refpurpose>Set the tile image for filling</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagesettile</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>resource</type><parameter>tile</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageSetTile</function> sets the tile image to be
     used by all region filling functions (such as <function>ImageFill</function>
     and <function>ImageFilledPolygon</function>) when filling with the special
     color <literal>IMG_COLOR_TILED</literal>.
    </para>
    <para>
     A tile is an image used to fill an area with a repeated pattern. <emphasis>Any</emphasis>
     GD image can be used as a tile, and by setting the transparent color index of the tile
     image with <function>ImageColorTransparent</function>, a tile allows certain parts
     of the underlying area to shine through can be created.
    </para>
    <note>
     <para>You need not take special action when you are finished with a tile, but if you
      destroy the tile image, you must not use the <literal>IMG_COLOR_TILED</literal> color until you have
     set a new tile image!</para>
    </note>
    <note><para>This function was added in PHP 4.0.6</para></note>
   </refsect1>
  </refentry>

  <refentry id="function.imagesetthickness">
   <refnamediv>
    <refname>ImageSetThickness</refname>
    <refpurpose>Set the thickness for line drawing</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>void</type><methodname>imagesetthickness</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>thickness</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageSetThickness</function> sets the thickness of the lines
     drawn when drawing rectangles, polygons, ellipses etc. etc. to
     <parameter>thickness</parameter> pixels.
    </para>
    <note><para>This function was added in PHP 4.0.6 and requires GD 2.0.1 or later</para></note>
   </refsect1>
  </refentry>

  <refentry id="function.imagestring">
   <refnamediv>
    <refname>ImageString</refname>
    <refpurpose>Draw a string horizontally</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagestring</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageString</function> draws the string
     <parameter>s</parameter> in the image identified by
     <parameter>im</parameter> at coordinates
     <parameter>x</parameter>, <parameter>y</parameter> (top left is
     0, 0) in color <parameter>col</parameter>.  If font is 1, 2, 3, 4
     or 5, a built-in font is used.
    </para>
    <para>
     See also <function>ImageLoadFont</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagestringup">
   <refnamediv>
    <refname>ImageStringUp</refname>
    <refpurpose>Draw a string vertically</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagestringup</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageStringUp</function> draws the string
     <parameter>s</parameter> vertically in the image identified by
     <parameter>im</parameter> at coordinates
     <parameter>x</parameter>, <parameter>y</parameter> (top left is
     0, 0) in color <parameter>col</parameter>.  If font is 1, 2, 3, 4
     or 5, a built-in font is used.
    </para>
    <para>
     See also <function>ImageLoadFont</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagesx">
   <refnamediv>
    <refname>ImageSX</refname>
    <refpurpose>Get image width</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagesx</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageSX</function> returns the width of the image
     identified by <parameter>im</parameter>.
    </para>
    <para>
     See also <function>ImageCreate</function> and
     <function>ImageSY</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagesy">
   <refnamediv>
    <refname>ImageSY</refname>
    <refpurpose>Get image height</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagesy</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageSY</function> returns the height of the image
     identified by <parameter>im</parameter>.
    </para>
    <para>
     See also <function>ImageCreate</function> and
     <function>ImageSX</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagettfbbox">
   <refnamediv>
    <refname>ImageTTFBBox</refname>
    <refpurpose>
     Give the bounding box of a text using TypeType fonts
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>array</type><methodname>imagettfbbox</methodname>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>angle</parameter></methodparam>
      <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     This function calculates and returns the bounding box in pixels
     for a TrueType text.
     <variablelist>
     <varlistentry>
     <term>
     <parameter>text</parameter>
     </term>
     <listitem>
      <simpara>The string to be measured.</simpara>
     </listitem>
     </varlistentry>
     <varlistentry>
     <term>
     <parameter>size</parameter>
     </term>
     <listitem>
      <simpara>The font size in pixels.</simpara>
     </listitem>
     </varlistentry>
     <varlistentry>
     <term>
     <parameter>fontfile</parameter>
     </term>
     <listitem>
      <simpara>
       The name of the TrueType font file.  (Can also be an URL.)
      </simpara>
     </listitem>
     </varlistentry>
     <varlistentry>
     <term>
     <parameter>angle</parameter>
     </term>
     <listitem>
      <simpara>
       Angle in degrees in which <parameter>text</parameter> will be
       measured.
      </simpara>
     </listitem>
     </varlistentry>
     </variablelist>
     <function>ImageTTFBBox</function> returns an array with 8
     elements representing four points making the bounding box of the
     text:
     <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry>0</entry>
        <entry>lower left corner, X position</entry>
       </row>
       <row>
        <entry>1</entry>
        <entry>lower left corner, Y position</entry>
       </row>
       <row>
        <entry>2</entry>
        <entry>lower right corner, X position</entry>
       </row>
       <row>
        <entry>3</entry>
        <entry>lower right corner, Y position</entry>
       </row>
       <row>
        <entry>4</entry>
        <entry>upper right corner, X position</entry>
       </row>
       <row>
        <entry>5</entry>
        <entry>upper right corner, Y position</entry>
       </row>
       <row>
        <entry>6</entry>
        <entry>upper left corner, X position</entry>
       </row>
       <row>
        <entry>7</entry>
        <entry>upper left corner, Y position</entry>
       </row>
      </tbody>
     </tgroup>
     </informaltable>
     The points are relative to the <emphasis>text</emphasis>
     regardless of the angle, so "upper left" means in the top
     left-hand corner seeing the text horizontallty.
    </para>
    <para>
     This function requires both the GD library and the FreeType
     library.
    </para>
    <para>
     See also <function>ImageTTFText</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagettftext">
   <refnamediv>
    <refname>ImageTTFText</refname>
    <refpurpose>
     Write text to the image using TrueType fonts
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>array</type><methodname>imagettftext</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>angle</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
      <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     <function>ImageTTFText</function> draws the string
     <parameter>text</parameter> in the image identified by
     <parameter>im</parameter>, starting at coordinates
     <parameter>x</parameter>, <parameter>y</parameter> (top left is
     0, 0), at an angle of <parameter>angle</parameter> in color
     <parameter>col</parameter>, using the TrueType font file
     identified by <parameter>fontfile</parameter>.
    </para>
    <para>
     The coordinates given by <parameter>x</parameter>,
     <parameter>y</parameter> will define the basepoint of the first
     character (roughly the lower-left corner of the character).  This
     is different from the <function>ImageString</function>, where x,
     y define the upper-right corner of the first character.
    </para>
    <para>
     <parameter>Angle</parameter> is in degrees, with 0 degrees being
     left-to-right reading text (3 o'clock direction), and higher
     values representing a counter-clockwise rotation.  (i.e., a value
     of 90 would result in bottom-to-top reading text).
    </para>
    <para>
     <parameter>Fontfile</parameter> is the path to the TrueType font
     you wish to use.
    </para>
    <para>
     <parameter>Text</parameter> is the text string which may include
     UTF-8 character sequences (of the form: &amp;#123;) to access
     characters in a font beyond the first 255.
    </para>
    <para>
     <parameter>Col</parameter> is the color index.  Using the
     negative of a color index has the effect of turning off
     antialiasing.
    </para>
    <para>
     <function>ImageTTFText</function> returns an array with 8
     elements representing four points making the bounding box of the
     text.  The order of the points is upper left, upper right, lower
     right, lower left.  The points are relative to the text
     regardless of the angle, so "upper left" means in the top
     left-hand corner when you see the text horizontallty.
    </para>
    <para>
     This example script will produce a black GIF 400x30 pixels, with
     the words "Testing..."  in white in the font Arial.
     <example>
      <title>ImageTTFText</title>
      <programlisting role="php">
&lt;?php
Header ("Content-type: image/gif");
$im = imagecreate (400, 30);
$black = ImageColorAllocate ($im, 0, 0, 0);
$white = ImageColorAllocate ($im, 255, 255, 255);
ImageTTFText ($im, 20, 0, 10, 20, $white, "/path/arial.ttf",
              "Testing... Omega: &amp;#937;");
ImageGif ($im);
ImageDestroy ($im);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     This function requires both the GD library and the <ulink url="&url.freetype;">FreeType</ulink> library.
    </para>
    <para>
     See also <function>ImageTTFBBox</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagetypes">
   <refnamediv>
    <refname>ImageTypes</refname>
    <refpurpose>
     Return the image types supported by this PHP build
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>int</type><methodname>imagetypes</methodname>
      <void/>
     
    </methodsynopsis>
    <para>
     This function returns a bit-field corresponding to the image
     formats supported by the version of GD linked into PHP.  The
     following bits are returned, <literal>IMG_GIF</literal> | <literal>IMG_JPG</literal> | <literal>IMG_PNG</literal> |
     <literal>IMG_WBMP</literal>.  To check for PNG support, for example, do this:
     <example>
      <title>ImageTypes</title>
      <programlisting role="php">
&lt;?php
if (ImageTypes() &amp; IMG_PNG) {
    echo "PNG Support is enabled";
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.read-exif-data">
   <refnamediv>
    <refname>read_exif_data</refname>
    <refpurpose>Read the EXIF headers from a JPEG</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     
      <type>array</type><methodname>read_exif_data</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     
    </methodsynopsis>
    <para>
     The <function>read_exif_data</function> function reads the
     EXIF headers from a JPEG image file.  It returns an associative
     array where the indexes are the Exif header names and the values
     are the values associated with those Exif headers.  Exif headers
     tend to be present in JPEG images generated by digital cameras, but
     unfortunately each digital camera maker has a different idea of how
     to actually tag their images, so you can't always rely on a specific
     Exif header being present.
     <example>
      <title>read_exif_data</title>
      <programlisting role="php">
&lt;?php
 $exif = read_exif_data ('p0001807.jpg');
 while(list($k,$v)=each($exif)) {
   echo "$k: $v&lt;br>\n";
 }
?>

Output:
FileName: p0001807.jpg
FileDateTime: 929353056
FileSize: 378599
CameraMake: Eastman Kodak Company
CameraModel: KODAK DC265 ZOOM DIGITAL CAMERA (V01.00)
DateTime: 1999:06:14 01:37:36
Height: 1024
Width: 1536
IsColor: 1
FlashUsed: 0
FocalLength:  8.0mm
RawFocalLength: 8
ExposureTime:  0.004 s (1/250)
RawExposureTime: 0.0040000001899898
ApertureFNumber: f/ 9.5
RawApertureFNumber: 9.5100002288818
FocusDistance: 16.66m
RawFocusDistance: 16.659999847412
Orientation: 1
ExifVersion: 0200
      </programlisting>
     </example>
    </para>
    <para>
     <note>
      <simpara>
       This function is only available in PHP 4 compiled using --enable-exif
      </simpara>
      <simpara>
       This function does not require the GD image library.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>
  
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
